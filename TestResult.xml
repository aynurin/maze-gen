<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-run id="2" testcasecount="709" result="Passed" total="154" passed="154" failed="0" inconclusive="0" skipped="0" asserts="4675" engine-version="3.4.1.0" clr-version="4.0.30319.42000" start-time="2023-12-27 17:19:10Z" end-time="2023-12-27 17:19:11Z" duration="0.464022">
  <command-line><![CDATA[/usr/lib/nunit3/nunit3-console.exe build/Debug/tests/tests.dll --where=Category!=Load]]></command-line>
  <filter>
    <not>
      <prop name="Category">Load</prop>
    </not>
  </filter>
  <test-suite type="Assembly" id="0-1737" name="tests.dll" fullname="/home/data/repos/github.com/aynurin/maze-gen/build/Debug/tests/tests.dll" runstate="Runnable" testcasecount="709" result="Passed" start-time="2023-12-27T17:19:10.6454520Z" end-time="2023-12-27T17:19:11.0816860Z" duration="0.436136" total="154" passed="154" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="4675">
    <environment framework-version="3.14.0.0" clr-version="4.0.30319.42000" os-version="Unix 6.1.49.1" platform="Unix" cwd="/home/data/repos/github.com/aynurin/maze-gen" machine-name="lightview" user="shav" user-domain="lightview" culture="en-US" uiculture="en-US" os-architecture="x64" />
    <settings>
      <setting name="WorkDirectory" value="/home/data/repos/github.com/aynurin/maze-gen" />
      <setting name="ImageRuntimeVersion" value="4.0.30319" />
      <setting name="ImageTargetFrameworkName" value=".NETFramework,Version=v4.7" />
      <setting name="ImageRequiresX86" value="False" />
      <setting name="ImageRequiresDefaultAppDomainAssemblyResolver" value="False" />
      <setting name="NumberOfTestWorkers" value="24" />
    </settings>
    <properties>
      <property name="_PID" value="561107" />
      <property name="_APPDOMAIN" value="test-domain-" />
    </properties>
    <test-suite type="SetUpFixture" id="0-1003" name="[default namespace]" fullname="SetUpTests" classname="SetUpTests" runstate="Runnable" testcasecount="709" result="Passed" start-time="2023-12-27T17:19:10.6508260Z" end-time="2023-12-27T17:19:11.0816760Z" duration="0.430850" total="154" passed="154" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="4675">
      <properties />
      <test-suite type="TestSuite" id="0-1738" name="Nour" fullname="Nour" runstate="Runnable" testcasecount="707" result="Passed" start-time="2023-12-27T17:19:10.6533080Z" end-time="2023-12-27T17:19:11.0705700Z" duration="0.417262" total="152" passed="152" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="623">
        <properties />
        <test-suite type="TestSuite" id="0-1739" name="Play" fullname="Nour.Play" runstate="Runnable" testcasecount="707" result="Passed" start-time="2023-12-27T17:19:10.6533740Z" end-time="2023-12-27T17:19:11.0705660Z" duration="0.417192" total="152" passed="152" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="623">
          <properties />
          <test-suite type="TestSuite" id="0-1741" name="Areas" fullname="Nour.Play.Areas" runstate="Runnable" testcasecount="113" result="Passed" start-time="2023-12-27T17:19:10.6533830Z" end-time="2023-12-27T17:19:10.8406400Z" duration="0.187258" total="62" passed="62" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="193">
            <properties />
            <test-suite type="TestSuite" id="0-1742" name="Evolving" fullname="Nour.Play.Areas.Evolving" runstate="Runnable" testcasecount="109" result="Passed" start-time="2023-12-27T17:19:10.6533890Z" end-time="2023-12-27T17:19:10.8394260Z" duration="0.186037" total="58" passed="58" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="175">
              <properties />
              <test-suite type="TestFixture" id="0-1621" name="AreaDistributorTest" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" testcasecount="73" result="Passed" start-time="2023-12-27T17:19:10.6534140Z" end-time="2023-12-27T17:19:10.7272470Z" duration="0.073833" total="23" passed="23" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="46">
                <properties />
                <test-case id="0-1622" name="AreaDistributorTest_OneTest" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OneTest" methodname="AreaDistributorTest_OneTest" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="976367832" result="Passed" start-time="2023-12-27T17:19:10.6534800Z" end-time="2023-12-27T17:19:10.6937060Z" duration="0.040298" asserts="2">
                  <properties />
                </test-case>
                <test-suite type="ParameterizedMethod" id="0-1635" name="AreaDistributorTest_OverlapTwo" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2023-12-27T17:19:10.6950560Z" end-time="2023-12-27T17:19:10.7147090Z" duration="0.019653" total="10" passed="10" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="20">
                  <properties />
                  <test-case id="0-1625" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P2x2;S4x4 P5x5;S4x4&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P2x2;S4x4 P5x5;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1938976591" result="Passed" start-time="2023-12-27T17:19:10.6951500Z" end-time="2023-12-27T17:19:10.7013580Z" duration="0.006208" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1626" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P5x2;S4x4 P2x5;S4x4&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P5x2;S4x4 P2x5;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="233683337" result="Passed" start-time="2023-12-27T17:19:10.7013660Z" end-time="2023-12-27T17:19:10.7024950Z" duration="0.001129" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1627" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P2x5;S4x4 P5x2;S4x4&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P2x5;S4x4 P5x2;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="298791137" result="Passed" start-time="2023-12-27T17:19:10.7025020Z" end-time="2023-12-27T17:19:10.7036240Z" duration="0.001122" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1628" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P5x5;S4x4 P2x2;S4x4&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P5x5;S4x4 P2x2;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="2112398551" result="Passed" start-time="2023-12-27T17:19:10.7036300Z" end-time="2023-12-27T17:19:10.7047380Z" duration="0.001108" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1629" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P4x4;S4x4 P3x3;S4x4&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P4x4;S4x4 P3x3;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="500150605" result="Passed" start-time="2023-12-27T17:19:10.7047450Z" end-time="2023-12-27T17:19:10.7068720Z" duration="0.002127" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1630" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P4x3;S4x4 P3x4;S4x4&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P4x3;S4x4 P3x4;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1441362615" result="Passed" start-time="2023-12-27T17:19:10.7068790Z" end-time="2023-12-27T17:19:10.7079750Z" duration="0.001096" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1631" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P3.5x3.5;S4x4 P3.5x3.5;S4x4&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P3.5x3.5;S4x4 P3.5x3.5;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1113142755" result="Passed" start-time="2023-12-27T17:19:10.7079820Z" end-time="2023-12-27T17:19:10.7102210Z" duration="0.002239" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1632" name="AreaDistributorTest_OverlapTwo(&quot;16x16: P4x4;S8x8 P5x9;S2x2&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;16x16: P4x4;S8x8 P5x9;S2x2&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1560631068" result="Passed" start-time="2023-12-27T17:19:10.7102290Z" end-time="2023-12-27T17:19:10.7114290Z" duration="0.001200" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1633" name="AreaDistributorTest_OverlapTwo(&quot;16x16: P4x4;S8x8 P5x7;S4x4&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;16x16: P4x4;S8x8 P5x7;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="808835098" result="Passed" start-time="2023-12-27T17:19:10.7114350Z" end-time="2023-12-27T17:19:10.7126010Z" duration="0.001166" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1634" name="AreaDistributorTest_OverlapTwo(&quot;16x16: P5x5;S6x6 P6x6;S4x4&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;16x16: P5x5;S6x6 P6x6;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="2042959227" result="Passed" start-time="2023-12-27T17:19:10.7126080Z" end-time="2023-12-27T17:19:10.7137610Z" duration="0.001154" asserts="2">
                    <properties />
                  </test-case>
                </test-suite>
                <test-case id="0-1623" name="AreaDistributorTest_SidePressure" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SidePressure" methodname="AreaDistributorTest_SidePressure" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1699808364" result="Passed" start-time="2023-12-27T17:19:10.7154900Z" end-time="2023-12-27T17:19:10.7209770Z" duration="0.005487" asserts="2">
                  <properties />
                </test-case>
                <test-suite type="ParameterizedMethod" id="0-1646" name="AreaDistributorTest_SingleMapForce" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2023-12-27T17:19:10.7209880Z" end-time="2023-12-27T17:19:10.7256780Z" duration="0.004689" total="10" passed="10" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="20">
                  <properties />
                  <test-case id="0-1636" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P1x2;S2x2&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P1x2;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="890104047" result="Passed" start-time="2023-12-27T17:19:10.7210040Z" end-time="2023-12-27T17:19:10.7216560Z" duration="0.000653" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1637" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P2x2;S2x2&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P2x2;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="2098350394" result="Passed" start-time="2023-12-27T17:19:10.7216640Z" end-time="2023-12-27T17:19:10.7220960Z" duration="0.000433" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1638" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P3x2;S2x2&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P3x2;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1413717844" result="Passed" start-time="2023-12-27T17:19:10.7221030Z" end-time="2023-12-27T17:19:10.7225440Z" duration="0.000441" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1639" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P1x5;S2x2&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P1x5;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1784823738" result="Passed" start-time="2023-12-27T17:19:10.7225510Z" end-time="2023-12-27T17:19:10.7229630Z" duration="0.000413" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1640" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P2x5;S2x2&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P2x5;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1271105313" result="Passed" start-time="2023-12-27T17:19:10.7229690Z" end-time="2023-12-27T17:19:10.7233660Z" duration="0.000397" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1641" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P3x5;S2x2&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P3x5;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1397251608" result="Passed" start-time="2023-12-27T17:19:10.7233730Z" end-time="2023-12-27T17:19:10.7237850Z" duration="0.000412" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1642" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P1x8;S2x2&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P1x8;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="869094368" result="Passed" start-time="2023-12-27T17:19:10.7237910Z" end-time="2023-12-27T17:19:10.7242220Z" duration="0.000431" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1643" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P2x8;S2x2&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P2x8;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="2103921723" result="Passed" start-time="2023-12-27T17:19:10.7242280Z" end-time="2023-12-27T17:19:10.7246580Z" duration="0.000430" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1644" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P3x8;S2x2&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P3x8;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1041674119" result="Passed" start-time="2023-12-27T17:19:10.7246640Z" end-time="2023-12-27T17:19:10.7251000Z" duration="0.000436" asserts="2">
                    <properties />
                  </test-case>
                  <test-case id="0-1645" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P-1x-4;S2x2&quot;)" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P-1x-4;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="74430915" result="Passed" start-time="2023-12-27T17:19:10.7251060Z" end-time="2023-12-27T17:19:10.7256690Z" duration="0.000563" asserts="2">
                    <properties />
                  </test-case>
                </test-suite>
                <test-case id="0-1624" name="AreaDistributorTest_TwoTest" fullname="Nour.Play.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_TwoTest" methodname="AreaDistributorTest_TwoTest" classname="Nour.Play.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="57202555" result="Passed" start-time="2023-12-27T17:19:10.7256850Z" end-time="2023-12-27T17:19:10.7272150Z" duration="0.001530" asserts="2">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="0-1698" name="EvolvingSimulatorTest" fullname="Nour.Play.Areas.Evolving.EvolvingSimulatorTest" classname="Nour.Play.Areas.Evolving.EvolvingSimulatorTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-12-27T17:19:10.7276620Z" end-time="2023-12-27T17:19:10.8274590Z" duration="0.099797" total="2" passed="2" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="2">
                <properties />
                <test-case id="0-1700" name="EvolvingSimulator_ReturnsEpochsIfEvolitionIsNotComplete" fullname="Nour.Play.Areas.Evolving.EvolvingSimulatorTest.EvolvingSimulator_ReturnsEpochsIfEvolitionIsNotComplete" methodname="EvolvingSimulator_ReturnsEpochsIfEvolitionIsNotComplete" classname="Nour.Play.Areas.Evolving.EvolvingSimulatorTest" runstate="Runnable" seed="295588737" result="Passed" start-time="2023-12-27T17:19:10.7277090Z" end-time="2023-12-27T17:19:10.8251620Z" duration="0.097453" asserts="1">
                  <properties />
                </test-case>
                <test-case id="0-1699" name="EvolvingSimulator_ThrowsIfMaxEpochsIsZero" fullname="Nour.Play.Areas.Evolving.EvolvingSimulatorTest.EvolvingSimulator_ThrowsIfMaxEpochsIsZero" methodname="EvolvingSimulator_ThrowsIfMaxEpochsIsZero" classname="Nour.Play.Areas.Evolving.EvolvingSimulatorTest" runstate="Runnable" seed="1210126324" result="Passed" start-time="2023-12-27T17:19:10.8251750Z" end-time="2023-12-27T17:19:10.8274430Z" duration="0.002268" asserts="1">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="0-1701" name="FloatingAreaTest" fullname="Nour.Play.Areas.Evolving.FloatingAreaTest" classname="Nour.Play.Areas.Evolving.FloatingAreaTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-12-27T17:19:10.8274720Z" end-time="2023-12-27T17:19:10.8311030Z" duration="0.003631" total="3" passed="3" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="6">
                <properties />
                <test-case id="0-1704" name="Contains" fullname="Nour.Play.Areas.Evolving.FloatingAreaTest.Contains" methodname="Contains" classname="Nour.Play.Areas.Evolving.FloatingAreaTest" runstate="Runnable" seed="626142434" result="Passed" start-time="2023-12-27T17:19:10.8275170Z" end-time="2023-12-27T17:19:10.8279510Z" duration="0.000434" asserts="2">
                  <properties />
                </test-case>
                <test-case id="0-1703" name="Overlaps" fullname="Nour.Play.Areas.Evolving.FloatingAreaTest.Overlaps" methodname="Overlaps" classname="Nour.Play.Areas.Evolving.FloatingAreaTest" runstate="Runnable" seed="2085915009" result="Passed" start-time="2023-12-27T17:19:10.8279590Z" end-time="2023-12-27T17:19:10.8281640Z" duration="0.000205" asserts="2">
                  <properties />
                </test-case>
                <test-case id="0-1702" name="Parse" fullname="Nour.Play.Areas.Evolving.FloatingAreaTest.Parse" methodname="Parse" classname="Nour.Play.Areas.Evolving.FloatingAreaTest" runstate="Runnable" seed="1984149464" result="Passed" start-time="2023-12-27T17:19:10.8281710Z" end-time="2023-12-27T17:19:10.8310880Z" duration="0.002917" asserts="2">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="0-1705" name="ForceFormulaTestTest" fullname="Nour.Play.Areas.Evolving.ForceFormulaTestTest" classname="Nour.Play.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" testcasecount="8" result="Passed" start-time="2023-12-27T17:19:10.8311150Z" end-time="2023-12-27T17:19:10.8335990Z" duration="0.002484" total="8" passed="8" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="42">
                <properties />
                <test-case id="0-1711" name="CollideForce_Negative" fullname="Nour.Play.Areas.Evolving.ForceFormulaTestTest.CollideForce_Negative" methodname="CollideForce_Negative" classname="Nour.Play.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="1037011890" result="Passed" start-time="2023-12-27T17:19:10.8311600Z" end-time="2023-12-27T17:19:10.8319700Z" duration="0.000811" asserts="9">
                  <properties />
                </test-case>
                <test-case id="0-1710" name="CollideForce_Positive" fullname="Nour.Play.Areas.Evolving.ForceFormulaTestTest.CollideForce_Positive" methodname="CollideForce_Positive" classname="Nour.Play.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="901046227" result="Passed" start-time="2023-12-27T17:19:10.8319780Z" end-time="2023-12-27T17:19:10.8322950Z" duration="0.000318" asserts="9">
                  <properties />
                </test-case>
                <test-case id="0-1707" name="NormalForce_Negative" fullname="Nour.Play.Areas.Evolving.ForceFormulaTestTest.NormalForce_Negative" methodname="NormalForce_Negative" classname="Nour.Play.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="1278736580" result="Passed" start-time="2023-12-27T17:19:10.8323020Z" end-time="2023-12-27T17:19:10.8326690Z" duration="0.000366" asserts="3">
                  <properties />
                </test-case>
                <test-case id="0-1709" name="NormalForce_NegativeCapped" fullname="Nour.Play.Areas.Evolving.ForceFormulaTestTest.NormalForce_NegativeCapped" methodname="NormalForce_NegativeCapped" classname="Nour.Play.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="30915309" result="Passed" start-time="2023-12-27T17:19:10.8326760Z" end-time="2023-12-27T17:19:10.8328340Z" duration="0.000159" asserts="5">
                  <properties />
                </test-case>
                <test-case id="0-1706" name="NormalForce_Positive" fullname="Nour.Play.Areas.Evolving.ForceFormulaTestTest.NormalForce_Positive" methodname="NormalForce_Positive" classname="Nour.Play.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="2088167040" result="Passed" start-time="2023-12-27T17:19:10.8328410Z" end-time="2023-12-27T17:19:10.8329510Z" duration="0.000110" asserts="3">
                  <properties />
                </test-case>
                <test-case id="0-1708" name="NormalForce_PositiveCapped" fullname="Nour.Play.Areas.Evolving.ForceFormulaTestTest.NormalForce_PositiveCapped" methodname="NormalForce_PositiveCapped" classname="Nour.Play.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="1327110026" result="Passed" start-time="2023-12-27T17:19:10.8329570Z" end-time="2023-12-27T17:19:10.8331000Z" duration="0.000143" asserts="5">
                  <properties />
                </test-case>
                <test-case id="0-1713" name="OverlapForce_Negative" fullname="Nour.Play.Areas.Evolving.ForceFormulaTestTest.OverlapForce_Negative" methodname="OverlapForce_Negative" classname="Nour.Play.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="1050135933" result="Passed" start-time="2023-12-27T17:19:10.8331070Z" end-time="2023-12-27T17:19:10.8333480Z" duration="0.000241" asserts="4">
                  <properties />
                </test-case>
                <test-case id="0-1712" name="OverlapForce_Positive" fullname="Nour.Play.Areas.Evolving.ForceFormulaTestTest.OverlapForce_Positive" methodname="OverlapForce_Positive" classname="Nour.Play.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="1335101305" result="Passed" start-time="2023-12-27T17:19:10.8333550Z" end-time="2023-12-27T17:19:10.8335880Z" duration="0.000233" asserts="4">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="0-1714" name="SideToSideForceProducerTest" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" testcasecount="22" result="Passed" start-time="2023-12-27T17:19:10.8336110Z" end-time="2023-12-27T17:19:10.8394190Z" duration="0.005808" total="22" passed="22" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="79">
                <properties />
                <test-case id="0-1732" name="GetAxisDistance_Collide" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Collide" methodname="GetAxisDistance_Collide" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="792009212" result="Passed" start-time="2023-12-27T17:19:10.8336580Z" end-time="2023-12-27T17:19:10.8346180Z" duration="0.000960" asserts="6">
                  <properties />
                </test-case>
                <test-case id="0-1735" name="GetAxisDistance_Contain1" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Contain1" methodname="GetAxisDistance_Contain1" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="123314938" result="Passed" start-time="2023-12-27T17:19:10.8346260Z" end-time="2023-12-27T17:19:10.8349590Z" duration="0.000333" asserts="6">
                  <properties />
                </test-case>
                <test-case id="0-1736" name="GetAxisDistance_Contain2" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Contain2" methodname="GetAxisDistance_Contain2" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="862277560" result="Passed" start-time="2023-12-27T17:19:10.8349650Z" end-time="2023-12-27T17:19:10.8352610Z" duration="0.000296" asserts="6">
                  <properties />
                </test-case>
                <test-case id="0-1730" name="GetAxisDistance_Normal1" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Normal1" methodname="GetAxisDistance_Normal1" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="975417670" result="Passed" start-time="2023-12-27T17:19:10.8352680Z" end-time="2023-12-27T17:19:10.8355510Z" duration="0.000283" asserts="6">
                  <properties />
                </test-case>
                <test-case id="0-1731" name="GetAxisDistance_Normal2" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Normal2" methodname="GetAxisDistance_Normal2" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="997190859" result="Passed" start-time="2023-12-27T17:19:10.8355580Z" end-time="2023-12-27T17:19:10.8358350Z" duration="0.000278" asserts="6">
                  <properties />
                </test-case>
                <test-case id="0-1733" name="GetAxisDistance_Overlap1" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Overlap1" methodname="GetAxisDistance_Overlap1" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1183707181" result="Passed" start-time="2023-12-27T17:19:10.8358420Z" end-time="2023-12-27T17:19:10.8361200Z" duration="0.000279" asserts="6">
                  <properties />
                </test-case>
                <test-case id="0-1734" name="GetAxisDistance_Overlap2" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Overlap2" methodname="GetAxisDistance_Overlap2" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="2145890875" result="Passed" start-time="2023-12-27T17:19:10.8361270Z" end-time="2023-12-27T17:19:10.8364090Z" duration="0.000283" asserts="6">
                  <properties />
                </test-case>
                <test-case id="0-1724" name="GetOpposingForce_CentersInside_NoOpposingForce" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_CentersInside_NoOpposingForce" methodname="GetOpposingForce_CentersInside_NoOpposingForce" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1812568481" result="Passed" start-time="2023-12-27T17:19:10.8364160Z" end-time="2023-12-27T17:19:10.8366390Z" duration="0.000224" asserts="2">
                  <properties />
                </test-case>
                <test-case id="0-1725" name="GetOpposingForce_CentersInside_WithOpposingForce" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_CentersInside_WithOpposingForce" methodname="GetOpposingForce_CentersInside_WithOpposingForce" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="450143006" result="Passed" start-time="2023-12-27T17:19:10.8366460Z" end-time="2023-12-27T17:19:10.8368350Z" duration="0.000189" asserts="2">
                  <properties />
                </test-case>
                <test-case id="0-1726" name="GetOpposingForce_CentersOutside_NoOpposingForce" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_CentersOutside_NoOpposingForce" methodname="GetOpposingForce_CentersOutside_NoOpposingForce" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1948114217" result="Passed" start-time="2023-12-27T17:19:10.8368410Z" end-time="2023-12-27T17:19:10.8370230Z" duration="0.000182" asserts="2">
                  <properties />
                </test-case>
                <test-case id="0-1727" name="GetOpposingForce_CentersOutside_WithOpposingForce" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_CentersOutside_WithOpposingForce" methodname="GetOpposingForce_CentersOutside_WithOpposingForce" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="2067971371" result="Passed" start-time="2023-12-27T17:19:10.8370290Z" end-time="2023-12-27T17:19:10.8372040Z" duration="0.000175" asserts="2">
                  <properties />
                </test-case>
                <test-case id="0-1728" name="GetOpposingForce_NoIntersection_NoOpposingForce" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_NoIntersection_NoOpposingForce" methodname="GetOpposingForce_NoIntersection_NoOpposingForce" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1170088197" result="Passed" start-time="2023-12-27T17:19:10.8372100Z" end-time="2023-12-27T17:19:10.8373850Z" duration="0.000175" asserts="2">
                  <properties />
                </test-case>
                <test-case id="0-1729" name="GetOpposingForce_NoIntersection_WithOpposingForce" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_NoIntersection_WithOpposingForce" methodname="GetOpposingForce_NoIntersection_WithOpposingForce" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1840822603" result="Passed" start-time="2023-12-27T17:19:10.8373910Z" end-time="2023-12-27T17:19:10.8375600Z" duration="0.000169" asserts="2">
                  <properties />
                </test-case>
                <test-case id="0-1722" name="GetOpposingForce_WhenCenterMatches_NoOpposingForce" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_WhenCenterMatches_NoOpposingForce" methodname="GetOpposingForce_WhenCenterMatches_NoOpposingForce" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1783475700" result="Passed" start-time="2023-12-27T17:19:10.8375660Z" end-time="2023-12-27T17:19:10.8377360Z" duration="0.000170" asserts="2">
                  <properties />
                </test-case>
                <test-case id="0-1723" name="GetOpposingForce_WhenCenterMatches_WithOpposingForce" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_WhenCenterMatches_WithOpposingForce" methodname="GetOpposingForce_WhenCenterMatches_WithOpposingForce" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="993199558" result="Passed" start-time="2023-12-27T17:19:10.8377420Z" end-time="2023-12-27T17:19:10.8379250Z" duration="0.000183" asserts="2">
                  <properties />
                </test-case>
                <test-case id="0-1718" name="MapAreaSystemTest_DistanceCentersMatch" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistanceCentersMatch" methodname="MapAreaSystemTest_DistanceCentersMatch" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1769893249" result="Passed" start-time="2023-12-27T17:19:10.8379310Z" end-time="2023-12-27T17:19:10.8381370Z" duration="0.000207" asserts="3">
                  <properties />
                </test-case>
                <test-case id="0-1721" name="MapAreaSystemTest_DistanceNegativeCollide" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistanceNegativeCollide" methodname="MapAreaSystemTest_DistanceNegativeCollide" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1694632997" result="Passed" start-time="2023-12-27T17:19:10.8381430Z" end-time="2023-12-27T17:19:10.8383490Z" duration="0.000206" asserts="3">
                  <properties />
                </test-case>
                <test-case id="0-1719" name="MapAreaSystemTest_DistanceNegativeNormal" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistanceNegativeNormal" methodname="MapAreaSystemTest_DistanceNegativeNormal" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="571732105" result="Passed" start-time="2023-12-27T17:19:10.8383550Z" end-time="2023-12-27T17:19:10.8385360Z" duration="0.000181" asserts="3">
                  <properties />
                </test-case>
                <test-case id="0-1720" name="MapAreaSystemTest_DistanceNegativeOverlap" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistanceNegativeOverlap" methodname="MapAreaSystemTest_DistanceNegativeOverlap" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1129583759" result="Passed" start-time="2023-12-27T17:19:10.8385420Z" end-time="2023-12-27T17:19:10.8387170Z" duration="0.000175" asserts="3">
                  <properties />
                </test-case>
                <test-case id="0-1717" name="MapAreaSystemTest_DistancePositiveCollide" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistancePositiveCollide" methodname="MapAreaSystemTest_DistancePositiveCollide" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="861625353" result="Passed" start-time="2023-12-27T17:19:10.8388320Z" end-time="2023-12-27T17:19:10.8390260Z" duration="0.000194" asserts="3">
                  <properties />
                </test-case>
                <test-case id="0-1715" name="MapAreaSystemTest_DistancePositiveNormal" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistancePositiveNormal" methodname="MapAreaSystemTest_DistancePositiveNormal" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="491871720" result="Passed" start-time="2023-12-27T17:19:10.8390390Z" end-time="2023-12-27T17:19:10.8392250Z" duration="0.000186" asserts="3">
                  <properties />
                </test-case>
                <test-case id="0-1716" name="MapAreaSystemTest_DistancePositiveOverlap" fullname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistancePositiveOverlap" methodname="MapAreaSystemTest_DistancePositiveOverlap" classname="Nour.Play.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="880472588" result="Passed" start-time="2023-12-27T17:19:10.8392310Z" end-time="2023-12-27T17:19:10.8394080Z" duration="0.000177" asserts="3">
                  <properties />
                </test-case>
              </test-suite>
            </test-suite>
            <test-suite type="TestFixture" id="0-1614" name="MapAreaTest" fullname="Nour.Play.Areas.MapAreaTest" classname="Nour.Play.Areas.MapAreaTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-12-27T17:19:10.8394380Z" end-time="2023-12-27T17:19:10.8406350Z" duration="0.001197" total="4" passed="4" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="18">
              <properties />
              <test-case id="0-1617" name="Overlaps_ReturnsFalseIfDoesNotOverlap" fullname="Nour.Play.Areas.MapAreaTest.Overlaps_ReturnsFalseIfDoesNotOverlap" methodname="Overlaps_ReturnsFalseIfDoesNotOverlap" classname="Nour.Play.Areas.MapAreaTest" runstate="Runnable" seed="1397431188" result="Passed" start-time="2023-12-27T17:19:10.8394810Z" end-time="2023-12-27T17:19:10.8396210Z" duration="0.000140" asserts="7">
                <properties />
              </test-case>
              <test-case id="0-1616" name="Overlaps_ReturnsTrueIfOverlaps" fullname="Nour.Play.Areas.MapAreaTest.Overlaps_ReturnsTrueIfOverlaps" methodname="Overlaps_ReturnsTrueIfOverlaps" classname="Nour.Play.Areas.MapAreaTest" runstate="Runnable" seed="1770394079" result="Passed" start-time="2023-12-27T17:19:10.8396270Z" end-time="2023-12-27T17:19:10.8397130Z" duration="0.000086" asserts="7">
                <properties />
              </test-case>
              <test-case id="0-1615" name="Overlaps_ThrowsIfSame" fullname="Nour.Play.Areas.MapAreaTest.Overlaps_ThrowsIfSame" methodname="Overlaps_ThrowsIfSame" classname="Nour.Play.Areas.MapAreaTest" runstate="Runnable" seed="1257616803" result="Passed" start-time="2023-12-27T17:19:10.8397180Z" end-time="2023-12-27T17:19:10.8403920Z" duration="0.000674" asserts="2">
                <properties />
              </test-case>
              <test-case id="0-1618" name="Position_ThrowsIfNotInitialized" fullname="Nour.Play.Areas.MapAreaTest.Position_ThrowsIfNotInitialized" methodname="Position_ThrowsIfNotInitialized" classname="Nour.Play.Areas.MapAreaTest" runstate="Runnable" seed="1779468681" result="Passed" start-time="2023-12-27T17:19:10.8403990Z" end-time="2023-12-27T17:19:10.8406250Z" duration="0.000226" asserts="2">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="0-1039" name="CellTest" fullname="Nour.Play.CellTest" classname="Nour.Play.CellTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-12-27T17:19:10.8406490Z" end-time="2023-12-27T17:19:10.8480980Z" duration="0.007448" total="4" passed="4" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="21">
            <properties />
            <test-case id="0-1041" name="Map2D_CanAssignMapAreaOnce" fullname="Nour.Play.CellTest.Map2D_CanAssignMapAreaOnce" methodname="Map2D_CanAssignMapAreaOnce" classname="Nour.Play.CellTest" runstate="Runnable" seed="109897595" result="Passed" start-time="2023-12-27T17:19:10.8406910Z" end-time="2023-12-27T17:19:10.8455980Z" duration="0.004908" asserts="3">
              <properties />
            </test-case>
            <test-case id="0-1043" name="Map2D_DoubleLinkingThrowsError" fullname="Nour.Play.CellTest.Map2D_DoubleLinkingThrowsError" methodname="Map2D_DoubleLinkingThrowsError" classname="Nour.Play.CellTest" runstate="Runnable" seed="1639364484" result="Passed" start-time="2023-12-27T17:19:10.8456080Z" end-time="2023-12-27T17:19:10.8459690Z" duration="0.000361" asserts="1">
              <properties />
            </test-case>
            <test-case id="0-1040" name="Map2D_LinksAreMutual" fullname="Nour.Play.CellTest.Map2D_LinksAreMutual" methodname="Map2D_LinksAreMutual" classname="Nour.Play.CellTest" runstate="Runnable" seed="703844437" result="Passed" start-time="2023-12-27T17:19:10.8459760Z" end-time="2023-12-27T17:19:10.8477000Z" duration="0.001725" asserts="10">
              <properties />
            </test-case>
            <test-case id="0-1042" name="Map2D_ToString" fullname="Nour.Play.CellTest.Map2D_ToString" methodname="Map2D_ToString" classname="Nour.Play.CellTest" runstate="Runnable" seed="175779324" result="Passed" start-time="2023-12-27T17:19:10.8477080Z" end-time="2023-12-27T17:19:10.8480850Z" duration="0.000376" asserts="7">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="0-1004" name="DeadEndTest" fullname="Nour.Play.DeadEndTest" classname="Nour.Play.DeadEndTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-12-27T17:19:10.8481110Z" end-time="2023-12-27T17:19:10.8508910Z" duration="0.002780" total="1" passed="1" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="7">
            <properties />
            <test-case id="0-1005" name="DeadEnd_CanFindDeadEnds" fullname="Nour.Play.DeadEndTest.DeadEnd_CanFindDeadEnds" methodname="DeadEnd_CanFindDeadEnds" classname="Nour.Play.DeadEndTest" runstate="Runnable" seed="1595955308" result="Passed" start-time="2023-12-27T17:19:10.8481570Z" end-time="2023-12-27T17:19:10.8508780Z" duration="0.002722" asserts="7">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="0-1006" name="DijkstraDistanceTest" fullname="Nour.Play.DijkstraDistanceTest" classname="Nour.Play.DijkstraDistanceTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-12-27T17:19:10.8509020Z" end-time="2023-12-27T17:19:10.8788500Z" duration="0.027948" total="4" passed="4" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="11">
            <properties />
            <test-case id="0-1010" name="DijkstraDistance_CanFindLongestTrail" fullname="Nour.Play.DijkstraDistanceTest.DijkstraDistance_CanFindLongestTrail" methodname="DijkstraDistance_CanFindLongestTrail" classname="Nour.Play.DijkstraDistanceTest" runstate="Runnable" seed="1367249603" result="Passed" start-time="2023-12-27T17:19:10.8509470Z" end-time="2023-12-27T17:19:10.8542740Z" duration="0.003327" asserts="4">
              <properties />
            </test-case>
            <test-case id="0-1008" name="DijkstraDistance_CanSolveAMaze" fullname="Nour.Play.DijkstraDistanceTest.DijkstraDistance_CanSolveAMaze" methodname="DijkstraDistance_CanSolveAMaze" classname="Nour.Play.DijkstraDistanceTest" runstate="Runnable" seed="1465182226" result="Passed" start-time="2023-12-27T17:19:10.8542830Z" end-time="2023-12-27T17:19:10.8546300Z" duration="0.000347" asserts="4">
              <properties />
            </test-case>
            <test-case id="0-1007" name="DijkstraDistance_FindsAllDistances" fullname="Nour.Play.DijkstraDistanceTest.DijkstraDistance_FindsAllDistances" methodname="DijkstraDistance_FindsAllDistances" classname="Nour.Play.DijkstraDistanceTest" runstate="Runnable" seed="473782634" result="Passed" start-time="2023-12-27T17:19:10.8546380Z" end-time="2023-12-27T17:19:10.8785370Z" duration="0.023899" asserts="2">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with GeneratorOptions(Full, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
            </test-case>
            <test-case id="0-1009" name="DijkstraDistance_ReturnsEmptyIfNoSolutionFound" fullname="Nour.Play.DijkstraDistanceTest.DijkstraDistance_ReturnsEmptyIfNoSolutionFound" methodname="DijkstraDistance_ReturnsEmptyIfNoSolutionFound" classname="Nour.Play.DijkstraDistanceTest" runstate="Runnable" seed="1843358634" result="Passed" start-time="2023-12-27T17:19:10.8786670Z" end-time="2023-12-27T17:19:10.8788350Z" duration="0.000167" asserts="1">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="0-1011" name="Map2DTest" fullname="Nour.Play.Map2DTest" classname="Nour.Play.Map2DTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-12-27T17:19:10.8788620Z" end-time="2023-12-27T17:19:10.8820260Z" duration="0.003164" total="5" passed="5" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="21">
            <properties />
            <test-case id="0-1015" name="CellsAt_FourCellsFar" fullname="Nour.Play.Map2DTest.CellsAt_FourCellsFar" methodname="CellsAt_FourCellsFar" classname="Nour.Play.Map2DTest" runstate="Runnable" seed="1964268241" result="Passed" start-time="2023-12-27T17:19:10.8789270Z" end-time="2023-12-27T17:19:10.8806380Z" duration="0.001711" asserts="5">
              <properties />
            </test-case>
            <test-case id="0-1012" name="CellsAt_OneCell" fullname="Nour.Play.Map2DTest.CellsAt_OneCell" methodname="CellsAt_OneCell" classname="Nour.Play.Map2DTest" runstate="Runnable" seed="1700759614" result="Passed" start-time="2023-12-27T17:19:10.8806470Z" end-time="2023-12-27T17:19:10.8808880Z" duration="0.000242" asserts="2">
              <properties />
            </test-case>
            <test-case id="0-1016" name="CellsAt_OutOfBounds" fullname="Nour.Play.Map2DTest.CellsAt_OutOfBounds" methodname="CellsAt_OutOfBounds" classname="Nour.Play.Map2DTest" runstate="Runnable" seed="1868998028" result="Passed" start-time="2023-12-27T17:19:10.8808950Z" end-time="2023-12-27T17:19:10.8813320Z" duration="0.000437" asserts="4">
              <properties />
            </test-case>
            <test-case id="0-1014" name="CellsAt_TreeByTwo" fullname="Nour.Play.Map2DTest.CellsAt_TreeByTwo" methodname="CellsAt_TreeByTwo" classname="Nour.Play.Map2DTest" runstate="Runnable" seed="1731429958" result="Passed" start-time="2023-12-27T17:19:10.8813390Z" end-time="2023-12-27T17:19:10.8817490Z" duration="0.000410" asserts="7">
              <properties />
            </test-case>
            <test-case id="0-1013" name="CellsAt_TwoCells" fullname="Nour.Play.Map2DTest.CellsAt_TwoCells" methodname="CellsAt_TwoCells" classname="Nour.Play.Map2DTest" runstate="Runnable" seed="1396134601" result="Passed" start-time="2023-12-27T17:19:10.8817560Z" end-time="2023-12-27T17:19:10.8820150Z" duration="0.000259" asserts="3">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="0-1018" name="Maze2DRendererTest" fullname="Nour.Play.Maze2DRendererTest" classname="Nour.Play.Maze2DRendererTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-12-27T17:19:10.8820370Z" end-time="2023-12-27T17:19:10.8969660Z" duration="0.014929" total="6" passed="6" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="55">
            <properties />
            <test-case id="0-1024" name="CellsMapping_ValidMapping" fullname="Nour.Play.Maze2DRendererTest.CellsMapping_ValidMapping" methodname="CellsMapping_ValidMapping" classname="Nour.Play.Maze2DRendererTest" runstate="Runnable" seed="1176416708" result="Passed" start-time="2023-12-27T17:19:10.8820810Z" end-time="2023-12-27T17:19:10.8907020Z" duration="0.008621" asserts="45">
              <properties />
              <output><![CDATA[┌───────────┐    
│           │    
│   ┌───┐   └───┐
│   │   │       │
│   └───┼───┬───┤
│       │   │   │
│   ┼   └───┘   │
│               │
└───────────────┘

]]></output>
            </test-case>
            <test-case id="0-1021" name="Maze2DAsciiBoxRenderer_CanConvertToAscii" fullname="Nour.Play.Maze2DRendererTest.Maze2DAsciiBoxRenderer_CanConvertToAscii" methodname="Maze2DAsciiBoxRenderer_CanConvertToAscii" classname="Nour.Play.Maze2DRendererTest" runstate="Runnable" seed="516643197" result="Passed" start-time="2023-12-27T17:19:10.8907150Z" end-time="2023-12-27T17:19:10.8910040Z" duration="0.000289" asserts="1">
              <properties />
              <output><![CDATA[┌───────────┐    
│           │    
│   ┌───┐   └───┐
│   │   │       │
│   └───┼───┬───┤
│       │   │   │
│   ┼   └───┘   │
│               │
└───────────────┘

┌───────────┐    
│           │    
│   ┌───┐   └───┐
│   │   │       │
│   └───┼───┬───┤
│       │   │   │
│   ┼   └───┘   │
│               │
└───────────────┘

]]></output>
            </test-case>
            <test-case id="0-1022" name="Maze2DAsciiBoxRenderer_CanConvertToAsciiWithData" fullname="Nour.Play.Maze2DRendererTest.Maze2DAsciiBoxRenderer_CanConvertToAsciiWithData" methodname="Maze2DAsciiBoxRenderer_CanConvertToAsciiWithData" classname="Nour.Play.Maze2DRendererTest" runstate="Runnable" seed="552953112" result="Passed" start-time="2023-12-27T17:19:10.8910110Z" end-time="2023-12-27T17:19:10.8921520Z" duration="0.001141" asserts="1">
              <properties />
              <output><![CDATA[┌───────────┐    
│           │    
│   ┌───┐   └───┐
│   │   │       │
│   └───┼───┬───┤
│       │   │   │
│   ┼   └───┘   │
│               │
└───────────────┘

┌───────────┐    
│ 4   3   2 │    
│   ┌───┐   └───┐
│ 5 │   │ 1   0 │
│   └───┼───┬───┤
│ 6     │   │ b │
│   ┼   └───┘   │
│ 7   8   9   a │
└───────────────┘

]]></output>
            </test-case>
            <test-case id="0-1019" name="Maze2DToMap2DConverter_CanGenerateMap" fullname="Nour.Play.Maze2DRendererTest.Maze2DToMap2DConverter_CanGenerateMap" methodname="Maze2DToMap2DConverter_CanGenerateMap" classname="Nour.Play.Maze2DRendererTest" runstate="Runnable" seed="298004678" result="Passed" start-time="2023-12-27T17:19:10.8921630Z" end-time="2023-12-27T17:19:10.8949830Z" duration="0.002820" asserts="1">
              <properties />
              <output><![CDATA[┌───────────┐    
│           │    
│   ┌───┐   └───┐
│   │   │       │
│   └───┼───┬───┤
│       │   │   │
│   ┼   └───┘   │
│               │
└───────────────┘

0000000000000
▓▓▓▓▓▓▓▓▓0000
▓░░░░░░░▓▓000
▓░▒▓▓▓▒░▒▓▓▓▓
▓░▓▓▓▓▓░░░░░▓
▓░▓▓▓▓▓░░░░░▓
▓░▓▓▓▓▓▓▓▓▓▓▓
▓░▒▓▓▓▓▓▓▓▓▓▓
▓░░░░░▓▓▓▓░░▓
▓░░░░░▒▓▓▒░░▓
▓░░░░░░░░░░░▓
▓░░░░░░░░░░░▓
▓▓▓▓▓▓▓▓▓▓▓▓▓
0000000000000

]]></output>
            </test-case>
            <test-case id="0-1020" name="Maze2DToMap2DConverter_CanGenerateMap2" fullname="Nour.Play.Maze2DRendererTest.Maze2DToMap2DConverter_CanGenerateMap2" methodname="Maze2DToMap2DConverter_CanGenerateMap2" classname="Nour.Play.Maze2DRendererTest" runstate="Runnable" seed="464404449" result="Passed" start-time="2023-12-27T17:19:10.8949940Z" end-time="2023-12-27T17:19:10.8963400Z" duration="0.001346" asserts="1">
              <properties />
              <output><![CDATA[┌───────────┐    
│           │    
│   ┌───┐   └───┐
│   │   │       │
│   └───┼───┬───┤
│       │   │   │
│   ┼   └───┘   │
│               │
└───────────────┘

0▓▓▓▓▓▓▓▓▓▓▓▓▓▓00000
0▓░░░░░░░░░░░░▓00000
0▓░░▒▓▓▓▓▓▒░░░▓▓0000
0▓░░▓▓▓▓▓▓▓░░░▒▓▓▓▓0
0▓░░▓▓▓▓▓▓▓░░░░░░░▓0
0▓░░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓0
0▓░░░░░░░▓00000▓░░▓0
0▓░░░░░░░▓00000▓░░▓0
0▓░░░░░░░▓▓▓▓▓▓▓░░▓0
0▓░░░░░░░▒▓▓▓▓▓▒░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓0

]]></output>
            </test-case>
            <test-case id="0-1023" name="Maze2DToMap2DConverter_ThrowsIfInvalidOptions" fullname="Nour.Play.Maze2DRendererTest.Maze2DToMap2DConverter_ThrowsIfInvalidOptions" methodname="Maze2DToMap2DConverter_ThrowsIfInvalidOptions" classname="Nour.Play.Maze2DRendererTest" runstate="Runnable" seed="101313602" result="Passed" start-time="2023-12-27T17:19:10.8963500Z" end-time="2023-12-27T17:19:10.8969550Z" duration="0.000605" asserts="6">
              <properties />
              <output><![CDATA[┌───────────┐    
│           │    
│   ┌───┐   └───┐
│   │   │       │
│   └───┼───┬───┤
│       │   │   │
│   ┼   └───┘   │
│               │
└───────────────┘

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="0-1025" name="Maze2DTest" fullname="Nour.Play.Maze2DTest" classname="Nour.Play.Maze2DTest" runstate="Runnable" testcasecount="13" result="Passed" start-time="2023-12-27T17:19:10.8969790Z" end-time="2023-12-27T17:19:10.9599160Z" duration="0.062937" total="13" passed="13" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="177">
            <properties />
            <test-case id="0-1032" name="Maze2D_AddsNoRoomsToASmallMaze" fullname="Nour.Play.Maze2DTest.Maze2D_AddsNoRoomsToASmallMaze" methodname="Maze2D_AddsNoRoomsToASmallMaze" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="811416438" result="Passed" start-time="2023-12-27T17:19:10.8970140Z" end-time="2023-12-27T17:19:10.8995950Z" duration="0.002581" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 3x3 with GeneratorOptions(Full, Auto, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
            </test-case>
            <test-case id="0-1031" name="Maze2D_AddsNoRoomsWhenNoneRequested" fullname="Nour.Play.Maze2DTest.Maze2D_AddsNoRoomsWhenNoneRequested" methodname="Maze2D_AddsNoRoomsWhenNoneRequested" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="481356824" result="Passed" start-time="2023-12-27T17:19:10.8996070Z" end-time="2023-12-27T17:19:10.9381950Z" duration="0.038588" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with GeneratorOptions(Full, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
            </test-case>
            <test-case id="0-1035" name="Maze2D_AddsOneFill" fullname="Nour.Play.Maze2DTest.Maze2D_AddsOneFill" methodname="Maze2D_AddsOneFill" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="316976795" result="Passed" start-time="2023-12-27T17:19:10.9382060Z" end-time="2023-12-27T17:19:10.9434720Z" duration="0.005266" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 5x5 with GeneratorOptions(Full, Manual, List`1<MapArea>(P2x1;S2x2;Fill), Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
            </test-case>
            <test-case id="0-1034" name="Maze2D_AddsOneHall" fullname="Nour.Play.Maze2DTest.Maze2D_AddsOneHall" methodname="Maze2D_AddsOneHall" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="785020132" result="Passed" start-time="2023-12-27T17:19:10.9434820Z" end-time="2023-12-27T17:19:10.9492590Z" duration="0.005777" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 5x5 with GeneratorOptions(Full, Manual, List`1<MapArea>(P2x1;S2x2;Hall), Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
            </test-case>
            <test-case id="0-1033" name="Maze2D_AddsRooms" fullname="Nour.Play.Maze2DTest.Maze2D_AddsRooms" methodname="Maze2D_AddsRooms" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="898898229" result="Passed" start-time="2023-12-27T17:19:10.9492690Z" end-time="2023-12-27T17:19:10.9529540Z" duration="0.003685" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 5x5 with GeneratorOptions(Full, Auto, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
            </test-case>
            <test-case id="0-1037" name="Maze2D_CanParse" fullname="Nour.Play.Maze2DTest.Maze2D_CanParse" methodname="Maze2D_CanParse" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="858419950" result="Passed" start-time="2023-12-27T17:19:10.9529630Z" end-time="2023-12-27T17:19:10.9536450Z" duration="0.000682" asserts="16">
              <properties />
              <output><![CDATA[┌───────────┐
│           │
├───╴   ┌───┤
│       │   │
│   ╷   ╵   │
│   │       │
└───┴───────┘

]]></output>
            </test-case>
            <test-case id="0-1038" name="Maze2D_CanParse2" fullname="Nour.Play.Maze2DTest.Maze2D_CanParse2" methodname="Maze2D_CanParse2" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="526376213" result="Passed" start-time="2023-12-27T17:19:10.9536540Z" end-time="2023-12-27T17:19:10.9537350Z" duration="0.000081" asserts="1">
              <properties />
            </test-case>
            <test-case id="0-1030" name="Maze2D_CanRenderMap" fullname="Nour.Play.Maze2DTest.Maze2D_CanRenderMap" methodname="Maze2D_CanRenderMap" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="746053324" result="Passed" start-time="2023-12-27T17:19:10.9537410Z" end-time="2023-12-27T17:19:10.9549800Z" duration="0.001239" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 3x3 with GeneratorOptions(Full, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
            </test-case>
            <test-case id="0-1029" name="Maze2D_CellsNeighborsAreValid" fullname="Nour.Play.Maze2DTest.Maze2D_CellsNeighborsAreValid" methodname="Maze2D_CellsNeighborsAreValid" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="263652333" result="Passed" start-time="2023-12-27T17:19:10.9549890Z" end-time="2023-12-27T17:19:10.9563680Z" duration="0.001379" asserts="136">
              <properties />
            </test-case>
            <test-case id="0-1036" name="Maze2D_HasAttributesSet" fullname="Nour.Play.Maze2DTest.Maze2D_HasAttributesSet" methodname="Maze2D_HasAttributesSet" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="996820630" result="Passed" start-time="2023-12-27T17:19:10.9563780Z" end-time="2023-12-27T17:19:10.9577640Z" duration="0.001386" asserts="2">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 3x3 with GeneratorOptions(Full, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
            </test-case>
            <test-case id="0-1026" name="Maze2D_IsInitialized" fullname="Nour.Play.Maze2DTest.Maze2D_IsInitialized" methodname="Maze2D_IsInitialized" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="2040406603" result="Passed" start-time="2023-12-27T17:19:10.9577770Z" end-time="2023-12-27T17:19:10.9579880Z" duration="0.000211" asserts="4">
              <properties />
            </test-case>
            <test-case id="0-1028" name="Maze2D_ToMapWrongOptions" fullname="Nour.Play.Maze2DTest.Maze2D_ToMapWrongOptions" methodname="Maze2D_ToMapWrongOptions" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="1027199682" result="Passed" start-time="2023-12-27T17:19:10.9579960Z" end-time="2023-12-27T17:19:10.9596200Z" duration="0.001624" asserts="7">
              <properties />
            </test-case>
            <test-case id="0-1027" name="Maze2D_WrongSize" fullname="Nour.Play.Maze2DTest.Maze2D_WrongSize" methodname="Maze2D_WrongSize" classname="Nour.Play.Maze2DTest" runstate="Runnable" seed="1803028294" result="Passed" start-time="2023-12-27T17:19:10.9596310Z" end-time="2023-12-27T17:19:10.9599030Z" duration="0.000272" asserts="5">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="0-1044" name="MazeGeneratorTest" fullname="Nour.Play.MazeGeneratorTest" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" testcasecount="524" result="Passed" start-time="2023-12-27T17:19:10.9599360Z" end-time="2023-12-27T17:19:11.0617190Z" duration="0.101783" total="20" passed="20" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="33">
            <properties />
            <test-suite type="ParameterizedMethod" id="0-1571" name="CanFindPaths" fullname="Nour.Play.MazeGeneratorTest.CanFindPaths" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-12-27T17:19:10.9599770Z" end-time="2023-12-27T17:19:10.9696320Z" duration="0.009655" total="6" passed="6" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="12">
              <properties />
              <test-case id="0-1565" name="CanFindPaths(Nour.Play.Maze.AldousBroderMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.CanFindPaths(Nour.Play.Maze.AldousBroderMazeGenerator)" methodname="CanFindPaths" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="735485440" result="Passed" start-time="2023-12-27T17:19:10.9599930Z" end-time="2023-12-27T17:19:10.9613970Z" duration="0.001405" asserts="2">
                <properties />
              </test-case>
              <test-case id="0-1566" name="CanFindPaths(Nour.Play.Maze.BinaryTreeMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.CanFindPaths(Nour.Play.Maze.BinaryTreeMazeGenerator)" methodname="CanFindPaths" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="1423545337" result="Passed" start-time="2023-12-27T17:19:10.9614050Z" end-time="2023-12-27T17:19:10.9665070Z" duration="0.005103" asserts="2">
                <properties />
              </test-case>
              <test-case id="0-1567" name="CanFindPaths(Nour.Play.Maze.HuntAndKillMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.CanFindPaths(Nour.Play.Maze.HuntAndKillMazeGenerator)" methodname="CanFindPaths" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="2022766127" result="Passed" start-time="2023-12-27T17:19:10.9665170Z" end-time="2023-12-27T17:19:10.9672210Z" duration="0.000704" asserts="2">
                <properties />
              </test-case>
              <test-case id="0-1568" name="CanFindPaths(Nour.Play.Maze.RecursiveBacktrackerMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.CanFindPaths(Nour.Play.Maze.RecursiveBacktrackerMazeGenerator)" methodname="CanFindPaths" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="10319989" result="Passed" start-time="2023-12-27T17:19:10.9672300Z" end-time="2023-12-27T17:19:10.9681650Z" duration="0.000935" asserts="2">
                <properties />
              </test-case>
              <test-case id="0-1569" name="CanFindPaths(Nour.Play.Maze.SidewinderMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.CanFindPaths(Nour.Play.Maze.SidewinderMazeGenerator)" methodname="CanFindPaths" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="1019646510" result="Passed" start-time="2023-12-27T17:19:10.9681740Z" end-time="2023-12-27T17:19:10.9685750Z" duration="0.000401" asserts="2">
                <properties />
              </test-case>
              <test-case id="0-1570" name="CanFindPaths(Nour.Play.Maze.WilsonsMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.CanFindPaths(Nour.Play.Maze.WilsonsMazeGenerator)" methodname="CanFindPaths" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="1900834542" result="Passed" start-time="2023-12-27T17:19:10.9685820Z" end-time="2023-12-27T17:19:10.9696210Z" duration="0.001040" asserts="2">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="0-1051" name="CanGenerateMazes" fullname="Nour.Play.MazeGeneratorTest.CanGenerateMazes" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-12-27T17:19:10.9696390Z" end-time="2023-12-27T17:19:10.9730990Z" duration="0.003460" total="6" passed="6" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="12">
              <properties />
              <test-case id="0-1045" name="CanGenerateMazes(Nour.Play.Maze.AldousBroderMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.CanGenerateMazes(Nour.Play.Maze.AldousBroderMazeGenerator)" methodname="CanGenerateMazes" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="1733083621" result="Passed" start-time="2023-12-27T17:19:10.9696510Z" end-time="2023-12-27T17:19:10.9710630Z" duration="0.001412" asserts="2">
                <properties />
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 3x4 with GeneratorOptions(Full, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
              </test-case>
              <test-case id="0-1046" name="CanGenerateMazes(Nour.Play.Maze.BinaryTreeMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.CanGenerateMazes(Nour.Play.Maze.BinaryTreeMazeGenerator)" methodname="CanGenerateMazes" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="1296507058" result="Passed" start-time="2023-12-27T17:19:10.9710730Z" end-time="2023-12-27T17:19:10.9712130Z" duration="0.000140" asserts="2">
                <properties />
                <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 3x4 with GeneratorOptions(Full, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
              </test-case>
              <test-case id="0-1047" name="CanGenerateMazes(Nour.Play.Maze.HuntAndKillMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.CanGenerateMazes(Nour.Play.Maze.HuntAndKillMazeGenerator)" methodname="CanGenerateMazes" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="1004021725" result="Passed" start-time="2023-12-27T17:19:10.9712200Z" end-time="2023-12-27T17:19:10.9716700Z" duration="0.000450" asserts="2">
                <properties />
                <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 3x4 with GeneratorOptions(Full, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
              </test-case>
              <test-case id="0-1048" name="CanGenerateMazes(Nour.Play.Maze.RecursiveBacktrackerMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.CanGenerateMazes(Nour.Play.Maze.RecursiveBacktrackerMazeGenerator)" methodname="CanGenerateMazes" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="659757949" result="Passed" start-time="2023-12-27T17:19:10.9716770Z" end-time="2023-12-27T17:19:10.9721720Z" duration="0.000494" asserts="2">
                <properties />
                <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 3x4 with GeneratorOptions(Full, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
              </test-case>
              <test-case id="0-1049" name="CanGenerateMazes(Nour.Play.Maze.SidewinderMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.CanGenerateMazes(Nour.Play.Maze.SidewinderMazeGenerator)" methodname="CanGenerateMazes" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="629551228" result="Passed" start-time="2023-12-27T17:19:10.9721780Z" end-time="2023-12-27T17:19:10.9722730Z" duration="0.000095" asserts="2">
                <properties />
                <output><![CDATA[SidewinderMazeGenerator: Generating maze 3x4 with GeneratorOptions(Full, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
              </test-case>
              <test-case id="0-1050" name="CanGenerateMazes(Nour.Play.Maze.WilsonsMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.CanGenerateMazes(Nour.Play.Maze.WilsonsMazeGenerator)" methodname="CanGenerateMazes" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="1505822876" result="Passed" start-time="2023-12-27T17:19:10.9722790Z" end-time="2023-12-27T17:19:10.9730880Z" duration="0.000810" asserts="2">
                <properties />
                <output><![CDATA[WilsonsMazeGenerator: Generating maze 3x4 with GeneratorOptions(Full, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
              </test-case>
            </test-suite>
            <test-case id="0-1054" name="IsFillComplete_Full" fullname="Nour.Play.MazeGeneratorTest.IsFillComplete_Full" methodname="IsFillComplete_Full" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="2032085117" result="Passed" start-time="2023-12-27T17:19:10.9731080Z" end-time="2023-12-27T17:19:11.0049140Z" duration="0.031806" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with GeneratorOptions(Full, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
┌───────┬───┬───┬───────────────────┬───┐
│       │   │   │         19  18  17│   │
├───┐   ╵   │   └───────╴   ┌───╴   ╵   │
│   │       │     1c  1b  1a│     16  15│
│   ╵   ╷   └───┐   ┌───╴   ├───────╴   │
│       │       │ 1d│       │     13  14│
│   ╷   ├───╴   ╵   ├───────┼───╴   ╷   │
│   │   │ 20  1f  1e│       │     12│   │
│   ├───┘   ╶───────┤   ┌───┴───╴   ├───┤
│   │     21  22    │   │ f   10  11│   │
│   ├───┬───╴   ┌───┘   ╵   ┌───┐   ╵   │
│   │   │ 24  23│     d   e │   │       │
├───┘   ╵   ╶───┤   ╷   ┌───┤   ╵   ╷   │
│ 27  26  25    │   │ c │   │       │   │
│   ┌───╴   ╷   ├───┤   ╵   ├───┬───┴───┤
│ 28│       │   │   │ b   a │   │ 0   1 │
│   └───┬───┴───┘   └───╴   │   └───┐   │
│ 29    │             8   9 │       │ 2 │
│   ╶───┤   ┌───────╴   ╶───┘   ╶───┘   │
│ 2a  2b│   │         7   6   5   4   3 │
└───────┴───┴───────────────────────────┘

]]></output>
            </test-case>
            <test-case id="0-1059" name="IsFillComplete_FullHeight" fullname="Nour.Play.MazeGeneratorTest.IsFillComplete_FullHeight" methodname="IsFillComplete_FullHeight" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="1296506422" result="Passed" start-time="2023-12-27T17:19:11.0049330Z" end-time="2023-12-27T17:19:11.0215380Z" duration="0.016605" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with GeneratorOptions(FullHeight, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
┌───────┬───┬───────┬───┬───────┐        
│       │   │       │   │ 1   0 │        
├───┐   ╵   ├───┐   │   ╵   ╶───┤        
│   │       │   │   │ 3   2     │        
│   ╵   ┌───┘   ╵   │   ╷   ╷   ├───────┐
│       │           │ 4 │   │   │       │
├───╴   ├───┬───╴   ╵   └───┴───┘   ┌───┘
│       │   │         5             │    
│   ╶───┘   └───────╴   ╶───┬───────┘    
│ b   a   9   8   7   6     │            
│   ╶───┬───────┐   ╷   ┌───┘            
│ c     │ 10  11│   │   │                
│   ╶───┘   ╷   │   └───┤                
│ d   e   f │ 12│       │                
└───────────┤   │   ┌───┤                
            │ 13│   │   │                
    ┌───────┘   └───┘   │                
    │ 16  15  14        │                
    │   ╶───┬───┐   ╷   │                
    │ 17  18│   │   │   │                
    └───────┘   └───┴───┘                

]]></output>
            </test-case>
            <test-case id="0-1058" name="IsFillComplete_FullWidth" fullname="Nour.Play.MazeGeneratorTest.IsFillComplete_FullWidth" methodname="IsFillComplete_FullWidth" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="1797174049" result="Passed" start-time="2023-12-27T17:19:11.0215530Z" end-time="2023-12-27T17:19:11.0303250Z" duration="0.008772" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with GeneratorOptions(FullWidth, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
┌───────┬───────────────────┐            
│       │                   │            
├───╴   ├───╴   ┌───╴   ╶───┤            
│       │ 8   7 │           │            
│   ╶───┘   ╷   └───────┬───┘            
│     a   9 │ 6   5   4 │                
│   ╷   ╶───┼───┬───╴   └───┐            
│   │ b   c │   │     3   2 │            
│   │   ╷   ╵   └───────┐   │            
│   │   │ d   e   f     │ 1 │            
└───┴───┤   ┌───┐   ┌───┤   │            
        │   │   │ 10│   │ 0 │            
        └───┘   │   ╵   ├───┘            
                │ 11    │                
                │   ┌───┘                
                │ 12│                    
            ┌───┘   └───┐                
            │ 14  13    │                
            │   ┌───────┘                
            │ 15│                        
            └───┘                        

]]></output>
            </test-case>
            <test-case id="0-1053" name="IsFillComplete_Half" fullname="Nour.Play.MazeGeneratorTest.IsFillComplete_Half" methodname="IsFillComplete_Half" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="1810762162" result="Passed" start-time="2023-12-27T17:19:11.0303400Z" end-time="2023-12-27T17:19:11.0361590Z" duration="0.005820" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with GeneratorOptions(Half, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
                                    ┌───┐
                                    │ 0 │
                                    │   │
                                    │ 1 │
            ┌───┐           ┌───────┘   │
            │   │           │ 4   3   2 │
            │   ├───┬───┐   │   ╷   ╷   │
            │   │   │   │   │ 5 │   │   │
            │   │   ╵   └───┘   │   ├───┘
            │   │             6 │   │    
        ┌───┘   └───────────┐   ├───┘    
        │                   │ 7 │        
        └───┬───┐   ┌───┐   ╵   └───┐    
            │   │   │   │     8   9 │    
            │   └───┴───┼───────╴   └───┐
            │ 13  12    │     b   a     │
            │   ╷   ╶───┼───┐   ┌───┬───┤
            │ 14│ 11    │   │ c │   │   │
            │   │   ╶───┘   ╵   ╵   ╵   │
            │ 15│ 10  f   e   d         │
            └───┴───────────────────────┘

]]></output>
            </test-case>
            <test-case id="0-1057" name="IsFillComplete_NinetyPercent" fullname="Nour.Play.MazeGeneratorTest.IsFillComplete_NinetyPercent" methodname="IsFillComplete_NinetyPercent" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="1072608736" result="Passed" start-time="2023-12-27T17:19:11.0361710Z" end-time="2023-12-27T17:19:11.0500450Z" duration="0.013875" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with GeneratorOptions(NinetyPercent, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
┌───┬───────────────────┬───────────────┐
│   │ d   e   f   10  11│ 14  15        │
│   ╵   ┌───┬───┬───╴   ╵   ╷   ┌───────┤
│ b   c │   │   │     12  13│ 16│       │
│   ┌───┤   ╵   │   ╶───────┤   ╵   ╶───┤
│ a │   │       │           │ 17  18  19│
│   ╵   └───╴   ├───┬───┐   ├───────╴   │
│ 9   8   7     │   │   │   │         1a│
│   ╷   ╷   ╶───┴───┤   └───┴───╴   ╷   │
│   │   │ 6   5   4 │               │ 1b│
└───┴───┼───┐   ╷   └───┬───╴   ┌───┘   │
        │   │   │ 3   2 │       │     1c│
    ┌───┘   │   ├───╴   ├───┬───┴───╴   │
    │       │   │ 0   1 │   │     1e  1d│
┌───┤   ╶───┴───┼───────┘   ├───╴   ╷   │
│ 2f│ 2a  29  28│           │ 20  1f│   │
│   │   ┌───┐   └───┐       │   ╶───┴───┤
│ 2e│ 2b│   │ 27  26│       │ 21        │
│   ╵   ╵   │   ╷   └───────┘   ╷   ╷   │
│ 2d  2c    │   │ 25  24  23  22│   │   │
└───────────┴───┴───────────────┴───┴───┘

]]></output>
            </test-case>
            <test-case id="0-1055" name="IsFillComplete_Quarter" fullname="Nour.Play.MazeGeneratorTest.IsFillComplete_Quarter" methodname="IsFillComplete_Quarter" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="240160911" result="Passed" start-time="2023-12-27T17:19:11.0500600Z" end-time="2023-12-27T17:19:11.0525100Z" duration="0.002451" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with GeneratorOptions(Quarter, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
                        ┌───┐            
                        │   │            
                    ┌───┘   │            
                    │ 0   1 │            
                    └───┐   └───┐        
                        │ 2     │        
                    ┌───┤   ╶───┴───────┐
                    │   │ 3   4         │
                    │   ╵   ╷   ┌───┬───┘
                    │       │ 5 │   │    
                    └───────┤   │   │    
                            │ 6 │   │    
                        ┌───┘   ╵   │    
                        │ 8   7     │    
                    ┌───┘   ┌───────┘    
                    │ a   9 │            
                ┌───┘   ╷   │            
                │ c   b │   │            
                │   ┌───┴───┘            
                │ d │                    
                └───┘                    

]]></output>
            </test-case>
            <test-case id="0-1056" name="IsFillComplete_ThreeQuarters" fullname="Nour.Play.MazeGeneratorTest.IsFillComplete_ThreeQuarters" methodname="IsFillComplete_ThreeQuarters" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="840172208" result="Passed" start-time="2023-12-27T17:19:11.0525200Z" end-time="2023-12-27T17:19:11.0613160Z" duration="0.008796" asserts="1">
              <properties />
              <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with GeneratorOptions(ThreeQuarters, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
    ┌───┬───────────┐   ┌───────────┬───┐
    │   │           │   │     24  25│ 28│
    │   └───╴   ╶───┴───┴───╴   ╷   ╵   │
    │     1e  1f  20  21  22  23│ 26  27│
┌───┼───┐   ╶───────┬───────────┴───┐   │
│   │   │ 1d  1c    │               │   │
│   ╵   └───┐   ╷   │               └───┘
│           │ 1b│   │                    
├───┐   ╶───┘   └───┤                    
│   │     19  1a    │                    
│   └───╴   ┌───┬───┤                    
│     17  18│   │   │                    
├───┐   ┌───┼───┘   ├───────────┬───┐    
│   │ 16│   │ e   d │ a   9   8 │   │    
│   ╵   │   │   ╷   ╵   ┌───╴   ╵   ├───┐
│     15│   │ f │ c   b │     7   6 │   │
│   ╷   ╵   │   │   ┌───┤   ╶───┐   │   │
│   │ 14  13│ 10│   │   │       │ 5 │   │
│   └───┐   ╵   ├───┴───┴───────┘   ╵   │
│       │ 12  11│ 0   1   2   3   4     │
└───────┴───────┴───────────────────────┘

]]></output>
            </test-case>
            <test-case id="0-1052" name="OnlyFullGenerators" fullname="Nour.Play.MazeGeneratorTest.OnlyFullGenerators" methodname="OnlyFullGenerators" classname="Nour.Play.MazeGeneratorTest" runstate="Runnable" seed="476264141" result="Passed" start-time="2023-12-27T17:19:11.0613280Z" end-time="2023-12-27T17:19:11.0617040Z" duration="0.000376" asserts="2">
              <properties />
              <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 10x10 with GeneratorOptions(Half, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
SidewinderMazeGenerator: Generating maze 10x10 with GeneratorOptions(Half, Manual, <null>, Nour.Play.Areas.RandomAreaGenerator+GeneratorSettings)
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="0-1572" name="OptionalTest" fullname="Nour.Play.OptionalTest" classname="Nour.Play.OptionalTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2023-12-27T17:19:11.0617380Z" end-time="2023-12-27T17:19:11.0632270Z" duration="0.001489" total="7" passed="7" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="24">
            <properties />
            <test-case id="0-1578" name="Optional_CanBeCastToT" fullname="Nour.Play.OptionalTest.Optional_CanBeCastToT" methodname="Optional_CanBeCastToT" classname="Nour.Play.OptionalTest" runstate="Runnable" seed="844803761" result="Passed" start-time="2023-12-27T17:19:11.0618000Z" end-time="2023-12-27T17:19:11.0619470Z" duration="0.000147" asserts="1">
              <properties />
            </test-case>
            <test-case id="0-1573" name="Optional_Equality" fullname="Nour.Play.OptionalTest.Optional_Equality" methodname="Optional_Equality" classname="Nour.Play.OptionalTest" runstate="Runnable" seed="1409346319" result="Passed" start-time="2023-12-27T17:19:11.0619540Z" end-time="2023-12-27T17:19:11.0621100Z" duration="0.000156" asserts="2">
              <properties />
            </test-case>
            <test-case id="0-1575" name="Optional_Equals" fullname="Nour.Play.OptionalTest.Optional_Equals" methodname="Optional_Equals" classname="Nour.Play.OptionalTest" runstate="Runnable" seed="2114375087" result="Passed" start-time="2023-12-27T17:19:11.0621170Z" end-time="2023-12-27T17:19:11.0623780Z" duration="0.000261" asserts="5">
              <properties />
            </test-case>
            <test-case id="0-1577" name="Optional_GetHashCode" fullname="Nour.Play.OptionalTest.Optional_GetHashCode" methodname="Optional_GetHashCode" classname="Nour.Play.OptionalTest" runstate="Runnable" seed="848391204" result="Passed" start-time="2023-12-27T17:19:11.0623850Z" end-time="2023-12-27T17:19:11.0625850Z" duration="0.000201" asserts="3">
              <properties />
            </test-case>
            <test-case id="0-1576" name="Optional_Null" fullname="Nour.Play.OptionalTest.Optional_Null" methodname="Optional_Null" classname="Nour.Play.OptionalTest" runstate="Runnable" seed="1017524572" result="Passed" start-time="2023-12-27T17:19:11.0625930Z" end-time="2023-12-27T17:19:11.0629170Z" duration="0.000324" asserts="9">
              <properties />
            </test-case>
            <test-case id="0-1574" name="Optional_ThrowsIfNoValue" fullname="Nour.Play.OptionalTest.Optional_ThrowsIfNoValue" methodname="Optional_ThrowsIfNoValue" classname="Nour.Play.OptionalTest" runstate="Runnable" seed="983581195" result="Passed" start-time="2023-12-27T17:19:11.0629230Z" end-time="2023-12-27T17:19:11.0630610Z" duration="0.000137" asserts="2">
              <properties />
            </test-case>
            <test-case id="0-1579" name="Optional_ToStringShowsValue" fullname="Nour.Play.OptionalTest.Optional_ToStringShowsValue" methodname="Optional_ToStringShowsValue" classname="Nour.Play.OptionalTest" runstate="Runnable" seed="740900183" result="Passed" start-time="2023-12-27T17:19:11.0630670Z" end-time="2023-12-27T17:19:11.0632160Z" duration="0.000149" asserts="2">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="0-1580" name="QueueExtensionsTest" fullname="Nour.Play.QueueExtensionsTest" classname="Nour.Play.QueueExtensionsTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-12-27T17:19:11.0632400Z" end-time="2023-12-27T17:19:11.0637990Z" duration="0.000559" total="2" passed="2" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="3">
            <properties />
            <test-case id="0-1582" name="TryDequeue_Dequeues" fullname="Nour.Play.QueueExtensionsTest.TryDequeue_Dequeues" methodname="TryDequeue_Dequeues" classname="Nour.Play.QueueExtensionsTest" runstate="Runnable" seed="448732314" result="Passed" start-time="2023-12-27T17:19:11.0632810Z" end-time="2023-12-27T17:19:11.0637100Z" duration="0.000429" asserts="2">
              <properties />
            </test-case>
            <test-case id="0-1581" name="TryDequeue_DoesNotThrow" fullname="Nour.Play.QueueExtensionsTest.TryDequeue_DoesNotThrow" methodname="TryDequeue_DoesNotThrow" classname="Nour.Play.QueueExtensionsTest" runstate="Runnable" seed="2050757135" result="Passed" start-time="2023-12-27T17:19:11.0637180Z" end-time="2023-12-27T17:19:11.0637890Z" duration="0.000072" asserts="1">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="0-1740" name="Renderers" fullname="Nour.Play.Renderers" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-12-27T17:19:10.6534030Z" end-time="2023-12-27T17:19:11.0644650Z" duration="0.411063" total="1" passed="1" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="1">
            <properties />
            <test-suite type="TestFixture" id="0-1612" name="Map2DAsciiRendererTest" fullname="Nour.Play.Renderers.Map2DAsciiRendererTest" classname="Nour.Play.Renderers.Map2DAsciiRendererTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-12-27T17:19:11.0638110Z" end-time="2023-12-27T17:19:11.0644590Z" duration="0.000648" total="1" passed="1" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="1">
              <properties />
              <test-case id="0-1613" name="TestRender" fullname="Nour.Play.Renderers.Map2DAsciiRendererTest.TestRender" methodname="TestRender" classname="Nour.Play.Renderers.Map2DAsciiRendererTest" runstate="Runnable" seed="1428576868" result="Passed" start-time="2023-12-27T17:19:11.0638490Z" end-time="2023-12-27T17:19:11.0644480Z" duration="0.000600" asserts="1">
                <properties />
                <output><![CDATA[▓▓▓▓▓
▓░░░▓
▓░▒░▓
▓░░░▓
▓▓▓▓▓

]]></output>
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="0-1583" name="VectorDTest" fullname="Nour.Play.VectorDTest" classname="Nour.Play.VectorDTest" runstate="Runnable" testcasecount="11" result="Passed" start-time="2023-12-27T17:19:11.0644750Z" end-time="2023-12-27T17:19:11.0674830Z" duration="0.003008" total="11" passed="11" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="33">
            <properties />
            <test-case id="0-1591" name="CanAddAndSubtract" fullname="Nour.Play.VectorDTest.CanAddAndSubtract" methodname="CanAddAndSubtract" classname="Nour.Play.VectorDTest" runstate="Runnable" seed="168114449" result="Passed" start-time="2023-12-27T17:19:11.0645180Z" end-time="2023-12-27T17:19:11.0649930Z" duration="0.000476" asserts="5">
              <properties />
            </test-case>
            <test-case id="0-1592" name="ConstructorChecksArguments" fullname="Nour.Play.VectorDTest.ConstructorChecksArguments" methodname="ConstructorChecksArguments" classname="Nour.Play.VectorDTest" runstate="Runnable" seed="929567019" result="Passed" start-time="2023-12-27T17:19:11.0650000Z" end-time="2023-12-27T17:19:11.0651330Z" duration="0.000133" asserts="1">
              <properties />
            </test-case>
            <test-case id="0-1585" name="EqualityIsCheckedByValue" fullname="Nour.Play.VectorDTest.EqualityIsCheckedByValue" methodname="EqualityIsCheckedByValue" classname="Nour.Play.VectorDTest" runstate="Runnable" seed="1015245037" result="Passed" start-time="2023-12-27T17:19:11.0651410Z" end-time="2023-12-27T17:19:11.0653050Z" duration="0.000164" asserts="4">
              <properties />
            </test-case>
            <test-case id="0-1586" name="GetHashCodeIsDerivedFromValue" fullname="Nour.Play.VectorDTest.GetHashCodeIsDerivedFromValue" methodname="GetHashCodeIsDerivedFromValue" classname="Nour.Play.VectorDTest" runstate="Runnable" seed="1180532818" result="Passed" start-time="2023-12-27T17:19:11.0653120Z" end-time="2023-12-27T17:19:11.0655720Z" duration="0.000260" asserts="1">
              <properties />
            </test-case>
            <test-case id="0-1589" name="InitializedAsNull" fullname="Nour.Play.VectorDTest.InitializedAsNull" methodname="InitializedAsNull" classname="Nour.Play.VectorDTest" runstate="Runnable" seed="367204625" result="Passed" start-time="2023-12-27T17:19:11.0655790Z" end-time="2023-12-27T17:19:11.0656820Z" duration="0.000103" asserts="1">
              <properties />
            </test-case>
            <test-case id="0-1588" name="InitializedEmpty" fullname="Nour.Play.VectorDTest.InitializedEmpty" methodname="InitializedEmpty" classname="Nour.Play.VectorDTest" runstate="Runnable" seed="1786594750" result="Passed" start-time="2023-12-27T17:19:11.0656880Z" end-time="2023-12-27T17:19:11.0659440Z" duration="0.000256" asserts="4">
              <properties />
            </test-case>
            <test-case id="0-1584" name="IsInitialized" fullname="Nour.Play.VectorDTest.IsInitialized" methodname="IsInitialized" classname="Nour.Play.VectorDTest" runstate="Runnable" seed="49939825" result="Passed" start-time="2023-12-27T17:19:11.0659530Z" end-time="2023-12-27T17:19:11.0662440Z" duration="0.000292" asserts="2">
              <properties />
            </test-case>
            <test-case id="0-1590" name="IsZero" fullname="Nour.Play.VectorDTest.IsZero" methodname="IsZero" classname="Nour.Play.VectorDTest" runstate="Runnable" seed="1262133002" result="Passed" start-time="2023-12-27T17:19:11.0662510Z" end-time="2023-12-27T17:19:11.0665110Z" duration="0.000260" asserts="3">
              <properties />
            </test-case>
            <test-case id="0-1593" name="SnappedForce" fullname="Nour.Play.VectorDTest.SnappedForce" methodname="SnappedForce" classname="Nour.Play.VectorDTest" runstate="Runnable" seed="1335130059" result="Passed" start-time="2023-12-27T17:19:11.0665200Z" end-time="2023-12-27T17:19:11.0670390Z" duration="0.000519" asserts="9">
              <properties />
            </test-case>
            <test-case id="0-1587" name="ToStringFormat" fullname="Nour.Play.VectorDTest.ToStringFormat" methodname="ToStringFormat" classname="Nour.Play.VectorDTest" runstate="Runnable" seed="746013948" result="Passed" start-time="2023-12-27T17:19:11.0670460Z" end-time="2023-12-27T17:19:11.0671090Z" duration="0.000063" asserts="1">
              <properties />
            </test-case>
            <test-case id="0-1594" name="VectorD_Parse" fullname="Nour.Play.VectorDTest.VectorD_Parse" methodname="VectorD_Parse" classname="Nour.Play.VectorDTest" runstate="Runnable" seed="1291537340" result="Passed" start-time="2023-12-27T17:19:11.0671150Z" end-time="2023-12-27T17:19:11.0674710Z" duration="0.000357" asserts="2">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="0-1595" name="VectorTest" fullname="Nour.Play.VectorTest" classname="Nour.Play.VectorTest" runstate="Runnable" testcasecount="16" result="Passed" start-time="2023-12-27T17:19:11.0674940Z" end-time="2023-12-27T17:19:11.0705600Z" duration="0.003065" total="16" passed="16" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="44">
            <properties />
            <test-case id="0-1597" name="Size_NotInitialized" fullname="Nour.Play.VectorTest.Size_NotInitialized" methodname="Size_NotInitialized" classname="Nour.Play.VectorTest" runstate="Runnable" seed="1387416401" result="Passed" start-time="2023-12-27T17:19:11.0675310Z" end-time="2023-12-27T17:19:11.0677700Z" duration="0.000239" asserts="2">
              <properties />
            </test-case>
            <test-case id="0-1605" name="Vector_CanAddAndSubtract" fullname="Nour.Play.VectorTest.Vector_CanAddAndSubtract" methodname="Vector_CanAddAndSubtract" classname="Nour.Play.VectorTest" runstate="Runnable" seed="1404998305" result="Passed" start-time="2023-12-27T17:19:11.0677770Z" end-time="2023-12-27T17:19:11.0681630Z" duration="0.000387" asserts="6">
              <properties />
            </test-case>
            <test-case id="0-1606" name="Vector_ConstructorChecksArguments" fullname="Nour.Play.VectorTest.Vector_ConstructorChecksArguments" methodname="Vector_ConstructorChecksArguments" classname="Nour.Play.VectorTest" runstate="Runnable" seed="1014072154" result="Passed" start-time="2023-12-27T17:19:11.0681710Z" end-time="2023-12-27T17:19:11.0682700Z" duration="0.000100" asserts="1">
              <properties />
            </test-case>
            <test-case id="0-1603" name="Vector_EmptyIsEmpty" fullname="Nour.Play.VectorTest.Vector_EmptyIsEmpty" methodname="Vector_EmptyIsEmpty" classname="Nour.Play.VectorTest" runstate="Runnable" seed="1441420922" result="Passed" start-time="2023-12-27T17:19:11.0682760Z" end-time="2023-12-27T17:19:11.0683310Z" duration="0.000055" asserts="1">
              <properties />
            </test-case>
            <test-case id="0-1602" name="Vector_EmptyVectorIsEmpty" fullname="Nour.Play.VectorTest.Vector_EmptyVectorIsEmpty" methodname="Vector_EmptyVectorIsEmpty" classname="Nour.Play.VectorTest" runstate="Runnable" seed="999826635" result="Passed" start-time="2023-12-27T17:19:11.0683360Z" end-time="2023-12-27T17:19:11.0683960Z" duration="0.000059" asserts="1">
              <properties />
            </test-case>
            <test-case id="0-1598" name="Vector_EqualityIsCheckedByValue" fullname="Nour.Play.VectorTest.Vector_EqualityIsCheckedByValue" methodname="Vector_EqualityIsCheckedByValue" classname="Nour.Play.VectorTest" runstate="Runnable" seed="667208678" result="Passed" start-time="2023-12-27T17:19:11.0684020Z" end-time="2023-12-27T17:19:11.0685630Z" duration="0.000161" asserts="5">
              <properties />
            </test-case>
            <test-case id="0-1610" name="Vector_FromIndex" fullname="Nour.Play.VectorTest.Vector_FromIndex" methodname="Vector_FromIndex" classname="Nour.Play.VectorTest" runstate="Runnable" seed="796330266" result="Passed" start-time="2023-12-27T17:19:11.0685690Z" end-time="2023-12-27T17:19:11.0687040Z" duration="0.000134" asserts="2">
              <properties />
            </test-case>
            <test-case id="0-1599" name="Vector_GetHashCodeIsDerivedFromValue" fullname="Nour.Play.VectorTest.Vector_GetHashCodeIsDerivedFromValue" methodname="Vector_GetHashCodeIsDerivedFromValue" classname="Nour.Play.VectorTest" runstate="Runnable" seed="350481824" result="Passed" start-time="2023-12-27T17:19:11.0687090Z" end-time="2023-12-27T17:19:11.0689540Z" duration="0.000244" asserts="2">
              <properties />
            </test-case>
            <test-case id="0-1596" name="Vector_IsInitialized" fullname="Nour.Play.VectorTest.Vector_IsInitialized" methodname="Vector_IsInitialized" classname="Nour.Play.VectorTest" runstate="Runnable" seed="1503277271" result="Passed" start-time="2023-12-27T17:19:11.0689620Z" end-time="2023-12-27T17:19:11.0690360Z" duration="0.000074" asserts="2">
              <properties />
            </test-case>
            <test-case id="0-1604" name="Vector_NotEqualToNull" fullname="Nour.Play.VectorTest.Vector_NotEqualToNull" methodname="Vector_NotEqualToNull" classname="Nour.Play.VectorTest" runstate="Runnable" seed="1645273564" result="Passed" start-time="2023-12-27T17:19:11.0690420Z" end-time="2023-12-27T17:19:11.0691810Z" duration="0.000139" asserts="3">
              <properties />
            </test-case>
            <test-case id="0-1608" name="Vector_SnappedForce" fullname="Nour.Play.VectorTest.Vector_SnappedForce" methodname="Vector_SnappedForce" classname="Nour.Play.VectorTest" runstate="Runnable" seed="450070837" result="Passed" start-time="2023-12-27T17:19:11.0691870Z" end-time="2023-12-27T17:19:11.0698860Z" duration="0.000699" asserts="9">
              <properties />
            </test-case>
            <test-case id="0-1607" name="Vector_ThrowsIfNotAValidSize" fullname="Nour.Play.VectorTest.Vector_ThrowsIfNotAValidSize" methodname="Vector_ThrowsIfNotAValidSize" classname="Nour.Play.VectorTest" runstate="Runnable" seed="1912674101" result="Passed" start-time="2023-12-27T17:19:11.0698920Z" end-time="2023-12-27T17:19:11.0701440Z" duration="0.000252" asserts="3">
              <properties />
            </test-case>
            <test-case id="0-1609" name="Vector_ToIndex" fullname="Nour.Play.VectorTest.Vector_ToIndex" methodname="Vector_ToIndex" classname="Nour.Play.VectorTest" runstate="Runnable" seed="859613817" result="Passed" start-time="2023-12-27T17:19:11.0701510Z" end-time="2023-12-27T17:19:11.0703250Z" duration="0.000174" asserts="3">
              <properties />
            </test-case>
            <test-case id="0-1600" name="Vector_ToStringFormat" fullname="Nour.Play.VectorTest.Vector_ToStringFormat" methodname="Vector_ToStringFormat" classname="Nour.Play.VectorTest" runstate="Runnable" seed="1760632035" result="Passed" start-time="2023-12-27T17:19:11.0703310Z" end-time="2023-12-27T17:19:11.0704020Z" duration="0.000071" asserts="2">
              <properties />
            </test-case>
            <test-case id="0-1601" name="Vector_ZeroVectorIsNotEmpty" fullname="Nour.Play.VectorTest.Vector_ZeroVectorIsNotEmpty" methodname="Vector_ZeroVectorIsNotEmpty" classname="Nour.Play.VectorTest" runstate="Runnable" seed="2014326770" result="Passed" start-time="2023-12-27T17:19:11.0704080Z" end-time="2023-12-27T17:19:11.0704710Z" duration="0.000063" asserts="1">
              <properties />
            </test-case>
            <test-case id="0-1611" name="VectorD_Parse" fullname="Nour.Play.VectorTest.VectorD_Parse" methodname="VectorD_Parse" classname="Nour.Play.VectorTest" runstate="Runnable" seed="1265892519" result="Passed" start-time="2023-12-27T17:19:11.0704770Z" end-time="2023-12-27T17:19:11.0705490Z" duration="0.000072" asserts="1">
              <properties />
            </test-case>
          </test-suite>
        </test-suite>
      </test-suite>
      <test-suite type="TestFixture" id="0-1000" name="RandomAreaGeneratorTest" fullname="RandomAreaGeneratorTest" classname="RandomAreaGeneratorTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-12-27T17:19:11.0705810Z" end-time="2023-12-27T17:19:11.0814630Z" duration="0.010882" total="2" passed="2" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="4052">
        <properties />
        <test-case id="0-1001" name="ZoneGenerator_CanGenerateZones" fullname="RandomAreaGeneratorTest.ZoneGenerator_CanGenerateZones" methodname="ZoneGenerator_CanGenerateZones" classname="RandomAreaGeneratorTest" runstate="Runnable" seed="1617270884" result="Passed" start-time="2023-12-27T17:19:11.0706170Z" end-time="2023-12-27T17:19:11.0805470Z" duration="0.009931" asserts="4006">
          <properties />
        </test-case>
        <test-case id="0-1002" name="ZoneGenerator_CustomSettings" fullname="RandomAreaGeneratorTest.ZoneGenerator_CustomSettings" methodname="ZoneGenerator_CustomSettings" classname="RandomAreaGeneratorTest" runstate="Runnable" seed="1256075083" result="Passed" start-time="2023-12-27T17:19:11.0805580Z" end-time="2023-12-27T17:19:11.0814500Z" duration="0.000892" asserts="46">
          <properties />
        </test-case>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>