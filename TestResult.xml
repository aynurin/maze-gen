<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-run id="0" runstate="Runnable" testcasecount="997" result="Skipped" label="Ignored" total="442" passed="340" failed="0" warnings="0" inconclusive="0" skipped="102" asserts="17127" engine-version="3.17.0.0" clr-version="4.0.30319.42000" start-time="2024-02-22 15:42:08Z" end-time="2024-02-22 15:42:24Z" duration="15.717665">
  <command-line><![CDATA[/home/data/repos/github.com/aynurin/maze-gen/packages/NUnit.ConsoleRunner.3.17.0/tools/nunit3-console.exe build/Debug/tests/PlayersWorlds.Maps.Tests.dll --where=Category!=Load --framework=mono-4.0]]></command-line>
  <filter>
    <not>
      <prop name="Category">Load</prop>
    </not>
  </filter>
  <test-suite type="Assembly" id="1-2042" name="PlayersWorlds.Maps.Tests.dll" fullname="/home/data/repos/github.com/aynurin/maze-gen/build/Debug/tests/PlayersWorlds.Maps.Tests.dll" runstate="Runnable" testcasecount="997" result="Skipped" label="Ignored" site="Child" start-time="2024-02-22T15:42:09.2440080Z" end-time="2024-02-22T15:42:24.4738120Z" duration="15.229742" total="442" passed="340" failed="0" warnings="0" inconclusive="0" skipped="102" asserts="17127">
    <environment framework-version="4.0.1.0" clr-version="4.0.30319.42000" os-version="Unix 6.1.71.1" platform="Unix" cwd="/home/data/repos/github.com/aynurin/maze-gen" machine-name="lightview" user="shav" user-domain="lightview" culture="en-US" uiculture="en-US" os-architecture="x64" />
    <settings>
      <setting name="RequestedRuntimeFramework" value="mono-4.0" />
      <setting name="DisposeRunners" value="True" />
      <setting name="WorkDirectory" value="/home/data/repos/github.com/aynurin/maze-gen" />
      <setting name="ImageRuntimeVersion" value="4.0.30319" />
      <setting name="ImageTargetFrameworkName" value=".NETFramework,Version=v4.7" />
      <setting name="ImageRequiresX86" value="False" />
      <setting name="ImageRequiresDefaultAppDomainAssemblyResolver" value="False" />
      <setting name="TargetRuntimeFramework" value="mono-4.0" />
      <setting name="NumberOfTestWorkers" value="24" />
    </settings>
    <properties>
      <property name="_PID" value="1408226" />
      <property name="_APPDOMAIN" value="domain-" />
    </properties>
    <reason>
      <message><![CDATA[One or more child tests were ignored]]></message>
    </reason>
    <test-suite type="SetUpFixture" id="1-1003" name="[default namespace]" fullname="SetUpTests" classname="SetUpTests" runstate="Runnable" testcasecount="997" result="Skipped" label="Ignored" site="Child" start-time="2024-02-22T15:42:09.2487810Z" end-time="2024-02-22T15:42:24.4738020Z" duration="15.225022" total="442" passed="340" failed="0" warnings="0" inconclusive="0" skipped="102" asserts="17127">
      <reason>
        <message><![CDATA[One or more child tests were ignored]]></message>
      </reason>
      <test-suite type="TestSuite" id="1-2043" name="PlayersWorlds" fullname="PlayersWorlds" runstate="Runnable" testcasecount="995" result="Skipped" label="Ignored" site="Child" start-time="2024-02-22T15:42:09.2515160Z" end-time="2024-02-22T15:42:24.4652420Z" duration="15.213725" total="440" passed="338" failed="0" warnings="0" inconclusive="0" skipped="102" asserts="14085">
        <reason>
          <message><![CDATA[One or more child tests were ignored]]></message>
        </reason>
        <test-suite type="TestSuite" id="1-2044" name="Maps" fullname="PlayersWorlds.Maps" runstate="Runnable" testcasecount="995" result="Skipped" label="Ignored" site="Child" start-time="2024-02-22T15:42:09.2515810Z" end-time="2024-02-22T15:42:24.4652380Z" duration="15.213657" total="440" passed="338" failed="0" warnings="0" inconclusive="0" skipped="102" asserts="14085">
          <reason>
            <message><![CDATA[One or more child tests were ignored]]></message>
          </reason>
          <test-suite type="TestSuite" id="1-2049" name="Areas" fullname="PlayersWorlds.Maps.Areas" runstate="Runnable" testcasecount="115" result="Passed" start-time="2024-02-22T15:42:09.2515900Z" end-time="2024-02-22T15:42:09.4142880Z" duration="0.162699" total="64" passed="64" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="206">
            <test-suite type="TestSuite" id="1-2050" name="Evolving" fullname="PlayersWorlds.Maps.Areas.Evolving" runstate="Runnable" testcasecount="110" result="Passed" start-time="2024-02-22T15:42:09.2515950Z" end-time="2024-02-22T15:42:09.4108150Z" duration="0.159219" total="59" passed="59" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="179">
              <test-suite type="TestFixture" id="1-1925" name="AreaDistributorTest" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" testcasecount="73" result="Passed" start-time="2024-02-22T15:42:09.2516380Z" end-time="2024-02-22T15:42:09.3004230Z" duration="0.048785" total="23" passed="23" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="46">
                <test-case id="1-1926" name="AreaDistributorTest_OneTest" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OneTest" methodname="AreaDistributorTest_OneTest" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1777289147" result="Passed" start-time="2024-02-22T15:42:09.2517010Z" end-time="2024-02-22T15:42:09.2838120Z" duration="0.032178" asserts="2" />
                <test-suite type="ParameterizedMethod" id="1-1939" name="AreaDistributorTest_OverlapTwo" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2024-02-22T15:42:09.2851380Z" end-time="2024-02-22T15:42:09.2962410Z" duration="0.011103" total="10" passed="10" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="20">
                  <test-case id="1-1929" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P2x2;S4x4 P5x5;S4x4&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P2x2;S4x4 P5x5;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="301056667" result="Passed" start-time="2024-02-22T15:42:09.2852120Z" end-time="2024-02-22T15:42:09.2916460Z" duration="0.006434" asserts="2" />
                  <test-case id="1-1930" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P5x2;S4x4 P2x5;S4x4&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P5x2;S4x4 P2x5;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="546503845" result="Passed" start-time="2024-02-22T15:42:09.2916540Z" end-time="2024-02-22T15:42:09.2919400Z" duration="0.000286" asserts="2" />
                  <test-case id="1-1931" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P2x5;S4x4 P5x2;S4x4&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P2x5;S4x4 P5x2;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1560510678" result="Passed" start-time="2024-02-22T15:42:09.2919460Z" end-time="2024-02-22T15:42:09.2922200Z" duration="0.000274" asserts="2" />
                  <test-case id="1-1932" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P5x5;S4x4 P2x2;S4x4&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P5x5;S4x4 P2x2;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="272322497" result="Passed" start-time="2024-02-22T15:42:09.2922260Z" end-time="2024-02-22T15:42:09.2924980Z" duration="0.000271" asserts="2" />
                  <test-case id="1-1933" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P4x4;S4x4 P3x3;S4x4&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P4x4;S4x4 P3x3;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="812415993" result="Passed" start-time="2024-02-22T15:42:09.2925040Z" end-time="2024-02-22T15:42:09.2940310Z" duration="0.001528" asserts="2" />
                  <test-case id="1-1934" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P4x3;S4x4 P3x4;S4x4&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P4x3;S4x4 P3x4;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1991786515" result="Passed" start-time="2024-02-22T15:42:09.2940390Z" end-time="2024-02-22T15:42:09.2942940Z" duration="0.000255" asserts="2" />
                  <test-case id="1-1935" name="AreaDistributorTest_OverlapTwo(&quot;11x11: P3.5x3.5;S4x4 P3.5x3.5;S4x4&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;11x11: P3.5x3.5;S4x4 P3.5x3.5;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="2005571698" result="Passed" start-time="2024-02-22T15:42:09.2942990Z" end-time="2024-02-22T15:42:09.2945930Z" duration="0.000294" asserts="2" />
                  <test-case id="1-1936" name="AreaDistributorTest_OverlapTwo(&quot;16x16: P4x4;S8x8 P5x9;S2x2&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;16x16: P4x4;S8x8 P5x9;S2x2&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="171907518" result="Passed" start-time="2024-02-22T15:42:09.2946000Z" end-time="2024-02-22T15:42:09.2948470Z" duration="0.000248" asserts="2" />
                  <test-case id="1-1937" name="AreaDistributorTest_OverlapTwo(&quot;16x16: P4x4;S8x8 P5x7;S4x4&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;16x16: P4x4;S8x8 P5x7;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1826673344" result="Passed" start-time="2024-02-22T15:42:09.2948530Z" end-time="2024-02-22T15:42:09.2950950Z" duration="0.000243" asserts="2" />
                  <test-case id="1-1938" name="AreaDistributorTest_OverlapTwo(&quot;16x16: P5x5;S6x6 P6x6;S4x4&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_OverlapTwo(&quot;16x16: P5x5;S6x6 P6x6;S4x4&quot;)" methodname="AreaDistributorTest_OverlapTwo" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1524736464" result="Passed" start-time="2024-02-22T15:42:09.2951000Z" end-time="2024-02-22T15:42:09.2953450Z" duration="0.000245" asserts="2" />
                </test-suite>
                <test-case id="1-1927" name="AreaDistributorTest_SidePressure" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SidePressure" methodname="AreaDistributorTest_SidePressure" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="375649829" result="Passed" start-time="2024-02-22T15:42:09.2970140Z" end-time="2024-02-22T15:42:09.2977280Z" duration="0.000714" asserts="2" />
                <test-suite type="ParameterizedMethod" id="1-1950" name="AreaDistributorTest_SingleMapForce" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2024-02-22T15:42:09.2977360Z" end-time="2024-02-22T15:42:09.3000420Z" duration="0.002306" total="10" passed="10" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="20">
                  <test-case id="1-1940" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P1x2;S2x2&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P1x2;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1549119144" result="Passed" start-time="2024-02-22T15:42:09.2977490Z" end-time="2024-02-22T15:42:09.2980900Z" duration="0.000340" asserts="2" />
                  <test-case id="1-1941" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P2x2;S2x2&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P2x2;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1214248187" result="Passed" start-time="2024-02-22T15:42:09.2980970Z" end-time="2024-02-22T15:42:09.2982770Z" duration="0.000180" asserts="2" />
                  <test-case id="1-1942" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P3x2;S2x2&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P3x2;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="840917852" result="Passed" start-time="2024-02-22T15:42:09.2982820Z" end-time="2024-02-22T15:42:09.2984600Z" duration="0.000178" asserts="2" />
                  <test-case id="1-1943" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P1x5;S2x2&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P1x5;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="10404813" result="Passed" start-time="2024-02-22T15:42:09.2984650Z" end-time="2024-02-22T15:42:09.2986420Z" duration="0.000177" asserts="2" />
                  <test-case id="1-1944" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P2x5;S2x2&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P2x5;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="810934462" result="Passed" start-time="2024-02-22T15:42:09.2987610Z" end-time="2024-02-22T15:42:09.2989600Z" duration="0.000199" asserts="2" />
                  <test-case id="1-1945" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P3x5;S2x2&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P3x5;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1379638271" result="Passed" start-time="2024-02-22T15:42:09.2989660Z" end-time="2024-02-22T15:42:09.2991620Z" duration="0.000196" asserts="2" />
                  <test-case id="1-1946" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P1x8;S2x2&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P1x8;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1928195673" result="Passed" start-time="2024-02-22T15:42:09.2991670Z" end-time="2024-02-22T15:42:09.2993440Z" duration="0.000177" asserts="2" />
                  <test-case id="1-1947" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P2x8;S2x2&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P2x8;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="631736770" result="Passed" start-time="2024-02-22T15:42:09.2993490Z" end-time="2024-02-22T15:42:09.2995300Z" duration="0.000181" asserts="2" />
                  <test-case id="1-1948" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P3x8;S2x2&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P3x8;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1258027780" result="Passed" start-time="2024-02-22T15:42:09.2995350Z" end-time="2024-02-22T15:42:09.2997260Z" duration="0.000191" asserts="2" />
                  <test-case id="1-1949" name="AreaDistributorTest_SingleMapForce(&quot;6x12: P-1x-4;S2x2&quot;)" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_SingleMapForce(&quot;6x12: P-1x-4;S2x2&quot;)" methodname="AreaDistributorTest_SingleMapForce" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1584686150" result="Passed" start-time="2024-02-22T15:42:09.2997310Z" end-time="2024-02-22T15:42:09.3000330Z" duration="0.000302" asserts="2" />
                </test-suite>
                <test-case id="1-1928" name="AreaDistributorTest_TwoTest" fullname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest.AreaDistributorTest_TwoTest" methodname="AreaDistributorTest_TwoTest" classname="PlayersWorlds.Maps.Areas.Evolving.AreaDistributorTest" runstate="Runnable" seed="1533837118" result="Passed" start-time="2024-02-22T15:42:09.3000480Z" end-time="2024-02-22T15:42:09.3003940Z" duration="0.000346" asserts="2" />
              </test-suite>
              <test-suite type="TestFixture" id="1-2002" name="EvolvingSimulatorTest" fullname="PlayersWorlds.Maps.Areas.Evolving.EvolvingSimulatorTest" classname="PlayersWorlds.Maps.Areas.Evolving.EvolvingSimulatorTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2024-02-22T15:42:09.3008020Z" end-time="2024-02-22T15:42:09.4009380Z" duration="0.100136" total="2" passed="2" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="2">
                <test-case id="1-2004" name="EvolvingSimulator_ReturnsEpochsIfEvolitionIsNotComplete" fullname="PlayersWorlds.Maps.Areas.Evolving.EvolvingSimulatorTest.EvolvingSimulator_ReturnsEpochsIfEvolitionIsNotComplete" methodname="EvolvingSimulator_ReturnsEpochsIfEvolitionIsNotComplete" classname="PlayersWorlds.Maps.Areas.Evolving.EvolvingSimulatorTest" runstate="Runnable" seed="196961032" result="Passed" start-time="2024-02-22T15:42:09.3008530Z" end-time="2024-02-22T15:42:09.3986140Z" duration="0.097761" asserts="1" />
                <test-case id="1-2003" name="EvolvingSimulator_ThrowsIfMaxEpochsIsZero" fullname="PlayersWorlds.Maps.Areas.Evolving.EvolvingSimulatorTest.EvolvingSimulator_ThrowsIfMaxEpochsIsZero" methodname="EvolvingSimulator_ThrowsIfMaxEpochsIsZero" classname="PlayersWorlds.Maps.Areas.Evolving.EvolvingSimulatorTest" runstate="Runnable" seed="1102326312" result="Passed" start-time="2024-02-22T15:42:09.3986330Z" end-time="2024-02-22T15:42:09.4009180Z" duration="0.002285" asserts="1" />
              </test-suite>
              <test-suite type="TestFixture" id="1-2005" name="FloatingAreaTest" fullname="PlayersWorlds.Maps.Areas.Evolving.FloatingAreaTest" classname="PlayersWorlds.Maps.Areas.Evolving.FloatingAreaTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2024-02-22T15:42:09.4009550Z" end-time="2024-02-22T15:42:09.4048420Z" duration="0.003887" total="4" passed="4" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="10">
                <test-case id="1-2009" name="CenterIsValid" fullname="PlayersWorlds.Maps.Areas.Evolving.FloatingAreaTest.CenterIsValid" methodname="CenterIsValid" classname="PlayersWorlds.Maps.Areas.Evolving.FloatingAreaTest" runstate="Runnable" seed="52774105" result="Passed" start-time="2024-02-22T15:42:09.4010070Z" end-time="2024-02-22T15:42:09.4034510Z" duration="0.002444" asserts="4" />
                <test-case id="1-2008" name="Contains" fullname="PlayersWorlds.Maps.Areas.Evolving.FloatingAreaTest.Contains" methodname="Contains" classname="PlayersWorlds.Maps.Areas.Evolving.FloatingAreaTest" runstate="Runnable" seed="243686805" result="Passed" start-time="2024-02-22T15:42:09.4034620Z" end-time="2024-02-22T15:42:09.4038840Z" duration="0.000422" asserts="2" />
                <test-case id="1-2007" name="Overlaps" fullname="PlayersWorlds.Maps.Areas.Evolving.FloatingAreaTest.Overlaps" methodname="Overlaps" classname="PlayersWorlds.Maps.Areas.Evolving.FloatingAreaTest" runstate="Runnable" seed="1453625919" result="Passed" start-time="2024-02-22T15:42:09.4038920Z" end-time="2024-02-22T15:42:09.4041030Z" duration="0.000212" asserts="2" />
                <test-case id="1-2006" name="Parse" fullname="PlayersWorlds.Maps.Areas.Evolving.FloatingAreaTest.Parse" methodname="Parse" classname="PlayersWorlds.Maps.Areas.Evolving.FloatingAreaTest" runstate="Runnable" seed="1098454107" result="Passed" start-time="2024-02-22T15:42:09.4041100Z" end-time="2024-02-22T15:42:09.4048310Z" duration="0.000721" asserts="2" />
              </test-suite>
              <test-suite type="TestFixture" id="1-2010" name="ForceFormulaTestTest" fullname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest" classname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" testcasecount="8" result="Passed" start-time="2024-02-22T15:42:09.4048540Z" end-time="2024-02-22T15:42:09.4074760Z" duration="0.002622" total="8" passed="8" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="42">
                <test-case id="1-2016" name="CollideForce_Negative" fullname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest.CollideForce_Negative" methodname="CollideForce_Negative" classname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="1676769745" result="Passed" start-time="2024-02-22T15:42:09.4048990Z" end-time="2024-02-22T15:42:09.4058510Z" duration="0.000952" asserts="9" />
                <test-case id="1-2015" name="CollideForce_Positive" fullname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest.CollideForce_Positive" methodname="CollideForce_Positive" classname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="69437521" result="Passed" start-time="2024-02-22T15:42:09.4058590Z" end-time="2024-02-22T15:42:09.4061720Z" duration="0.000313" asserts="9" />
                <test-case id="1-2012" name="NormalForce_Negative" fullname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest.NormalForce_Negative" methodname="NormalForce_Negative" classname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="1212240154" result="Passed" start-time="2024-02-22T15:42:09.4061790Z" end-time="2024-02-22T15:42:09.4065440Z" duration="0.000365" asserts="3" />
                <test-case id="1-2014" name="NormalForce_NegativeCapped" fullname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest.NormalForce_NegativeCapped" methodname="NormalForce_NegativeCapped" classname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="1971716511" result="Passed" start-time="2024-02-22T15:42:09.4065510Z" end-time="2024-02-22T15:42:09.4067010Z" duration="0.000150" asserts="5" />
                <test-case id="1-2011" name="NormalForce_Positive" fullname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest.NormalForce_Positive" methodname="NormalForce_Positive" classname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="1923562559" result="Passed" start-time="2024-02-22T15:42:09.4067080Z" end-time="2024-02-22T15:42:09.4068140Z" duration="0.000106" asserts="3" />
                <test-case id="1-2013" name="NormalForce_PositiveCapped" fullname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest.NormalForce_PositiveCapped" methodname="NormalForce_PositiveCapped" classname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="799716425" result="Passed" start-time="2024-02-22T15:42:09.4068200Z" end-time="2024-02-22T15:42:09.4069570Z" duration="0.000138" asserts="5" />
                <test-case id="1-2018" name="OverlapForce_Negative" fullname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest.OverlapForce_Negative" methodname="OverlapForce_Negative" classname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="72420860" result="Passed" start-time="2024-02-22T15:42:09.4069630Z" end-time="2024-02-22T15:42:09.4072180Z" duration="0.000254" asserts="4" />
                <test-case id="1-2017" name="OverlapForce_Positive" fullname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest.OverlapForce_Positive" methodname="OverlapForce_Positive" classname="PlayersWorlds.Maps.Areas.Evolving.ForceFormulaTestTest" runstate="Runnable" seed="2053669476" result="Passed" start-time="2024-02-22T15:42:09.4072240Z" end-time="2024-02-22T15:42:09.4074650Z" duration="0.000241" asserts="4" />
              </test-suite>
              <test-suite type="TestFixture" id="1-2019" name="SideToSideForceProducerTest" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" testcasecount="22" result="Passed" start-time="2024-02-22T15:42:09.4074860Z" end-time="2024-02-22T15:42:09.4108090Z" duration="0.003323" total="22" passed="22" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="79">
                <test-case id="1-2037" name="GetAxisDistance_Collide" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Collide" methodname="GetAxisDistance_Collide" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="2050866931" result="Passed" start-time="2024-02-22T15:42:09.4075340Z" end-time="2024-02-22T15:42:09.4081270Z" duration="0.000593" asserts="6" />
                <test-case id="1-2040" name="GetAxisDistance_Contain1" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Contain1" methodname="GetAxisDistance_Contain1" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1822169178" result="Passed" start-time="2024-02-22T15:42:09.4081340Z" end-time="2024-02-22T15:42:09.4083640Z" duration="0.000230" asserts="6" />
                <test-case id="1-2041" name="GetAxisDistance_Contain2" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Contain2" methodname="GetAxisDistance_Contain2" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="206649364" result="Passed" start-time="2024-02-22T15:42:09.4083710Z" end-time="2024-02-22T15:42:09.4085920Z" duration="0.000222" asserts="6" />
                <test-case id="1-2035" name="GetAxisDistance_Normal1" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Normal1" methodname="GetAxisDistance_Normal1" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1216158568" result="Passed" start-time="2024-02-22T15:42:09.4085990Z" end-time="2024-02-22T15:42:09.4088100Z" duration="0.000211" asserts="6" />
                <test-case id="1-2036" name="GetAxisDistance_Normal2" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Normal2" methodname="GetAxisDistance_Normal2" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1148556234" result="Passed" start-time="2024-02-22T15:42:09.4088160Z" end-time="2024-02-22T15:42:09.4090210Z" duration="0.000204" asserts="6" />
                <test-case id="1-2038" name="GetAxisDistance_Overlap1" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Overlap1" methodname="GetAxisDistance_Overlap1" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1707664041" result="Passed" start-time="2024-02-22T15:42:09.4090270Z" end-time="2024-02-22T15:42:09.4092370Z" duration="0.000210" asserts="6" />
                <test-case id="1-2039" name="GetAxisDistance_Overlap2" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetAxisDistance_Overlap2" methodname="GetAxisDistance_Overlap2" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="585952166" result="Passed" start-time="2024-02-22T15:42:09.4092430Z" end-time="2024-02-22T15:42:09.4094450Z" duration="0.000202" asserts="6" />
                <test-case id="1-2029" name="GetOpposingForce_CentersInside_NoOpposingForce" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_CentersInside_NoOpposingForce" methodname="GetOpposingForce_CentersInside_NoOpposingForce" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="534597694" result="Passed" start-time="2024-02-22T15:42:09.4094520Z" end-time="2024-02-22T15:42:09.4095670Z" duration="0.000115" asserts="2" />
                <test-case id="1-2030" name="GetOpposingForce_CentersInside_WithOpposingForce" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_CentersInside_WithOpposingForce" methodname="GetOpposingForce_CentersInside_WithOpposingForce" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1693853844" result="Passed" start-time="2024-02-22T15:42:09.4095730Z" end-time="2024-02-22T15:42:09.4096570Z" duration="0.000083" asserts="2" />
                <test-case id="1-2031" name="GetOpposingForce_CentersOutside_NoOpposingForce" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_CentersOutside_NoOpposingForce" methodname="GetOpposingForce_CentersOutside_NoOpposingForce" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1668477955" result="Passed" start-time="2024-02-22T15:42:09.4096630Z" end-time="2024-02-22T15:42:09.4097500Z" duration="0.000088" asserts="2" />
                <test-case id="1-2032" name="GetOpposingForce_CentersOutside_WithOpposingForce" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_CentersOutside_WithOpposingForce" methodname="GetOpposingForce_CentersOutside_WithOpposingForce" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1417027316" result="Passed" start-time="2024-02-22T15:42:09.4097570Z" end-time="2024-02-22T15:42:09.4098290Z" duration="0.000073" asserts="2" />
                <test-case id="1-2033" name="GetOpposingForce_NoIntersection_NoOpposingForce" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_NoIntersection_NoOpposingForce" methodname="GetOpposingForce_NoIntersection_NoOpposingForce" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="19402995" result="Passed" start-time="2024-02-22T15:42:09.4098350Z" end-time="2024-02-22T15:42:09.4099030Z" duration="0.000069" asserts="2" />
                <test-case id="1-2034" name="GetOpposingForce_NoIntersection_WithOpposingForce" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_NoIntersection_WithOpposingForce" methodname="GetOpposingForce_NoIntersection_WithOpposingForce" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1738830286" result="Passed" start-time="2024-02-22T15:42:09.4099090Z" end-time="2024-02-22T15:42:09.4099760Z" duration="0.000067" asserts="2" />
                <test-case id="1-2027" name="GetOpposingForce_WhenCenterMatches_NoOpposingForce" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_WhenCenterMatches_NoOpposingForce" methodname="GetOpposingForce_WhenCenterMatches_NoOpposingForce" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="2058623647" result="Passed" start-time="2024-02-22T15:42:09.4099820Z" end-time="2024-02-22T15:42:09.4100490Z" duration="0.000067" asserts="2" />
                <test-case id="1-2028" name="GetOpposingForce_WhenCenterMatches_WithOpposingForce" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.GetOpposingForce_WhenCenterMatches_WithOpposingForce" methodname="GetOpposingForce_WhenCenterMatches_WithOpposingForce" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1227763634" result="Passed" start-time="2024-02-22T15:42:09.4100540Z" end-time="2024-02-22T15:42:09.4101250Z" duration="0.000071" asserts="2" />
                <test-case id="1-2023" name="MapAreaSystemTest_DistanceCentersMatch" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistanceCentersMatch" methodname="MapAreaSystemTest_DistanceCentersMatch" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="949666522" result="Passed" start-time="2024-02-22T15:42:09.4101310Z" end-time="2024-02-22T15:42:09.4102310Z" duration="0.000100" asserts="3" />
                <test-case id="1-2026" name="MapAreaSystemTest_DistanceNegativeCollide" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistanceNegativeCollide" methodname="MapAreaSystemTest_DistanceNegativeCollide" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="812746043" result="Passed" start-time="2024-02-22T15:42:09.4102370Z" end-time="2024-02-22T15:42:09.4103310Z" duration="0.000094" asserts="3" />
                <test-case id="1-2024" name="MapAreaSystemTest_DistanceNegativeNormal" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistanceNegativeNormal" methodname="MapAreaSystemTest_DistanceNegativeNormal" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="5178960" result="Passed" start-time="2024-02-22T15:42:09.4103370Z" end-time="2024-02-22T15:42:09.4104260Z" duration="0.000090" asserts="3" />
                <test-case id="1-2025" name="MapAreaSystemTest_DistanceNegativeOverlap" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistanceNegativeOverlap" methodname="MapAreaSystemTest_DistanceNegativeOverlap" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1934565449" result="Passed" start-time="2024-02-22T15:42:09.4104320Z" end-time="2024-02-22T15:42:09.4105200Z" duration="0.000087" asserts="3" />
                <test-case id="1-2022" name="MapAreaSystemTest_DistancePositiveCollide" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistancePositiveCollide" methodname="MapAreaSystemTest_DistancePositiveCollide" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="749722292" result="Passed" start-time="2024-02-22T15:42:09.4105260Z" end-time="2024-02-22T15:42:09.4106140Z" duration="0.000088" asserts="3" />
                <test-case id="1-2020" name="MapAreaSystemTest_DistancePositiveNormal" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistancePositiveNormal" methodname="MapAreaSystemTest_DistancePositiveNormal" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="34599287" result="Passed" start-time="2024-02-22T15:42:09.4106200Z" end-time="2024-02-22T15:42:09.4107070Z" duration="0.000088" asserts="3" />
                <test-case id="1-2021" name="MapAreaSystemTest_DistancePositiveOverlap" fullname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest.MapAreaSystemTest_DistancePositiveOverlap" methodname="MapAreaSystemTest_DistancePositiveOverlap" classname="PlayersWorlds.Maps.Areas.Evolving.SideToSideForceProducerTest" runstate="Runnable" seed="1598941124" result="Passed" start-time="2024-02-22T15:42:09.4107130Z" end-time="2024-02-22T15:42:09.4107990Z" duration="0.000086" asserts="3" />
              </test-suite>
            </test-suite>
            <test-suite type="TestFixture" id="1-1917" name="MapAreaTest" fullname="PlayersWorlds.Maps.Areas.MapAreaTest" classname="PlayersWorlds.Maps.Areas.MapAreaTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2024-02-22T15:42:09.4108280Z" end-time="2024-02-22T15:42:09.4142820Z" duration="0.003454" total="5" passed="5" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="27">
              <test-case id="1-1920" name="Overlaps_ReturnsFalseIfDoesNotOverlap" fullname="PlayersWorlds.Maps.Areas.MapAreaTest.Overlaps_ReturnsFalseIfDoesNotOverlap" methodname="Overlaps_ReturnsFalseIfDoesNotOverlap" classname="PlayersWorlds.Maps.Areas.MapAreaTest" runstate="Runnable" seed="1169413192" result="Passed" start-time="2024-02-22T15:42:09.4108710Z" end-time="2024-02-22T15:42:09.4113470Z" duration="0.000476" asserts="15" />
              <test-case id="1-1919" name="Overlaps_ReturnsTrueIfOverlaps" fullname="PlayersWorlds.Maps.Areas.MapAreaTest.Overlaps_ReturnsTrueIfOverlaps" methodname="Overlaps_ReturnsTrueIfOverlaps" classname="PlayersWorlds.Maps.Areas.MapAreaTest" runstate="Runnable" seed="397404462" result="Passed" start-time="2024-02-22T15:42:09.4113550Z" end-time="2024-02-22T15:42:09.4115140Z" duration="0.000159" asserts="7" />
              <test-case id="1-1918" name="Overlaps_ThrowsIfSame" fullname="PlayersWorlds.Maps.Areas.MapAreaTest.Overlaps_ThrowsIfSame" methodname="Overlaps_ThrowsIfSame" classname="PlayersWorlds.Maps.Areas.MapAreaTest" runstate="Runnable" seed="403567586" result="Passed" start-time="2024-02-22T15:42:09.4115190Z" end-time="2024-02-22T15:42:09.4122220Z" duration="0.000703" asserts="2" />
              <test-case id="1-1921" name="Position_ThrowsIfNotInitialized" fullname="PlayersWorlds.Maps.Areas.MapAreaTest.Position_ThrowsIfNotInitialized" methodname="Position_ThrowsIfNotInitialized" classname="PlayersWorlds.Maps.Areas.MapAreaTest" runstate="Runnable" seed="290559809" result="Passed" start-time="2024-02-22T15:42:09.4122290Z" end-time="2024-02-22T15:42:09.4138840Z" duration="0.001655" asserts="2" />
              <test-case id="1-1922" name="ThrowsIfWrongParameters" fullname="PlayersWorlds.Maps.Areas.MapAreaTest.ThrowsIfWrongParameters" methodname="ThrowsIfWrongParameters" classname="PlayersWorlds.Maps.Areas.MapAreaTest" runstate="Runnable" seed="1917444246" result="Passed" start-time="2024-02-22T15:42:09.4138910Z" end-time="2024-02-22T15:42:09.4142710Z" duration="0.000380" asserts="1" />
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="1-1004" name="AssemblyInfoTest" fullname="PlayersWorlds.Maps.AssemblyInfoTest" classname="PlayersWorlds.Maps.AssemblyInfoTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2024-02-22T15:42:09.4143000Z" end-time="2024-02-22T15:42:09.4150260Z" duration="0.000726" total="2" passed="2" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="4">
            <test-case id="1-1006" name="TestAssemblyCompany" fullname="PlayersWorlds.Maps.AssemblyInfoTest.TestAssemblyCompany" methodname="TestAssemblyCompany" classname="PlayersWorlds.Maps.AssemblyInfoTest" runstate="Runnable" seed="2107287147" result="Passed" start-time="2024-02-22T15:42:09.4143430Z" end-time="2024-02-22T15:42:09.4147840Z" duration="0.000441" asserts="2" />
            <test-case id="1-1005" name="TestAssemblyTitle" fullname="PlayersWorlds.Maps.AssemblyInfoTest.TestAssemblyTitle" methodname="TestAssemblyTitle" classname="PlayersWorlds.Maps.AssemblyInfoTest" runstate="Runnable" seed="1041654030" result="Passed" start-time="2024-02-22T15:42:09.4147940Z" end-time="2024-02-22T15:42:09.4150160Z" duration="0.000222" asserts="2" />
          </test-suite>
          <test-suite type="TestFixture" id="1-1007" name="CellTest" fullname="PlayersWorlds.Maps.CellTest" classname="PlayersWorlds.Maps.CellTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2024-02-22T15:42:09.4150370Z" end-time="2024-02-22T15:42:09.4154660Z" duration="0.000429" total="1" passed="1" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="1-1008" name="CellTagEqualityTest" fullname="PlayersWorlds.Maps.CellTest.CellTagEqualityTest" methodname="CellTagEqualityTest" classname="PlayersWorlds.Maps.CellTest" runstate="Runnable" seed="1474677707" result="Passed" start-time="2024-02-22T15:42:09.4151190Z" end-time="2024-02-22T15:42:09.4154540Z" duration="0.000335" asserts="3" />
          </test-suite>
          <test-suite type="TestFixture" id="1-1009" name="ExtensionsTest" fullname="PlayersWorlds.Maps.ExtensionsTest" classname="PlayersWorlds.Maps.ExtensionsTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2024-02-22T15:42:09.4154800Z" end-time="2024-02-22T15:42:09.4223870Z" duration="0.006907" total="7" passed="7" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="13">
            <test-case id="1-1012" name="DebugString" fullname="PlayersWorlds.Maps.ExtensionsTest.DebugString" methodname="DebugString" classname="PlayersWorlds.Maps.ExtensionsTest" runstate="Runnable" seed="72580701" result="Passed" start-time="2024-02-22T15:42:09.4155350Z" end-time="2024-02-22T15:42:09.4171220Z" duration="0.001587" asserts="2" />
            <test-case id="1-1015" name="GetAllDictionaryItems" fullname="PlayersWorlds.Maps.ExtensionsTest.GetAllDictionaryItems" methodname="GetAllDictionaryItems" classname="PlayersWorlds.Maps.ExtensionsTest" runstate="Runnable" seed="1921899826" result="Passed" start-time="2024-02-22T15:42:09.4171320Z" end-time="2024-02-22T15:42:09.4189500Z" duration="0.001818" asserts="1" />
            <test-case id="1-1016" name="GetAllHashSetKeys" fullname="PlayersWorlds.Maps.ExtensionsTest.GetAllHashSetKeys" methodname="GetAllHashSetKeys" classname="PlayersWorlds.Maps.ExtensionsTest" runstate="Runnable" seed="1035708805" result="Passed" start-time="2024-02-22T15:42:09.4189580Z" end-time="2024-02-22T15:42:09.4197880Z" duration="0.000830" asserts="1" />
            <test-case id="1-1013" name="Set" fullname="PlayersWorlds.Maps.ExtensionsTest.Set" methodname="Set" classname="PlayersWorlds.Maps.ExtensionsTest" runstate="Runnable" seed="1052309839" result="Passed" start-time="2024-02-22T15:42:09.4197960Z" end-time="2024-02-22T15:42:09.4206100Z" duration="0.000814" asserts="3" />
            <test-case id="1-1014" name="SetList" fullname="PlayersWorlds.Maps.ExtensionsTest.SetList" methodname="SetList" classname="PlayersWorlds.Maps.ExtensionsTest" runstate="Runnable" seed="1921394047" result="Passed" start-time="2024-02-22T15:42:09.4206170Z" end-time="2024-02-22T15:42:09.4218860Z" duration="0.001269" asserts="3" />
            <test-case id="1-1011" name="TryDequeue_Dequeues" fullname="PlayersWorlds.Maps.ExtensionsTest.TryDequeue_Dequeues" methodname="TryDequeue_Dequeues" classname="PlayersWorlds.Maps.ExtensionsTest" runstate="Runnable" seed="1440911040" result="Passed" start-time="2024-02-22T15:42:09.4218950Z" end-time="2024-02-22T15:42:09.4222610Z" duration="0.000366" asserts="2" />
            <test-case id="1-1010" name="TryDequeue_DoesNotThrow" fullname="PlayersWorlds.Maps.ExtensionsTest.TryDequeue_DoesNotThrow" methodname="TryDequeue_DoesNotThrow" classname="PlayersWorlds.Maps.ExtensionsTest" runstate="Runnable" seed="896326956" result="Passed" start-time="2024-02-22T15:42:09.4222680Z" end-time="2024-02-22T15:42:09.4223780Z" duration="0.000110" asserts="1" />
          </test-suite>
          <test-suite type="TestFixture" id="1-1017" name="GlobalRandomTest" fullname="PlayersWorlds.Maps.GlobalRandomTest" classname="PlayersWorlds.Maps.GlobalRandomTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2024-02-22T15:42:09.4223990Z" end-time="2024-02-22T15:42:09.4265490Z" duration="0.004150" total="3" passed="3" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="1002">
            <test-case id="1-1018" name="RandomCollectionItem" fullname="PlayersWorlds.Maps.GlobalRandomTest.RandomCollectionItem" methodname="RandomCollectionItem" classname="PlayersWorlds.Maps.GlobalRandomTest" runstate="Runnable" seed="1567462394" result="Passed" start-time="2024-02-22T15:42:09.4224580Z" end-time="2024-02-22T15:42:09.4230880Z" duration="0.000630" asserts="1" />
            <test-case id="1-1020" name="RandomInRange" fullname="PlayersWorlds.Maps.GlobalRandomTest.RandomInRange" methodname="RandomInRange" classname="PlayersWorlds.Maps.GlobalRandomTest" runstate="Runnable" seed="1162920883" result="Passed" start-time="2024-02-22T15:42:09.4230960Z" end-time="2024-02-22T15:42:09.4263500Z" duration="0.003254" asserts="1000" />
            <test-case id="1-1019" name="ThrowsIfEmptyCollection" fullname="PlayersWorlds.Maps.GlobalRandomTest.ThrowsIfEmptyCollection" methodname="ThrowsIfEmptyCollection" classname="PlayersWorlds.Maps.GlobalRandomTest" runstate="Runnable" seed="2020467129" result="Passed" start-time="2024-02-22T15:42:09.4263590Z" end-time="2024-02-22T15:42:09.4265380Z" duration="0.000180" asserts="1" />
          </test-suite>
          <test-suite type="TestFixture" id="1-1021" name="Map2DTest" fullname="PlayersWorlds.Maps.Map2DTest" classname="PlayersWorlds.Maps.Map2DTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2024-02-22T15:42:09.4265620Z" end-time="2024-02-22T15:42:09.4290540Z" duration="0.002492" total="1" passed="1" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="6">
            <test-case id="1-1022" name="ParseMap" fullname="PlayersWorlds.Maps.Map2DTest.ParseMap" methodname="ParseMap" classname="PlayersWorlds.Maps.Map2DTest" runstate="Runnable" seed="13872806" result="Passed" start-time="2024-02-22T15:42:09.4273410Z" end-time="2024-02-22T15:42:09.4290420Z" duration="0.001702" asserts="6" />
          </test-suite>
          <test-suite type="TestSuite" id="1-2048" name="MapFilters" fullname="PlayersWorlds.Maps.MapFilters" runstate="Runnable" testcasecount="5" result="Passed" start-time="2024-02-22T15:42:09.2516080Z" end-time="2024-02-22T15:42:09.4334870Z" duration="0.181879" total="5" passed="5" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="10">
            <test-suite type="TestFixture" id="1-1911" name="Map2DEraseSpotsTest" fullname="PlayersWorlds.Maps.MapFilters.Map2DEraseSpotsTest" classname="PlayersWorlds.Maps.MapFilters.Map2DEraseSpotsTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2024-02-22T15:42:09.4290650Z" end-time="2024-02-22T15:42:09.4334800Z" duration="0.004415" total="5" passed="5" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="10">
              <test-case id="1-1912" name="BackslashEraseSpots" fullname="PlayersWorlds.Maps.MapFilters.Map2DEraseSpotsTest.BackslashEraseSpots" methodname="BackslashEraseSpots" classname="PlayersWorlds.Maps.MapFilters.Map2DEraseSpotsTest" runstate="Runnable" seed="120042323" result="Passed" start-time="2024-02-22T15:42:09.4291030Z" end-time="2024-02-22T15:42:09.4323970Z" duration="0.003294" asserts="1">
                <output><![CDATA[▓▓░░░
░▓▓░░
░░▓▓░
░░░▓▓
░░░░▓

▓▓░░░
░▓▓░░
░░▓▓░
░░░▓▓
░░░░▓

▓▓░░░
░▓▓░░
░░▓▓░
░░░▓▓
░░░░▓

]]></output>
              </test-case>
              <test-case id="1-1916" name="SmoothBoxEraseSpots" fullname="PlayersWorlds.Maps.MapFilters.Map2DEraseSpotsTest.SmoothBoxEraseSpots" methodname="SmoothBoxEraseSpots" classname="PlayersWorlds.Maps.MapFilters.Map2DEraseSpotsTest" runstate="Runnable" seed="238992893" result="Passed" start-time="2024-02-22T15:42:09.4324050Z" end-time="2024-02-22T15:42:09.4327460Z" duration="0.000341" asserts="1">
                <output><![CDATA[▒▓▓▓▒
▓▓░▓▓
▓░░░▓
▓▓░░▓
▒▓▓▓▓

▒▓▓▓▒
▓▓▓▓▓
▓▓▓▓▓
▓▓▓▓▓
▒▓▓▓▓

▒▓▓▓▒
▓▓▓▓▓
▓▓▓▓▓
▓▓▓▓▓
▒▓▓▓▓

]]></output>
              </test-case>
              <test-case id="1-1915" name="SmoothBoxVoidBgEraseSpots" fullname="PlayersWorlds.Maps.MapFilters.Map2DEraseSpotsTest.SmoothBoxVoidBgEraseSpots" methodname="SmoothBoxVoidBgEraseSpots" classname="PlayersWorlds.Maps.MapFilters.Map2DEraseSpotsTest" runstate="Runnable" seed="553207866" result="Passed" start-time="2024-02-22T15:42:09.4327540Z" end-time="2024-02-22T15:42:09.4328990Z" duration="0.000145" asserts="1">
                <output><![CDATA[▒▓▓▓▒
▓▓0▓▓
▓000▓
▓▓00▓
▒▓▓▓▓

▒▓▓▓▒
▓▓▓▓▓
▓▓▓▓▓
▓▓▓▓▓
▒▓▓▓▓

▒▓▓▓▒
▓▓▓▓▓
▓▓▓▓▓
▓▓▓▓▓
▒▓▓▓▓

]]></output>
              </test-case>
              <test-case id="1-1914" name="Spot1x3SpotsEraseSpots" fullname="PlayersWorlds.Maps.MapFilters.Map2DEraseSpotsTest.Spot1x3SpotsEraseSpots" methodname="Spot1x3SpotsEraseSpots" classname="PlayersWorlds.Maps.MapFilters.Map2DEraseSpotsTest" runstate="Runnable" seed="1462588143" result="Passed" start-time="2024-02-22T15:42:09.4329050Z" end-time="2024-02-22T15:42:09.4330460Z" duration="0.000141" asserts="1">
                <output><![CDATA[░░░░░
░░▓░░
░░▓░░
░░▓░░
░░░░░

░░░░░
░░▓░░
░░▓░░
░░▓░░
░░░░░

░░░░░
░░▓░░
░░▓░░
░░▓░░
░░░░░

]]></output>
              </test-case>
              <test-case id="1-1913" name="VariousSpotsEraseSpots" fullname="PlayersWorlds.Maps.MapFilters.Map2DEraseSpotsTest.VariousSpotsEraseSpots" methodname="VariousSpotsEraseSpots" classname="PlayersWorlds.Maps.MapFilters.Map2DEraseSpotsTest" runstate="Runnable" seed="1112373367" result="Passed" start-time="2024-02-22T15:42:09.4330520Z" end-time="2024-02-22T15:42:09.4334700Z" duration="0.000418" asserts="6">
                <output><![CDATA[░░░░░
░░░▓░
░░▓▓░
░░░░░
░░░░░

░░░░░
░░░░░
░░░░░
░░░░░
░░░░░

░░░░░
░░░░░
░░░░░
░░░░░
░░░░░

░░░░░
░░▓░░
░░▓▓░
░░░░░
░░░░░

░░░░░
░░░░░
░░░░░
░░░░░
░░░░░

░░░░░
░░░░░
░░░░░
░░░░░
░░░░░

░░░░░
░░▓▓░
░░▓░░
░░░░░
░░░░░

░░░░░
░░░░░
░░░░░
░░░░░
░░░░░

░░░░░
░░░░░
░░░░░
░░░░░
░░░░░

░░░░░
░░▓▓░
░░▓░░
░░░░░
░░░░░

░░░░░
░░░░░
░░░░░
░░░░░
░░░░░

░░░░░
░░░░░
░░░░░
░░░░░
░░░░░

░░░░░
░░▓▓░
░░▓▓░
░░░░░
░░░░░

░░░░░
░░░░░
░░░░░
░░░░░
░░░░░

░░░░░
░░░░░
░░░░░
░░░░░
░░░░░

░░░░░
░░▓░░
░░░▓░
░░░░░
░░░░░

░░░░░
░░░░░
░░░░░
░░░░░
░░░░░

░░░░░
░░░░░
░░░░░
░░░░░
░░░░░

]]></output>
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestSuite" id="1-2046" name="Maze" fullname="PlayersWorlds.Maps.Maze" runstate="Runnable" testcasecount="781" result="Skipped" label="Ignored" site="Child" start-time="2024-02-22T15:42:09.2516130Z" end-time="2024-02-22T15:42:24.4269190Z" duration="15.175306" total="277" passed="175" failed="0" warnings="0" inconclusive="0" skipped="102" asserts="12413">
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <test-suite type="TestFixture" id="1-1109" name="Maze2DBuilderTest" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" testcasecount="21" result="Passed" start-time="2024-02-22T15:42:09.4334970Z" end-time="2024-02-22T15:42:09.5610300Z" duration="0.127533" total="21" passed="21" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="7096">
              <test-case id="1-1110" name="BuildsCorrectCellsCollections" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.BuildsCorrectCellsCollections" methodname="BuildsCorrectCellsCollections" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="12064168" result="Passed" start-time="2024-02-22T15:42:09.4335370Z" end-time="2024-02-22T15:42:09.4393920Z" duration="0.005855" asserts="2" />
              <test-case id="1-1111" name="BuildsCorrectCellsCollectionsWithHallAreas" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.BuildsCorrectCellsCollectionsWithHallAreas" methodname="BuildsCorrectCellsCollectionsWithHallAreas" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="1073959593" result="Passed" start-time="2024-02-22T15:42:09.4394000Z" end-time="2024-02-22T15:42:09.4460500Z" duration="0.006650" asserts="4" />
              <test-case id="1-1112" name="BuildsCorrectCellsCollectionsWithHallAreasAtTheEdge" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.BuildsCorrectCellsCollectionsWithHallAreasAtTheEdge" methodname="BuildsCorrectCellsCollectionsWithHallAreasAtTheEdge" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="921726809" result="Passed" start-time="2024-02-22T15:42:09.4460600Z" end-time="2024-02-22T15:42:09.4465490Z" duration="0.000490" asserts="4" />
              <test-case id="1-1130" name="CanConnect" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.CanConnect" methodname="CanConnect" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="659159872" result="Passed" start-time="2024-02-22T15:42:09.4465570Z" end-time="2024-02-22T15:42:09.4476040Z" duration="0.001047" asserts="11" />
              <test-case id="1-1128" name="ConnectHalls" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.ConnectHalls" methodname="ConnectHalls" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="393885718" result="Passed" start-time="2024-02-22T15:42:09.4476130Z" end-time="2024-02-22T15:42:09.4530430Z" duration="0.005430" asserts="4" />
              <test-case id="1-1118" name="IsFillComplete_Full" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.IsFillComplete_Full" methodname="IsFillComplete_Full" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="1783402184" result="Passed" start-time="2024-02-22T15:42:09.4530530Z" end-time="2024-02-22T15:42:09.4536120Z" duration="0.000559" asserts="4" />
              <test-case id="1-1121" name="IsFillComplete_Full_WithCave" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.IsFillComplete_Full_WithCave" methodname="IsFillComplete_Full_WithCave" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="848500751" result="Passed" start-time="2024-02-22T15:42:09.4536200Z" end-time="2024-02-22T15:42:09.4542050Z" duration="0.000586" asserts="3" />
              <test-case id="1-1120" name="IsFillComplete_Full_WithFill" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.IsFillComplete_Full_WithFill" methodname="IsFillComplete_Full_WithFill" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="2044095755" result="Passed" start-time="2024-02-22T15:42:09.4542130Z" end-time="2024-02-22T15:42:09.4549810Z" duration="0.000768" asserts="2" />
              <test-case id="1-1119" name="IsFillComplete_Full_WithHall" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.IsFillComplete_Full_WithHall" methodname="IsFillComplete_Full_WithHall" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="892034375" result="Passed" start-time="2024-02-22T15:42:09.4549890Z" end-time="2024-02-22T15:42:09.4554680Z" duration="0.000479" asserts="2" />
              <test-case id="1-1123" name="IsFillComplete_FullHeight" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.IsFillComplete_FullHeight" methodname="IsFillComplete_FullHeight" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="295305790" result="Passed" start-time="2024-02-22T15:42:09.4554760Z" end-time="2024-02-22T15:42:09.4559570Z" duration="0.000481" asserts="3" />
              <test-case id="1-1122" name="IsFillComplete_FullWidth" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.IsFillComplete_FullWidth" methodname="IsFillComplete_FullWidth" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="1821491464" result="Passed" start-time="2024-02-22T15:42:09.4559640Z" end-time="2024-02-22T15:42:09.4562120Z" duration="0.000248" asserts="3" />
              <test-case id="1-1125" name="IsFillComplete_Half" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.IsFillComplete_Half" methodname="IsFillComplete_Half" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="1488439226" result="Passed" start-time="2024-02-22T15:42:09.4562200Z" end-time="2024-02-22T15:42:09.4563540Z" duration="0.000134" asserts="2" />
              <test-case id="1-1127" name="IsFillComplete_NinetyPercent" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.IsFillComplete_NinetyPercent" methodname="IsFillComplete_NinetyPercent" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="1676298188" result="Passed" start-time="2024-02-22T15:42:09.4563600Z" end-time="2024-02-22T15:42:09.4565760Z" duration="0.000216" asserts="4" />
              <test-case id="1-1117" name="IsFillComplete_NoCells" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.IsFillComplete_NoCells" methodname="IsFillComplete_NoCells" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="1390083243" result="Passed" start-time="2024-02-22T15:42:09.4565830Z" end-time="2024-02-22T15:42:09.4567090Z" duration="0.000126" asserts="1" />
              <test-case id="1-1124" name="IsFillComplete_Quarter" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.IsFillComplete_Quarter" methodname="IsFillComplete_Quarter" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="660860617" result="Passed" start-time="2024-02-22T15:42:09.4567160Z" end-time="2024-02-22T15:42:09.4568440Z" duration="0.000128" asserts="2" />
              <test-case id="1-1126" name="IsFillComplete_ThreeQuarters" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.IsFillComplete_ThreeQuarters" methodname="IsFillComplete_ThreeQuarters" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="791021042" result="Passed" start-time="2024-02-22T15:42:09.4568500Z" end-time="2024-02-22T15:42:09.4570130Z" duration="0.000163" asserts="3" />
              <test-case id="1-1116" name="IterateUnlinkedCells_IteratesAllAvailableCells" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.IterateUnlinkedCells_IteratesAllAvailableCells" methodname="IterateUnlinkedCells_IteratesAllAvailableCells" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="1495980591" result="Passed" start-time="2024-02-22T15:42:09.4570200Z" end-time="2024-02-22T15:42:09.4628540Z" duration="0.005834" asserts="28" />
              <test-case id="1-1115" name="MarkConnected" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.MarkConnected" methodname="MarkConnected" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="1656278705" result="Passed" start-time="2024-02-22T15:42:09.4628630Z" end-time="2024-02-22T15:42:09.4636690Z" duration="0.000806" asserts="7" />
              <test-case id="1-1129" name="OverlappingAreas_ProduceValidPriorityCells" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.OverlappingAreas_ProduceValidPriorityCells" methodname="OverlappingAreas_ProduceValidPriorityCells" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="1025090882" result="Passed" start-time="2024-02-22T15:42:09.4636760Z" end-time="2024-02-22T15:42:09.4644970Z" duration="0.000821" asserts="4" />
              <test-case id="1-1114" name="PickRandomNeighborToLink" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.PickRandomNeighborToLink" methodname="PickRandomNeighborToLink" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="860915679" result="Passed" start-time="2024-02-22T15:42:09.4645040Z" end-time="2024-02-22T15:42:09.4704560Z" duration="0.005952" asserts="5000" />
              <test-case id="1-1113" name="PicksPriorityCellsWhenAvailable" fullname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest.PicksPriorityCellsWhenAvailable" methodname="PicksPriorityCellsWhenAvailable" classname="PlayersWorlds.Maps.Maze.Maze2DBuilderTest" runstate="Runnable" seed="1348460604" result="Passed" start-time="2024-02-22T15:42:09.4704640Z" end-time="2024-02-22T15:42:09.5610100Z" duration="0.090547" asserts="2003" />
            </test-suite>
            <test-suite type="TestFixture" id="1-1131" name="Maze2DRendererTest" fullname="PlayersWorlds.Maps.Maze.Maze2DRendererTest" classname="PlayersWorlds.Maps.Maze.Maze2DRendererTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2024-02-22T15:42:09.5610460Z" end-time="2024-02-22T15:42:09.5632250Z" duration="0.002179" total="1" passed="1" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="1">
              <test-case id="1-1132" name="ThrowsIfCantFit" fullname="PlayersWorlds.Maps.Maze.Maze2DRendererTest.ThrowsIfCantFit" methodname="ThrowsIfCantFit" classname="PlayersWorlds.Maps.Maze.Maze2DRendererTest" runstate="Runnable" seed="589521702" result="Passed" start-time="2024-02-22T15:42:09.5610990Z" end-time="2024-02-22T15:42:09.5632110Z" duration="0.002112" asserts="1">
                <output><![CDATA[42x42
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1-1133" name="Maze2DTest" fullname="PlayersWorlds.Maps.Maze.Maze2DTest" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" testcasecount="14" result="Passed" start-time="2024-02-22T15:42:09.5632360Z" end-time="2024-02-22T15:42:09.5927590Z" duration="0.029523" total="14" passed="14" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="178">
              <test-case id="1-1141" name="Maze2D_AddsNoRoomsToASmallMaze" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_AddsNoRoomsToASmallMaze" methodname="Maze2D_AddsNoRoomsToASmallMaze" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="634495880" result="Passed" start-time="2024-02-22T15:42:09.5632760Z" end-time="2024-02-22T15:42:09.5692070Z" duration="0.005931" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 3x3 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
              </test-case>
              <test-case id="1-1140" name="Maze2D_AddsNoRoomsWhenNoneRequested" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_AddsNoRoomsWhenNoneRequested" methodname="Maze2D_AddsNoRoomsWhenNoneRequested" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="1229756999" result="Passed" start-time="2024-02-22T15:42:09.5692200Z" end-time="2024-02-22T15:42:09.5701240Z" duration="0.000905" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
              </test-case>
              <test-case id="1-1144" name="Maze2D_AddsOneFill" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_AddsOneFill" methodname="Maze2D_AddsOneFill" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="2131750841" result="Passed" start-time="2024-02-22T15:42:09.5701320Z" end-time="2024-02-22T15:42:09.5716740Z" duration="0.001542" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 5x5 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x1;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
              </test-case>
              <test-case id="1-1143" name="Maze2D_AddsOneHall" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_AddsOneHall" methodname="Maze2D_AddsOneHall" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="283924947" result="Passed" start-time="2024-02-22T15:42:09.5716850Z" end-time="2024-02-22T15:42:09.5723700Z" duration="0.000685" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 5x5 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x1;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
              </test-case>
              <test-case id="1-1142" name="Maze2D_AddsRooms" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_AddsRooms" methodname="Maze2D_AddsRooms" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="1840550006" result="Passed" start-time="2024-02-22T15:42:09.5723780Z" end-time="2024-02-22T15:42:09.5803190Z" duration="0.007941" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 5x5 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
              </test-case>
              <test-case id="1-1136" name="Maze2D_AllowsOnly2D" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_AllowsOnly2D" methodname="Maze2D_AllowsOnly2D" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="1530573161" result="Passed" start-time="2024-02-22T15:42:09.5803300Z" end-time="2024-02-22T15:42:09.5805390Z" duration="0.000209" asserts="1" />
              <test-case id="1-1146" name="Maze2D_CanParse" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_CanParse" methodname="Maze2D_CanParse" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="654623052" result="Passed" start-time="2024-02-22T15:42:09.5805460Z" end-time="2024-02-22T15:42:09.5848130Z" duration="0.004267" asserts="16">
                <output><![CDATA[┌───────────┐
│           │
├───╴   ┌───┤
│       │   │
│   ╷   ╵   │
│   │       │
└───┴───────┘

]]></output>
              </test-case>
              <test-case id="1-1147" name="Maze2D_CanParse2" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_CanParse2" methodname="Maze2D_CanParse2" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="458813219" result="Passed" start-time="2024-02-22T15:42:09.5848250Z" end-time="2024-02-22T15:42:09.5849440Z" duration="0.000119" asserts="1" />
              <test-case id="1-1139" name="Maze2D_CanRenderMap" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_CanRenderMap" methodname="Maze2D_CanRenderMap" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="1372000178" result="Passed" start-time="2024-02-22T15:42:09.5849510Z" end-time="2024-02-22T15:42:09.5887160Z" duration="0.003765" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 3x3 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
              </test-case>
              <test-case id="1-1138" name="Maze2D_CellsNeighborsAreValid" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_CellsNeighborsAreValid" methodname="Maze2D_CellsNeighborsAreValid" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="1167764641" result="Passed" start-time="2024-02-22T15:42:09.5887270Z" end-time="2024-02-22T15:42:09.5897020Z" duration="0.000975" asserts="136" />
              <test-case id="1-1145" name="Maze2D_HasAttributesSet" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_HasAttributesSet" methodname="Maze2D_HasAttributesSet" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="193712692" result="Passed" start-time="2024-02-22T15:42:09.5897130Z" end-time="2024-02-22T15:42:09.5900450Z" duration="0.000332" asserts="2">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 3x3 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
              </test-case>
              <test-case id="1-1134" name="Maze2D_IsInitialized" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_IsInitialized" methodname="Maze2D_IsInitialized" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="709849768" result="Passed" start-time="2024-02-22T15:42:09.5900530Z" end-time="2024-02-22T15:42:09.5902130Z" duration="0.000160" asserts="4" />
              <test-case id="1-1137" name="Maze2D_ToMapWrongOptions" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_ToMapWrongOptions" methodname="Maze2D_ToMapWrongOptions" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="1809341794" result="Passed" start-time="2024-02-22T15:42:09.5902200Z" end-time="2024-02-22T15:42:09.5924740Z" duration="0.002254" asserts="7" />
              <test-case id="1-1135" name="Maze2D_WrongSize" fullname="PlayersWorlds.Maps.Maze.Maze2DTest.Maze2D_WrongSize" methodname="Maze2D_WrongSize" classname="PlayersWorlds.Maps.Maze.Maze2DTest" runstate="Runnable" seed="2144939226" result="Passed" start-time="2024-02-22T15:42:09.5924850Z" end-time="2024-02-22T15:42:09.5927480Z" duration="0.000263" asserts="5" />
            </test-suite>
            <test-suite type="TestFixture" id="1-1148" name="MazeCellTest" fullname="PlayersWorlds.Maps.Maze.MazeCellTest" classname="PlayersWorlds.Maps.Maze.MazeCellTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2024-02-22T15:42:09.5927710Z" end-time="2024-02-22T15:42:09.5957230Z" duration="0.002952" total="5" passed="5" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="23">
              <test-case id="1-1151" name="CanAssignMapAreaOnce" fullname="PlayersWorlds.Maps.Maze.MazeCellTest.CanAssignMapAreaOnce" methodname="CanAssignMapAreaOnce" classname="PlayersWorlds.Maps.Maze.MazeCellTest" runstate="Runnable" seed="689939179" result="Passed" start-time="2024-02-22T15:42:09.5928090Z" end-time="2024-02-22T15:42:09.5939020Z" duration="0.001093" asserts="4" />
              <test-case id="1-1153" name="DoubleLinkingThrowsError" fullname="PlayersWorlds.Maps.Maze.MazeCellTest.DoubleLinkingThrowsError" methodname="DoubleLinkingThrowsError" classname="PlayersWorlds.Maps.Maze.MazeCellTest" runstate="Runnable" seed="1069672861" result="Passed" start-time="2024-02-22T15:42:09.5939100Z" end-time="2024-02-22T15:42:09.5940480Z" duration="0.000138" asserts="1" />
              <test-case id="1-1149" name="LinksAreMutual" fullname="PlayersWorlds.Maps.Maze.MazeCellTest.LinksAreMutual" methodname="LinksAreMutual" classname="PlayersWorlds.Maps.Maze.MazeCellTest" runstate="Runnable" seed="1018820704" result="Passed" start-time="2024-02-22T15:42:09.5940550Z" end-time="2024-02-22T15:42:09.5950750Z" duration="0.001020" asserts="10" />
              <test-case id="1-1150" name="LinksOnlyWithNeighbors" fullname="PlayersWorlds.Maps.Maze.MazeCellTest.LinksOnlyWithNeighbors" methodname="LinksOnlyWithNeighbors" classname="PlayersWorlds.Maps.Maze.MazeCellTest" runstate="Runnable" seed="1818574595" result="Passed" start-time="2024-02-22T15:42:09.5950830Z" end-time="2024-02-22T15:42:09.5953970Z" duration="0.000315" asserts="1" />
              <test-case id="1-1152" name="ToStringTest" fullname="PlayersWorlds.Maps.Maze.MazeCellTest.ToStringTest" methodname="ToStringTest" classname="PlayersWorlds.Maps.Maze.MazeCellTest" runstate="Runnable" seed="1973064714" result="Passed" start-time="2024-02-22T15:42:09.5954040Z" end-time="2024-02-22T15:42:09.5957130Z" duration="0.000309" asserts="7" />
            </test-suite>
            <test-suite type="TestFixture" id="1-1154" name="MazeGeneratorAreasTest" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" testcasecount="200" result="Skipped" label="Ignored" site="Child" start-time="2024-02-22T15:42:09.5957330Z" end-time="2024-02-22T15:42:24.2921880Z" duration="14.696454" total="200" passed="98" failed="0" warnings="0" inconclusive="0" skipped="102" asserts="4901">
              <reason>
                <message><![CDATA[One or more child tests were ignored]]></message>
              </reason>
              <test-suite type="ParameterizedMethod" id="1-1175" name="CaveAreasAreAppliedProperly" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.CaveAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2024-02-22T15:42:09.5957690Z" end-time="2024-02-22T15:42:09.8191200Z" duration="0.223351" total="6" passed="6" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="540">
                <properties>
                  <property name="Repeat" value="10" />
                </properties>
                <test-case id="1-1169" name="CaveAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.CaveAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)" methodname="CaveAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2060028444" result="Passed" start-time="2024-02-22T15:42:09.5957840Z" end-time="2024-02-22T15:42:09.6472680Z" duration="0.051484" asserts="90">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1170" name="CaveAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.CaveAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)" methodname="CaveAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1171722942" result="Passed" start-time="2024-02-22T15:42:09.6472810Z" end-time="2024-02-22T15:42:09.6876990Z" duration="0.040419" asserts="90">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1171" name="CaveAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.CaveAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)" methodname="CaveAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="683562824" result="Passed" start-time="2024-02-22T15:42:09.6877150Z" end-time="2024-02-22T15:42:09.7167980Z" duration="0.029083" asserts="90">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1172" name="CaveAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.CaveAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)" methodname="CaveAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="425030654" result="Passed" start-time="2024-02-22T15:42:09.7168100Z" end-time="2024-02-22T15:42:09.7476270Z" duration="0.030817" asserts="90">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1173" name="CaveAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.CaveAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)" methodname="CaveAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1484743963" result="Passed" start-time="2024-02-22T15:42:09.7476790Z" end-time="2024-02-22T15:42:09.7876090Z" duration="0.039929" asserts="90">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1174" name="CaveAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.CaveAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)" methodname="CaveAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1403668957" result="Passed" start-time="2024-02-22T15:42:09.7876290Z" end-time="2024-02-22T15:42:09.8191040Z" duration="0.031476" asserts="90">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P5x10;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="1-1232" name="DenseWalkways" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" testcasecount="18" result="Passed" start-time="2024-02-22T15:42:09.8191320Z" end-time="2024-02-22T15:42:10.2260190Z" duration="0.406887" total="18" passed="18" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="540">
                <properties>
                  <property name="Repeat" value="10" />
                </properties>
                <test-case id="1-1214" name="DenseWalkways(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="156432490" result="Passed" start-time="2024-02-22T15:42:09.8191550Z" end-time="2024-02-22T15:42:09.8464950Z" duration="0.027340" asserts="30">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1215" name="DenseWalkways(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="771673663" result="Passed" start-time="2024-02-22T15:42:09.8465060Z" end-time="2024-02-22T15:42:09.8721940Z" duration="0.025688" asserts="30">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1216" name="DenseWalkways(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1452822026" result="Passed" start-time="2024-02-22T15:42:09.8722060Z" end-time="2024-02-22T15:42:09.8946020Z" duration="0.022397" asserts="30">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1217" name="DenseWalkways(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="221679074" result="Passed" start-time="2024-02-22T15:42:09.8946200Z" end-time="2024-02-22T15:42:09.9184850Z" duration="0.023865" asserts="30">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1218" name="DenseWalkways(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="660862886" result="Passed" start-time="2024-02-22T15:42:09.9184960Z" end-time="2024-02-22T15:42:09.9411120Z" duration="0.022617" asserts="30">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1219" name="DenseWalkways(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="613701942" result="Passed" start-time="2024-02-22T15:42:09.9411240Z" end-time="2024-02-22T15:42:09.9615520Z" duration="0.020428" asserts="30">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1220" name="DenseWalkways(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1607248354" result="Passed" start-time="2024-02-22T15:42:09.9615630Z" end-time="2024-02-22T15:42:09.9835410Z" duration="0.021979" asserts="30">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1221" name="DenseWalkways(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="253259093" result="Passed" start-time="2024-02-22T15:42:09.9835530Z" end-time="2024-02-22T15:42:10.0052300Z" duration="0.021677" asserts="30">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1222" name="DenseWalkways(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="383689192" result="Passed" start-time="2024-02-22T15:42:10.0052400Z" end-time="2024-02-22T15:42:10.0241710Z" duration="0.018931" asserts="30">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1223" name="DenseWalkways(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1061290369" result="Passed" start-time="2024-02-22T15:42:10.0241820Z" end-time="2024-02-22T15:42:10.0472410Z" duration="0.023059" asserts="30">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1224" name="DenseWalkways(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1678270779" result="Passed" start-time="2024-02-22T15:42:10.0472530Z" end-time="2024-02-22T15:42:10.0689110Z" duration="0.021658" asserts="30">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1225" name="DenseWalkways(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2097967149" result="Passed" start-time="2024-02-22T15:42:10.0689240Z" end-time="2024-02-22T15:42:10.0879150Z" duration="0.018991" asserts="30">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1226" name="DenseWalkways(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="573948801" result="Passed" start-time="2024-02-22T15:42:10.0879260Z" end-time="2024-02-22T15:42:10.1130670Z" duration="0.025141" asserts="30">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1227" name="DenseWalkways(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1479339069" result="Passed" start-time="2024-02-22T15:42:10.1130830Z" end-time="2024-02-22T15:42:10.1366490Z" duration="0.023566" asserts="30">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1228" name="DenseWalkways(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1176175557" result="Passed" start-time="2024-02-22T15:42:10.1366610Z" end-time="2024-02-22T15:42:10.1576040Z" duration="0.020943" asserts="30">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1229" name="DenseWalkways(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="226302137" result="Passed" start-time="2024-02-22T15:42:10.1576160Z" end-time="2024-02-22T15:42:10.1800340Z" duration="0.022419" asserts="30">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Cave;, P4x1;S2x3;Cave;, P7x1;S2x2;Cave;, P1x4;S2x3;Cave;, P4x5;S1x2;Cave;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1230" name="DenseWalkways(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="513361994" result="Passed" start-time="2024-02-22T15:42:10.1800470Z" end-time="2024-02-22T15:42:10.2042420Z" duration="0.024195" asserts="30">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Hall;, P4x1;S2x3;Hall;, P7x1;S2x2;Hall;, P1x4;S2x3;Hall;, P4x5;S1x2;Hall;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1231" name="DenseWalkways(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.DenseWalkways(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill)" methodname="DenseWalkways" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1597638231" result="Passed" start-time="2024-02-22T15:42:10.2042540Z" end-time="2024-02-22T15:42:10.2260030Z" duration="0.021749" asserts="30">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 10x8 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P1x1;S2x2;Fill;, P4x1;S2x3;Fill;, P7x1;S2x2;Fill;, P1x4;S2x3;Fill;, P4x5;S1x2;Fill;...(8)), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="1-1161" name="FillAreasAreAppliedProperly" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.FillAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2024-02-22T15:42:10.2260310Z" end-time="2024-02-22T15:42:10.4031730Z" duration="0.177142" total="6" passed="6" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="240">
                <properties>
                  <property name="Repeat" value="10" />
                </properties>
                <test-case id="1-1155" name="FillAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.FillAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)" methodname="FillAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="195489622" result="Passed" start-time="2024-02-22T15:42:10.2263020Z" end-time="2024-02-22T15:42:10.2696380Z" duration="0.043337" asserts="40">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1156" name="FillAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.FillAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)" methodname="FillAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1667056310" result="Passed" start-time="2024-02-22T15:42:10.2696510Z" end-time="2024-02-22T15:42:10.2987070Z" duration="0.029056" asserts="40">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1157" name="FillAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.FillAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)" methodname="FillAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1380820330" result="Passed" start-time="2024-02-22T15:42:10.2987190Z" end-time="2024-02-22T15:42:10.3214630Z" duration="0.022744" asserts="40">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1158" name="FillAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.FillAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)" methodname="FillAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1587430138" result="Passed" start-time="2024-02-22T15:42:10.3214740Z" end-time="2024-02-22T15:42:10.3447630Z" duration="0.023289" asserts="40">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1159" name="FillAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.FillAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)" methodname="FillAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="751360643" result="Passed" start-time="2024-02-22T15:42:10.3447740Z" end-time="2024-02-22T15:42:10.3772460Z" duration="0.032473" asserts="40">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1160" name="FillAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.FillAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)" methodname="FillAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1112325368" result="Passed" start-time="2024-02-22T15:42:10.3772600Z" end-time="2024-02-22T15:42:10.4031600Z" duration="0.025900" asserts="40">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x4;S3x4;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="1-1168" name="HallAreasAreAppliedProperly" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.HallAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2024-02-22T15:42:10.4031850Z" end-time="2024-02-22T15:42:18.2802440Z" duration="7.877059" total="6" passed="6" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="600">
                <properties>
                  <property name="Repeat" value="10" />
                </properties>
                <test-case id="1-1162" name="HallAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.HallAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)" methodname="HallAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1196752830" result="Passed" start-time="2024-02-22T15:42:10.4032070Z" end-time="2024-02-22T15:42:11.7139110Z" duration="1.310704" asserts="100">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1163" name="HallAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.HallAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)" methodname="HallAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1698972511" result="Passed" start-time="2024-02-22T15:42:11.7139280Z" end-time="2024-02-22T15:42:13.1386540Z" duration="1.424727" asserts="100">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1164" name="HallAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.HallAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)" methodname="HallAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="449460166" result="Passed" start-time="2024-02-22T15:42:13.1386710Z" end-time="2024-02-22T15:42:14.3939000Z" duration="1.255230" asserts="100">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1165" name="HallAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.HallAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)" methodname="HallAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="420547575" result="Passed" start-time="2024-02-22T15:42:14.3939160Z" end-time="2024-02-22T15:42:15.5260450Z" duration="1.132129" asserts="100">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1166" name="HallAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.HallAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)" methodname="HallAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1923701817" result="Passed" start-time="2024-02-22T15:42:15.5260600Z" end-time="2024-02-22T15:42:16.9893030Z" duration="1.463243" asserts="100">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1167" name="HallAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.HallAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)" methodname="HallAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1447022366" result="Passed" start-time="2024-02-22T15:42:16.9893190Z" end-time="2024-02-22T15:42:18.2802260Z" duration="1.290908" asserts="100">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P8x2;S4x5;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
              </test-suite>
              <test-case id="1-1361" name="ManualAndAutoAreasGeneration" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ManualAndAutoAreasGeneration" methodname="ManualAndAutoAreasGeneration" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1247719476" result="Passed" start-time="2024-02-22T15:42:18.2802640Z" end-time="2024-02-22T15:42:20.6963000Z" duration="2.416036" asserts="100">
                <properties>
                  <property name="Repeat" value="100" />
                </properties>
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, List`1<MapArea>(P2x3;S4x7;Hall;fixed, P<empty>;S2x5;Hall;auto), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
              </test-case>
              <test-suite type="ParameterizedMethod" id="1-1194" name="OverlappingAreasAreAppliedProperly" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" testcasecount="18" result="Passed" start-time="2024-02-22T15:42:20.6963180Z" end-time="2024-02-22T15:42:21.3887840Z" duration="0.692466" total="18" passed="18" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="1320">
                <properties>
                  <property name="Repeat" value="10" />
                </properties>
                <test-case id="1-1176" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="887076022" result="Passed" start-time="2024-02-22T15:42:20.6963440Z" end-time="2024-02-22T15:42:20.7636950Z" duration="0.067352" asserts="80">
                  <output><![CDATA[OAAAP(AldousBroderMazeGenerator, Cave)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Cave)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Cave)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Cave)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Cave)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Cave)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Cave)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Cave)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Cave)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Cave)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1177" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1706428888" result="Passed" start-time="2024-02-22T15:42:20.7637570Z" end-time="2024-02-22T15:42:20.8293350Z" duration="0.065578" asserts="80">
                  <output><![CDATA[OAAAP(AldousBroderMazeGenerator, Hall)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Hall)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Hall)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Hall)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Hall)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Hall)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Hall)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Hall)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Hall)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Hall)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1178" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="228819078" result="Passed" start-time="2024-02-22T15:42:20.8293620Z" end-time="2024-02-22T15:42:20.8748280Z" duration="0.045466" asserts="60">
                  <output><![CDATA[OAAAP(AldousBroderMazeGenerator, Fill)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Fill)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Fill)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Fill)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Fill)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Fill)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Fill)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Fill)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Fill)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
OAAAP(AldousBroderMazeGenerator, Fill)AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1179" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1285396977" result="Passed" start-time="2024-02-22T15:42:20.8748440Z" end-time="2024-02-22T15:42:20.9178180Z" duration="0.042974" asserts="80">
                  <output><![CDATA[OAAAP(BinaryTreeMazeGenerator, Cave)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Cave)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Cave)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Cave)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Cave)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Cave)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Cave)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Cave)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Cave)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Cave)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1180" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1448523915" result="Passed" start-time="2024-02-22T15:42:20.9178320Z" end-time="2024-02-22T15:42:20.9550920Z" duration="0.037260" asserts="80">
                  <output><![CDATA[OAAAP(BinaryTreeMazeGenerator, Hall)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Hall)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Hall)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Hall)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Hall)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Hall)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Hall)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Hall)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Hall)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Hall)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1181" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1906847750" result="Passed" start-time="2024-02-22T15:42:20.9551050Z" end-time="2024-02-22T15:42:20.9832960Z" duration="0.028191" asserts="60">
                  <output><![CDATA[OAAAP(BinaryTreeMazeGenerator, Fill)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Fill)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Fill)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Fill)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Fill)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Fill)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Fill)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Fill)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Fill)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
OAAAP(BinaryTreeMazeGenerator, Fill)BinaryTreeMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1182" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="297039445" result="Passed" start-time="2024-02-22T15:42:20.9833090Z" end-time="2024-02-22T15:42:21.0196260Z" duration="0.036317" asserts="80">
                  <output><![CDATA[OAAAP(HuntAndKillMazeGenerator, Cave)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Cave)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Cave)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Cave)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Cave)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Cave)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Cave)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Cave)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Cave)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Cave)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1183" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="8501832" result="Passed" start-time="2024-02-22T15:42:21.0196400Z" end-time="2024-02-22T15:42:21.0542130Z" duration="0.034573" asserts="80">
                  <output><![CDATA[OAAAP(HuntAndKillMazeGenerator, Hall)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Hall)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Hall)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Hall)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Hall)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Hall)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Hall)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Hall)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Hall)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Hall)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1184" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="349625052" result="Passed" start-time="2024-02-22T15:42:21.0542260Z" end-time="2024-02-22T15:42:21.0772180Z" duration="0.022992" asserts="60">
                  <output><![CDATA[OAAAP(HuntAndKillMazeGenerator, Fill)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Fill)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Fill)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Fill)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Fill)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Fill)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Fill)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Fill)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Fill)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
OAAAP(HuntAndKillMazeGenerator, Fill)HuntAndKillMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1185" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="538561980" result="Passed" start-time="2024-02-22T15:42:21.0772320Z" end-time="2024-02-22T15:42:21.1147540Z" duration="0.037522" asserts="80">
                  <output><![CDATA[OAAAP(RecursiveBacktrackerMazeGenerator, Cave)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Cave)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Cave)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Cave)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Cave)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Cave)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Cave)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Cave)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Cave)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Cave)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1186" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2057827783" result="Passed" start-time="2024-02-22T15:42:21.1147680Z" end-time="2024-02-22T15:42:21.1473840Z" duration="0.032617" asserts="80">
                  <output><![CDATA[OAAAP(RecursiveBacktrackerMazeGenerator, Hall)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Hall)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Hall)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Hall)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Hall)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Hall)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Hall)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Hall)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Hall)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Hall)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1187" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1470891953" result="Passed" start-time="2024-02-22T15:42:21.1473980Z" end-time="2024-02-22T15:42:21.1706620Z" duration="0.023264" asserts="60">
                  <output><![CDATA[OAAAP(RecursiveBacktrackerMazeGenerator, Fill)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Fill)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Fill)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Fill)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Fill)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Fill)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Fill)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Fill)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Fill)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
OAAAP(RecursiveBacktrackerMazeGenerator, Fill)RecursiveBacktrackerMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1188" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1539935218" result="Passed" start-time="2024-02-22T15:42:21.1706740Z" end-time="2024-02-22T15:42:21.2165860Z" duration="0.045912" asserts="80">
                  <output><![CDATA[OAAAP(SidewinderMazeGenerator, Cave)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Cave)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Cave)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Cave)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Cave)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Cave)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Cave)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Cave)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Cave)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Cave)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1189" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="886607796" result="Passed" start-time="2024-02-22T15:42:21.2166000Z" end-time="2024-02-22T15:42:21.2560740Z" duration="0.039474" asserts="80">
                  <output><![CDATA[OAAAP(SidewinderMazeGenerator, Hall)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Hall)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Hall)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Hall)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Hall)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Hall)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Hall)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Hall)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Hall)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Hall)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1190" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1380981596" result="Passed" start-time="2024-02-22T15:42:21.2560860Z" end-time="2024-02-22T15:42:21.2873280Z" duration="0.031243" asserts="60">
                  <output><![CDATA[OAAAP(SidewinderMazeGenerator, Fill)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Fill)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Fill)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Fill)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Fill)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Fill)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Fill)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Fill)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Fill)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
OAAAP(SidewinderMazeGenerator, Fill)SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1191" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1975423226" result="Passed" start-time="2024-02-22T15:42:21.2873440Z" end-time="2024-02-22T15:42:21.3243070Z" duration="0.036964" asserts="80">
                  <output><![CDATA[OAAAP(WilsonsMazeGenerator, Cave)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Cave)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Cave)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Cave)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Cave)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Cave)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Cave)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Cave)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Cave)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Cave)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Cave;, P4x8;S7x3;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1192" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1270605042" result="Passed" start-time="2024-02-22T15:42:21.3243200Z" end-time="2024-02-22T15:42:21.3631620Z" duration="0.038842" asserts="80">
                  <output><![CDATA[OAAAP(WilsonsMazeGenerator, Hall)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Hall)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Hall)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Hall)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Hall)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Hall)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Hall)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Hall)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Hall)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Hall)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1193" name="OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.OverlappingAreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill)" methodname="OverlappingAreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="823025947" result="Passed" start-time="2024-02-22T15:42:21.3631740Z" end-time="2024-02-22T15:42:21.3887650Z" duration="0.025592" asserts="60">
                  <output><![CDATA[OAAAP(WilsonsMazeGenerator, Fill)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Fill)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Fill)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Fill)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Fill)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Fill)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Fill)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Fill)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Fill)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
OAAAP(WilsonsMazeGenerator, Fill)WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Fill;, P4x8;S7x3;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="1-1360" name="ScatteredAreas" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" testcasecount="126" result="Skipped" label="Ignored" site="Child" start-time="2024-02-22T15:42:21.3887980Z" end-time="2024-02-22T15:42:24.1527050Z" duration="2.763907" total="126" passed="24" failed="0" warnings="0" inconclusive="0" skipped="102" asserts="480">
                <properties>
                  <property name="Repeat" value="10" />
                </properties>
                <reason>
                  <message><![CDATA[One or more child tests were ignored]]></message>
                </reason>
                <test-case id="1-1234" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2118992536" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.3888210Z" end-time="2024-02-22T15:42:21.3958630Z" duration="0.007042" asserts="0" />
                <test-case id="1-1235" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1504064857" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.3958960Z" end-time="2024-02-22T15:42:21.3959760Z" duration="0.000081" asserts="0" />
                <test-case id="1-1236" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="315780175" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.3959820Z" end-time="2024-02-22T15:42:21.3960370Z" duration="0.000055" asserts="0" />
                <test-case id="1-1237" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="831607303" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.3960410Z" end-time="2024-02-22T15:42:21.3960930Z" duration="0.000052" asserts="0" />
                <test-case id="1-1238" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1754036832" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.3960980Z" end-time="2024-02-22T15:42:21.3961500Z" duration="0.000052" asserts="0" />
                <test-case id="1-1239" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="868153792" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.3961560Z" end-time="2024-02-22T15:42:21.3962040Z" duration="0.000048" asserts="0" />
                <test-case id="1-1240" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1713168878" result="Passed" start-time="2024-02-22T15:42:21.3962080Z" end-time="2024-02-22T15:42:21.6299040Z" duration="0.233697" asserts="20">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1241" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="117059381" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.6299210Z" end-time="2024-02-22T15:42:21.6300300Z" duration="0.000109" asserts="0" />
                <test-case id="1-1242" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="252253609" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.6300360Z" end-time="2024-02-22T15:42:21.6300950Z" duration="0.000060" asserts="0" />
                <test-case id="1-1243" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="995493282" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.6301000Z" end-time="2024-02-22T15:42:21.6301510Z" duration="0.000051" asserts="0" />
                <test-case id="1-1244" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="560017051" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.6301550Z" end-time="2024-02-22T15:42:21.6302010Z" duration="0.000046" asserts="0" />
                <test-case id="1-1245" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2049571013" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.6302050Z" end-time="2024-02-22T15:42:21.6302490Z" duration="0.000044" asserts="0" />
                <test-case id="1-1246" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="554040125" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.6302530Z" end-time="2024-02-22T15:42:21.6302970Z" duration="0.000044" asserts="0" />
                <test-case id="1-1247" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1116030878" result="Passed" start-time="2024-02-22T15:42:21.6303010Z" end-time="2024-02-22T15:42:21.8654780Z" duration="0.235177" asserts="20">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1248" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="148390514" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8654950Z" end-time="2024-02-22T15:42:21.8655960Z" duration="0.000102" asserts="0" />
                <test-case id="1-1249" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2037368801" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8656020Z" end-time="2024-02-22T15:42:21.8656590Z" duration="0.000057" asserts="0" />
                <test-case id="1-1250" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1295894354" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8656640Z" end-time="2024-02-22T15:42:21.8657150Z" duration="0.000051" asserts="0" />
                <test-case id="1-1251" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="367900447" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8657190Z" end-time="2024-02-22T15:42:21.8657660Z" duration="0.000047" asserts="0" />
                <test-case id="1-1252" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1626415825" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8657700Z" end-time="2024-02-22T15:42:21.8658150Z" duration="0.000045" asserts="0" />
                <test-case id="1-1253" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="776146757" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8658190Z" end-time="2024-02-22T15:42:21.8658630Z" duration="0.000044" asserts="0" />
                <test-case id="1-1254" name="ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1134268279" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8658670Z" end-time="2024-02-22T15:42:21.8659100Z" duration="0.000044" asserts="0" />
                <test-case id="1-1255" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="373015960" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8659140Z" end-time="2024-02-22T15:42:21.8659590Z" duration="0.000045" asserts="0" />
                <test-case id="1-1256" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="320583918" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8659640Z" end-time="2024-02-22T15:42:21.8660080Z" duration="0.000045" asserts="0" />
                <test-case id="1-1257" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1689815010" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8660120Z" end-time="2024-02-22T15:42:21.8660560Z" duration="0.000044" asserts="0" />
                <test-case id="1-1258" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2068075686" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8660610Z" end-time="2024-02-22T15:42:21.8661050Z" duration="0.000044" asserts="0" />
                <test-case id="1-1259" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1368264640" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8661090Z" end-time="2024-02-22T15:42:21.8661520Z" duration="0.000043" asserts="0" />
                <test-case id="1-1260" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1795675877" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.8661570Z" end-time="2024-02-22T15:42:21.8662020Z" duration="0.000045" asserts="0" />
                <test-case id="1-1261" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="79119788" result="Passed" start-time="2024-02-22T15:42:21.8662070Z" end-time="2024-02-22T15:42:21.9888800Z" duration="0.122674" asserts="20">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1262" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1829191642" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.9888960Z" end-time="2024-02-22T15:42:21.9889930Z" duration="0.000097" asserts="0" />
                <test-case id="1-1263" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="427060550" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.9889990Z" end-time="2024-02-22T15:42:21.9890570Z" duration="0.000058" asserts="0" />
                <test-case id="1-1264" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="856683442" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.9890620Z" end-time="2024-02-22T15:42:21.9891120Z" duration="0.000050" asserts="0" />
                <test-case id="1-1265" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="962317531" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.9891160Z" end-time="2024-02-22T15:42:21.9891630Z" duration="0.000046" asserts="0" />
                <test-case id="1-1266" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="672084934" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.9891670Z" end-time="2024-02-22T15:42:21.9892130Z" duration="0.000046" asserts="0" />
                <test-case id="1-1267" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1265034793" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:21.9892180Z" end-time="2024-02-22T15:42:21.9892620Z" duration="0.000044" asserts="0" />
                <test-case id="1-1268" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1427769829" result="Passed" start-time="2024-02-22T15:42:21.9892660Z" end-time="2024-02-22T15:42:22.1139540Z" duration="0.124688" asserts="20">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1269" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="630383993" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1139770Z" end-time="2024-02-22T15:42:22.1140730Z" duration="0.000096" asserts="0" />
                <test-case id="1-1270" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1910534314" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1140790Z" end-time="2024-02-22T15:42:22.1141370Z" duration="0.000058" asserts="0" />
                <test-case id="1-1271" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="300026043" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1141410Z" end-time="2024-02-22T15:42:22.1141940Z" duration="0.000053" asserts="0" />
                <test-case id="1-1272" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1037714282" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1141990Z" end-time="2024-02-22T15:42:22.1142470Z" duration="0.000048" asserts="0" />
                <test-case id="1-1273" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1657443228" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1142510Z" end-time="2024-02-22T15:42:22.1142980Z" duration="0.000046" asserts="0" />
                <test-case id="1-1274" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="748499883" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1143020Z" end-time="2024-02-22T15:42:22.1143460Z" duration="0.000044" asserts="0" />
                <test-case id="1-1275" name="ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1542708978" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1143500Z" end-time="2024-02-22T15:42:22.1143940Z" duration="0.000045" asserts="0" />
                <test-case id="1-1276" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="726399180" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1143990Z" end-time="2024-02-22T15:42:22.1144420Z" duration="0.000044" asserts="0" />
                <test-case id="1-1277" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1204413502" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1144460Z" end-time="2024-02-22T15:42:22.1144900Z" duration="0.000043" asserts="0" />
                <test-case id="1-1278" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1759990431" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1144940Z" end-time="2024-02-22T15:42:22.1145370Z" duration="0.000044" asserts="0" />
                <test-case id="1-1279" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1162334150" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1145410Z" end-time="2024-02-22T15:42:22.1145840Z" duration="0.000043" asserts="0" />
                <test-case id="1-1280" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1061613532" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1145880Z" end-time="2024-02-22T15:42:22.1146310Z" duration="0.000043" asserts="0" />
                <test-case id="1-1281" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="434244269" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.1146350Z" end-time="2024-02-22T15:42:22.1146780Z" duration="0.000043" asserts="0" />
                <test-case id="1-1282" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="69392518" result="Passed" start-time="2024-02-22T15:42:22.1146820Z" end-time="2024-02-22T15:42:22.2131400Z" duration="0.098458" asserts="20">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1283" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1168124752" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.2131560Z" end-time="2024-02-22T15:42:22.2132540Z" duration="0.000098" asserts="0" />
                <test-case id="1-1284" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1322506227" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.2132600Z" end-time="2024-02-22T15:42:22.2133170Z" duration="0.000057" asserts="0" />
                <test-case id="1-1285" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1999474908" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.2133220Z" end-time="2024-02-22T15:42:22.2133740Z" duration="0.000052" asserts="0" />
                <test-case id="1-1286" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1126644927" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.2133790Z" end-time="2024-02-22T15:42:22.2134250Z" duration="0.000047" asserts="0" />
                <test-case id="1-1287" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1061768207" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.2134300Z" end-time="2024-02-22T15:42:22.2134750Z" duration="0.000045" asserts="0" />
                <test-case id="1-1288" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1220094844" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.2134790Z" end-time="2024-02-22T15:42:22.2135240Z" duration="0.000045" asserts="0" />
                <test-case id="1-1289" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1745976576" result="Passed" start-time="2024-02-22T15:42:22.2135280Z" end-time="2024-02-22T15:42:22.3100120Z" duration="0.096485" asserts="20">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1290" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1183480939" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3100360Z" end-time="2024-02-22T15:42:22.3101320Z" duration="0.000097" asserts="0" />
                <test-case id="1-1291" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="773448812" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3101380Z" end-time="2024-02-22T15:42:22.3101960Z" duration="0.000057" asserts="0" />
                <test-case id="1-1292" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="911015264" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3102000Z" end-time="2024-02-22T15:42:22.3102510Z" duration="0.000051" asserts="0" />
                <test-case id="1-1293" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="385772192" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3102550Z" end-time="2024-02-22T15:42:22.3103010Z" duration="0.000046" asserts="0" />
                <test-case id="1-1294" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1219961562" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3103050Z" end-time="2024-02-22T15:42:22.3103500Z" duration="0.000045" asserts="0" />
                <test-case id="1-1295" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1634049090" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3103540Z" end-time="2024-02-22T15:42:22.3103980Z" duration="0.000044" asserts="0" />
                <test-case id="1-1296" name="ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="435351386" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3104020Z" end-time="2024-02-22T15:42:22.3104440Z" duration="0.000043" asserts="0" />
                <test-case id="1-1297" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1972676706" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3104480Z" end-time="2024-02-22T15:42:22.3104910Z" duration="0.000043" asserts="0" />
                <test-case id="1-1298" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="138809840" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3104950Z" end-time="2024-02-22T15:42:22.3105390Z" duration="0.000044" asserts="0" />
                <test-case id="1-1299" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1745183167" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3105430Z" end-time="2024-02-22T15:42:22.3105860Z" duration="0.000043" asserts="0" />
                <test-case id="1-1300" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1377486079" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3105900Z" end-time="2024-02-22T15:42:22.3106330Z" duration="0.000043" asserts="0" />
                <test-case id="1-1301" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1436488979" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3106370Z" end-time="2024-02-22T15:42:22.3106790Z" duration="0.000042" asserts="0" />
                <test-case id="1-1302" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1835744696" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.3106830Z" end-time="2024-02-22T15:42:22.3107270Z" duration="0.000044" asserts="0" />
                <test-case id="1-1303" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1665490168" result="Passed" start-time="2024-02-22T15:42:22.3107310Z" end-time="2024-02-22T15:42:22.4130200Z" duration="0.102290" asserts="20">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1304" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="126834487" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.4130370Z" end-time="2024-02-22T15:42:22.4131440Z" duration="0.000107" asserts="0" />
                <test-case id="1-1305" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="995868311" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.4131500Z" end-time="2024-02-22T15:42:22.4132090Z" duration="0.000059" asserts="0" />
                <test-case id="1-1306" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1477669812" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.4132140Z" end-time="2024-02-22T15:42:22.4132660Z" duration="0.000052" asserts="0" />
                <test-case id="1-1307" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2116456244" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.4132700Z" end-time="2024-02-22T15:42:22.4133170Z" duration="0.000047" asserts="0" />
                <test-case id="1-1308" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="27646874" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.4133210Z" end-time="2024-02-22T15:42:22.4133650Z" duration="0.000044" asserts="0" />
                <test-case id="1-1309" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1739042948" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.4133690Z" end-time="2024-02-22T15:42:22.4134130Z" duration="0.000044" asserts="0" />
                <test-case id="1-1310" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1794100427" result="Passed" start-time="2024-02-22T15:42:22.4134170Z" end-time="2024-02-22T15:42:22.5124500Z" duration="0.099033" asserts="20">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1311" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1263654063" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5124650Z" end-time="2024-02-22T15:42:22.5125580Z" duration="0.000093" asserts="0" />
                <test-case id="1-1312" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2077308226" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5125630Z" end-time="2024-02-22T15:42:22.5126200Z" duration="0.000057" asserts="0" />
                <test-case id="1-1313" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="905741536" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5126250Z" end-time="2024-02-22T15:42:22.5126760Z" duration="0.000051" asserts="0" />
                <test-case id="1-1314" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="306651108" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5126800Z" end-time="2024-02-22T15:42:22.5127280Z" duration="0.000048" asserts="0" />
                <test-case id="1-1315" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1361431608" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5127320Z" end-time="2024-02-22T15:42:22.5127760Z" duration="0.000045" asserts="0" />
                <test-case id="1-1316" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="9727270" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5127800Z" end-time="2024-02-22T15:42:22.5128250Z" duration="0.000045" asserts="0" />
                <test-case id="1-1317" name="ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="661066890" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5128290Z" end-time="2024-02-22T15:42:22.5128730Z" duration="0.000044" asserts="0" />
                <test-case id="1-1318" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1252037970" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5128770Z" end-time="2024-02-22T15:42:22.5129200Z" duration="0.000043" asserts="0" />
                <test-case id="1-1319" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1004692181" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5129240Z" end-time="2024-02-22T15:42:22.5129670Z" duration="0.000043" asserts="0" />
                <test-case id="1-1320" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1983156251" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5129710Z" end-time="2024-02-22T15:42:22.5130130Z" duration="0.000042" asserts="0" />
                <test-case id="1-1321" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1757800374" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5130170Z" end-time="2024-02-22T15:42:22.5130590Z" duration="0.000042" asserts="0" />
                <test-case id="1-1322" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="44939949" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5130630Z" end-time="2024-02-22T15:42:22.5131120Z" duration="0.000050" asserts="0" />
                <test-case id="1-1323" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1829276900" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.5131170Z" end-time="2024-02-22T15:42:22.5131610Z" duration="0.000043" asserts="0" />
                <test-case id="1-1324" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1594386701" result="Passed" start-time="2024-02-22T15:42:22.5131650Z" end-time="2024-02-22T15:42:22.6505300Z" duration="0.137366" asserts="20">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1325" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1137085502" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.6505530Z" end-time="2024-02-22T15:42:22.6506520Z" duration="0.000099" asserts="0" />
                <test-case id="1-1326" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1536494426" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.6506580Z" end-time="2024-02-22T15:42:22.6507160Z" duration="0.000058" asserts="0" />
                <test-case id="1-1327" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="651942090" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.6507210Z" end-time="2024-02-22T15:42:22.6507720Z" duration="0.000051" asserts="0" />
                <test-case id="1-1328" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="437481666" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.6507760Z" end-time="2024-02-22T15:42:22.6508240Z" duration="0.000048" asserts="0" />
                <test-case id="1-1329" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1261934440" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.6508280Z" end-time="2024-02-22T15:42:22.6508740Z" duration="0.000046" asserts="0" />
                <test-case id="1-1330" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1107357592" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.6508780Z" end-time="2024-02-22T15:42:22.6509220Z" duration="0.000044" asserts="0" />
                <test-case id="1-1331" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="901206121" result="Passed" start-time="2024-02-22T15:42:22.6509280Z" end-time="2024-02-22T15:42:22.7866920Z" duration="0.135765" asserts="20">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1332" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1065603662" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.7867080Z" end-time="2024-02-22T15:42:22.7873910Z" duration="0.000682" asserts="0" />
                <test-case id="1-1333" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="14807264" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.7873980Z" end-time="2024-02-22T15:42:22.7874560Z" duration="0.000058" asserts="0" />
                <test-case id="1-1334" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1932331718" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.7874610Z" end-time="2024-02-22T15:42:22.7875130Z" duration="0.000052" asserts="0" />
                <test-case id="1-1335" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1772608200" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.7875170Z" end-time="2024-02-22T15:42:22.7875640Z" duration="0.000047" asserts="0" />
                <test-case id="1-1336" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="745983220" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.7875690Z" end-time="2024-02-22T15:42:22.7876130Z" duration="0.000044" asserts="0" />
                <test-case id="1-1337" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="551385997" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.7876170Z" end-time="2024-02-22T15:42:22.7876610Z" duration="0.000044" asserts="0" />
                <test-case id="1-1338" name="ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1041290265" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:22.7876650Z" end-time="2024-02-22T15:42:22.7877080Z" duration="0.000043" asserts="0" />
                <test-case id="1-1339" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="326637916" result="Passed" start-time="2024-02-22T15:42:22.7877120Z" end-time="2024-02-22T15:42:22.8549580Z" duration="0.067246" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1340" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="521805096" result="Passed" start-time="2024-02-22T15:42:22.8549740Z" end-time="2024-02-22T15:42:22.9447020Z" duration="0.089729" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1341" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1157672330" result="Passed" start-time="2024-02-22T15:42:22.9447240Z" end-time="2024-02-22T15:42:23.0554980Z" duration="0.110774" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1342" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1034121333" result="Passed" start-time="2024-02-22T15:42:23.0555140Z" end-time="2024-02-22T15:42:23.1820130Z" duration="0.126500" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1343" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1628535543" result="Passed" start-time="2024-02-22T15:42:23.1820300Z" end-time="2024-02-22T15:42:23.2533280Z" duration="0.071299" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1344" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2099359796" result="Passed" start-time="2024-02-22T15:42:23.2533430Z" end-time="2024-02-22T15:42:23.3242280Z" duration="0.070886" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1345" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2067310523" result="Passed" start-time="2024-02-22T15:42:23.3242420Z" end-time="2024-02-22T15:42:23.4417250Z" duration="0.117484" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P24x24;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1346" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="843624233" result="Passed" start-time="2024-02-22T15:42:23.4417400Z" end-time="2024-02-22T15:42:23.5278150Z" duration="0.086075" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1347" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="5273728" result="Passed" start-time="2024-02-22T15:42:23.5278290Z" end-time="2024-02-22T15:42:23.6151760Z" duration="0.087347" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1348" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="79121084" result="Passed" start-time="2024-02-22T15:42:23.6151910Z" end-time="2024-02-22T15:42:23.7173940Z" duration="0.102203" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1349" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2006013601" result="Passed" start-time="2024-02-22T15:42:23.7174090Z" end-time="2024-02-22T15:42:23.8638750Z" duration="0.146467" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1350" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1624321820" result="Passed" start-time="2024-02-22T15:42:23.8638960Z" end-time="2024-02-22T15:42:23.9473750Z" duration="0.083480" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1351" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1921768143" result="Passed" start-time="2024-02-22T15:42:23.9473930Z" end-time="2024-02-22T15:42:24.0260200Z" duration="0.078627" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1352" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="720638736" result="Passed" start-time="2024-02-22T15:42:24.0260340Z" end-time="2024-02-22T15:42:24.1519540Z" duration="0.125920" asserts="20">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 30x30 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P24x24;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1353" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,Quarter)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,Quarter)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1281601306" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:24.1519690Z" end-time="2024-02-22T15:42:24.1523620Z" duration="0.000393" asserts="0" />
                <test-case id="1-1354" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,Half)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,Half)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1909510563" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:24.1523690Z" end-time="2024-02-22T15:42:24.1524280Z" duration="0.000060" asserts="0" />
                <test-case id="1-1355" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,ThreeQuarters)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,ThreeQuarters)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1767169352" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:24.1524330Z" end-time="2024-02-22T15:42:24.1524820Z" duration="0.000049" asserts="0" />
                <test-case id="1-1356" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,NinetyPercent)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,NinetyPercent)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1391549030" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:24.1524860Z" end-time="2024-02-22T15:42:24.1525320Z" duration="0.000046" asserts="0" />
                <test-case id="1-1357" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,FullWidth)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,FullWidth)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="6467796" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:24.1525370Z" end-time="2024-02-22T15:42:24.1525810Z" duration="0.000044" asserts="0" />
                <test-case id="1-1358" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,FullHeight)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,FullHeight)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="71103467" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:24.1525850Z" end-time="2024-02-22T15:42:24.1526290Z" duration="0.000044" asserts="0" />
                <test-case id="1-1359" name="ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,Full)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.ScatteredAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill,Full)" methodname="ScatteredAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1137232632" result="Skipped" label="Ignored" start-time="2024-02-22T15:42:24.1526330Z" end-time="2024-02-22T15:42:24.1526770Z" duration="0.000044" asserts="0" />
              </test-suite>
              <test-suite type="ParameterizedMethod" id="1-1213" name="TwoMatchingAreas" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" testcasecount="18" result="Passed" start-time="2024-02-22T15:42:24.1527160Z" end-time="2024-02-22T15:42:24.2892430Z" duration="0.136528" total="18" passed="18" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="1080">
                <properties>
                  <property name="Repeat" value="10" />
                </properties>
                <test-case id="1-1195" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Cave)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="492010360" result="Passed" start-time="2024-02-22T15:42:24.1527330Z" end-time="2024-02-22T15:42:24.1615930Z" duration="0.008861" asserts="60">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1196" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Hall)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1069537615" result="Passed" start-time="2024-02-22T15:42:24.1616050Z" end-time="2024-02-22T15:42:24.1700490Z" duration="0.008444" asserts="60">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1197" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator,Fill)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1245563815" result="Passed" start-time="2024-02-22T15:42:24.1700620Z" end-time="2024-02-22T15:42:24.1780260Z" duration="0.007964" asserts="60">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
AldousBroderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1198" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Cave)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="319566042" result="Passed" start-time="2024-02-22T15:42:24.1780360Z" end-time="2024-02-22T15:42:24.1860800Z" duration="0.008044" asserts="60">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1199" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Hall)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1510996009" result="Passed" start-time="2024-02-22T15:42:24.1860900Z" end-time="2024-02-22T15:42:24.1943140Z" duration="0.008224" asserts="60">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1200" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator,Fill)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1239085000" result="Passed" start-time="2024-02-22T15:42:24.1943240Z" end-time="2024-02-22T15:42:24.2017530Z" duration="0.007429" asserts="60">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
BinaryTreeMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1201" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Cave)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="906796416" result="Passed" start-time="2024-02-22T15:42:24.2017640Z" end-time="2024-02-22T15:42:24.2088410Z" duration="0.007077" asserts="60">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1202" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Hall)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1376377195" result="Passed" start-time="2024-02-22T15:42:24.2088520Z" end-time="2024-02-22T15:42:24.2159480Z" duration="0.007096" asserts="60">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1203" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator,Fill)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1654710729" result="Passed" start-time="2024-02-22T15:42:24.2159590Z" end-time="2024-02-22T15:42:24.2225900Z" duration="0.006631" asserts="60">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
HuntAndKillMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1204" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Cave)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1423370264" result="Passed" start-time="2024-02-22T15:42:24.2226010Z" end-time="2024-02-22T15:42:24.2295230Z" duration="0.006922" asserts="60">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1205" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Hall)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="2081151682" result="Passed" start-time="2024-02-22T15:42:24.2295340Z" end-time="2024-02-22T15:42:24.2368800Z" duration="0.007347" asserts="60">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1206" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator,Fill)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1702805956" result="Passed" start-time="2024-02-22T15:42:24.2368910Z" end-time="2024-02-22T15:42:24.2433370Z" duration="0.006446" asserts="60">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
RecursiveBacktrackerMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1207" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Cave)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1197376836" result="Passed" start-time="2024-02-22T15:42:24.2433480Z" end-time="2024-02-22T15:42:24.2518120Z" duration="0.008464" asserts="60">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1208" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Hall)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1547790668" result="Passed" start-time="2024-02-22T15:42:24.2518220Z" end-time="2024-02-22T15:42:24.2603210Z" duration="0.008499" asserts="60">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1209" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator,Fill)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1050480139" result="Passed" start-time="2024-02-22T15:42:24.2603320Z" end-time="2024-02-22T15:42:24.2682560Z" duration="0.007924" asserts="60">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1210" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Cave)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="688109252" result="Passed" start-time="2024-02-22T15:42:24.2682660Z" end-time="2024-02-22T15:42:24.2752600Z" duration="0.006994" asserts="60">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Cave;, P2x2;S2x2;Cave;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1211" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Hall)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="960671575" result="Passed" start-time="2024-02-22T15:42:24.2752700Z" end-time="2024-02-22T15:42:24.2823590Z" duration="0.007090" asserts="60">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Hall;, P2x2;S2x2;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1212" name="TwoMatchingAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.TwoMatchingAreas(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator,Fill)" methodname="TwoMatchingAreas" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1827257559" result="Passed" start-time="2024-02-22T15:42:24.2823700Z" end-time="2024-02-22T15:42:24.2892290Z" duration="0.006859" asserts="60">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
WilsonsMazeGenerator: Generating maze 6x6 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S2x2;Fill;, P2x2;S2x2;Fill;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
              </test-suite>
              <test-case id="1-1233" name="WilsonsHalls" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest.WilsonsHalls" methodname="WilsonsHalls" classname="PlayersWorlds.Maps.Maze.MazeGeneratorAreasTest" runstate="Runnable" seed="1865192301" result="Passed" start-time="2024-02-22T15:42:24.2892540Z" end-time="2024-02-22T15:42:24.2921710Z" duration="0.002917" asserts="1">
                <properties>
                  <property name="Repeat" value="10" />
                </properties>
                <output><![CDATA[WilsonsMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x3;S4x7;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1-1362" name="MazeGeneratorTest" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" testcasecount="532" result="Passed" start-time="2024-02-22T15:42:24.2922040Z" end-time="2024-02-22T15:42:24.3741670Z" duration="0.081962" total="28" passed="28" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="173">
              <test-suite type="ParameterizedMethod" id="1-1898" name="AreasAreAppliedProperly" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.AreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2024-02-22T15:42:24.2922490Z" end-time="2024-02-22T15:42:24.3198810Z" duration="0.027631" total="6" passed="6" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="138">
                <test-case id="1-1892" name="AreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.AreasAreAppliedProperly(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)" methodname="AreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="1457251903" result="Passed" start-time="2024-02-22T15:42:24.2922680Z" end-time="2024-02-22T15:42:24.2993830Z" duration="0.007115" asserts="23">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x1;S2x3;Fill;, P1x5;S3x4;Fill;, P5x6;S3x2;Hall;, P5x1;S4x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1893" name="AreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.AreasAreAppliedProperly(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)" methodname="AreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="357726972" result="Passed" start-time="2024-02-22T15:42:24.2993950Z" end-time="2024-02-22T15:42:24.3036750Z" duration="0.004280" asserts="23">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x1;S2x3;Fill;, P1x5;S3x4;Fill;, P5x6;S3x2;Hall;, P5x1;S4x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1894" name="AreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.AreasAreAppliedProperly(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)" methodname="AreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="9691592" result="Passed" start-time="2024-02-22T15:42:24.3036870Z" end-time="2024-02-22T15:42:24.3074480Z" duration="0.003762" asserts="23">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x1;S2x3;Fill;, P1x5;S3x4;Fill;, P5x6;S3x2;Hall;, P5x1;S4x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1895" name="AreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.AreasAreAppliedProperly(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)" methodname="AreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="958517922" result="Passed" start-time="2024-02-22T15:42:24.3074600Z" end-time="2024-02-22T15:42:24.3115400Z" duration="0.004080" asserts="23">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x1;S2x3;Fill;, P1x5;S3x4;Fill;, P5x6;S3x2;Hall;, P5x1;S4x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1896" name="AreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.AreasAreAppliedProperly(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)" methodname="AreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="1733492004" result="Passed" start-time="2024-02-22T15:42:24.3115560Z" end-time="2024-02-22T15:42:24.3156040Z" duration="0.004048" asserts="23">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x1;S2x3;Fill;, P1x5;S3x4;Fill;, P5x6;S3x2;Hall;, P5x1;S4x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1897" name="AreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.AreasAreAppliedProperly(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)" methodname="AreasAreAppliedProperly" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="752257230" result="Passed" start-time="2024-02-22T15:42:24.3156140Z" end-time="2024-02-22T15:42:24.3198680Z" duration="0.004255" asserts="23">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x1;S2x3;Fill;, P1x5;S3x4;Fill;, P5x6;S3x2;Hall;, P5x1;S4x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="1-1891" name="CanFindPaths" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanFindPaths" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2024-02-22T15:42:24.3198900Z" end-time="2024-02-22T15:42:24.3211410Z" duration="0.001252" total="6" passed="6" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="12">
                <test-case id="1-1885" name="CanFindPaths(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanFindPaths(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)" methodname="CanFindPaths" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="519892826" result="Passed" start-time="2024-02-22T15:42:24.3199000Z" end-time="2024-02-22T15:42:24.3205010Z" duration="0.000601" asserts="2" />
                <test-case id="1-1886" name="CanFindPaths(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanFindPaths(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)" methodname="CanFindPaths" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="221672666" result="Passed" start-time="2024-02-22T15:42:24.3205090Z" end-time="2024-02-22T15:42:24.3206630Z" duration="0.000154" asserts="2" />
                <test-case id="1-1887" name="CanFindPaths(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanFindPaths(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)" methodname="CanFindPaths" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="949310569" result="Passed" start-time="2024-02-22T15:42:24.3206690Z" end-time="2024-02-22T15:42:24.3207750Z" duration="0.000106" asserts="2" />
                <test-case id="1-1888" name="CanFindPaths(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanFindPaths(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)" methodname="CanFindPaths" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="803395997" result="Passed" start-time="2024-02-22T15:42:24.3207800Z" end-time="2024-02-22T15:42:24.3208790Z" duration="0.000099" asserts="2" />
                <test-case id="1-1889" name="CanFindPaths(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanFindPaths(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)" methodname="CanFindPaths" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="1511805219" result="Passed" start-time="2024-02-22T15:42:24.3208850Z" end-time="2024-02-22T15:42:24.3210310Z" duration="0.000146" asserts="2" />
                <test-case id="1-1890" name="CanFindPaths(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanFindPaths(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)" methodname="CanFindPaths" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="321209449" result="Passed" start-time="2024-02-22T15:42:24.3210360Z" end-time="2024-02-22T15:42:24.3211350Z" duration="0.000098" asserts="2" />
              </test-suite>
              <test-suite type="ParameterizedMethod" id="1-1370" name="CanGenerateMazes" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanGenerateMazes" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2024-02-22T15:42:24.3211480Z" end-time="2024-02-22T15:42:24.3546890Z" duration="0.033541" total="6" passed="6" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="6">
                <test-case id="1-1364" name="CanGenerateMazes(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanGenerateMazes(PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)" methodname="CanGenerateMazes" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="484218113" result="Passed" start-time="2024-02-22T15:42:24.3211570Z" end-time="2024-02-22T15:42:24.3298180Z" duration="0.008661" asserts="1">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1365" name="CanGenerateMazes(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanGenerateMazes(PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)" methodname="CanGenerateMazes" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="717081646" result="Passed" start-time="2024-02-22T15:42:24.3298290Z" end-time="2024-02-22T15:42:24.3353580Z" duration="0.005529" asserts="1">
                  <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1366" name="CanGenerateMazes(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanGenerateMazes(PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)" methodname="CanGenerateMazes" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="2122496013" result="Passed" start-time="2024-02-22T15:42:24.3353680Z" end-time="2024-02-22T15:42:24.3393120Z" duration="0.003944" asserts="1">
                  <output><![CDATA[HuntAndKillMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.HuntAndKillMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1367" name="CanGenerateMazes(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanGenerateMazes(PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)" methodname="CanGenerateMazes" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="771553108" result="Passed" start-time="2024-02-22T15:42:24.3393220Z" end-time="2024-02-22T15:42:24.3435420Z" duration="0.004221" asserts="1">
                  <output><![CDATA[RecursiveBacktrackerMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.RecursiveBacktrackerMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1368" name="CanGenerateMazes(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanGenerateMazes(PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)" methodname="CanGenerateMazes" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="1461738242" result="Passed" start-time="2024-02-22T15:42:24.3435530Z" end-time="2024-02-22T15:42:24.3495550Z" duration="0.006003" asserts="1">
                  <output><![CDATA[SidewinderMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1369" name="CanGenerateMazes(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanGenerateMazes(PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)" methodname="CanGenerateMazes" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="764399251" result="Passed" start-time="2024-02-22T15:42:24.3495650Z" end-time="2024-02-22T15:42:24.3546770Z" duration="0.005113" asserts="1">
                  <output><![CDATA[WilsonsMazeGenerator: Generating maze 20x20 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.WilsonsMazeGenerator)
]]></output>
                </test-case>
              </test-suite>
              <test-case id="1-1363" name="CanUseCustomAreaGenerator" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.CanUseCustomAreaGenerator" methodname="CanUseCustomAreaGenerator" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="304408452" result="Passed" start-time="2024-02-22T15:42:24.3546970Z" end-time="2024-02-22T15:42:24.3603000Z" duration="0.005603" asserts="4">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Auto, <null>, PlayersWorlds.Maps.Maze.MazeGeneratorTest+CustomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
┌───────────────────────────┬───┬───────────────────────────┐
│                           │   │ 34  33  32  31  30  2f  2e│
│   ┌───────┐   ╶───┐   ╷   │   ╵   ╶───────────┐   ┌───╴   │
│   │       │       │   │   │     35  36  37  38│   │     2d│
│   ╵   ┌───┴───╴   ├───┼───┼───╴   ┌───┬───╴   │   ├───╴   │
│       │     b   c │   │   │       │   │ 3a  39│   │     2c│
├───────┼───╴   ╷   ╵   ╵   └───────┘   └───┐   ├───┴───┐   │
│       │     a │ d   e   f   10  11        │   │       │ 2b│
│   ╷   ├───┐   └───────────┬───╴   ╷   ╶───┼───┘   ╶───┘   │
│   │   │   │ 9             │     12│       │             2a│
│   ├───┤   ╵   ┌───╴   ╷   └───┐   │   ╷   ├───╴   ╷   ╷   │
│   │   │ 7   8 │       │       │ 13│   │   │       │   │ 29│
│   │   │   ╶───┴───┐   ├───────┘   ├───┴───┴───╴   └───┤   │
│   │   │ 6   5   4 │   │     15  14│                   │ 28│
│   ╵   └───┬───┐   └───┼───╴   ╶───┴───┬───╴   ╷   ┌───┘   │
│           │ 0 │ 3     │     16  17    │       │   │     27│
├───┐   ╶───┤   ╵   ┌───┘   ╷   ╷   ╶───┼───────┴───┴───┐   │
│   │       │ 1   2 │       │   │ 18    │               │ 26│
│   ╵   ╷   └───┐   │   ╶───┴───┤   ╶───┴───┬───╴   ╶───┘   │
│       │       │   │           │ 19  1a  1b│ 22  23  24  25│
├───────┤   ╷   └───┴───┬───┬───┤   ┌───┐   │   ╷   ╶───┐   │
│       │   │           │   │   │   │   │ 1c│ 21│       │   │
│   ╶───┴───┘   ┌───────┘   ╵   └───┘   ╵   │   ├───┬───┘   │
│               │                         1d│ 20│   │       │
├───────┬───╴   ╵   ╶───┐   ┌───┬───╴   ╷   ╵   ╵   └───┐   │
│       │               │   │   │       │ 1e  1f        │   │
│   ┼   ├───╴   ┌───┬───┴───┘   └───╴   ├───────╴   ┌───┤   │
│       │       │   │                   │           │   │   │
│   ┼   ╵   ╷   ╵   │   ╶───┐   ╷   ┌───┘   ╷   ╷   ╵   └───┤
│           │       │       │   │   │       │   │           │
└───────────┴───────┴───────┴───┴───┴───────┴───┴───────────┘

]]></output>
              </test-case>
              <test-case id="1-1373" name="IsFillComplete_Full" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.IsFillComplete_Full" methodname="IsFillComplete_Full" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="2099413366" result="Passed" start-time="2024-02-22T15:42:24.3603110Z" end-time="2024-02-22T15:42:24.3621910Z" duration="0.001881" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
┌───────────┬───┬───────────┬───┬───┬───┐
│ 1e  1d    │   │ 6   5     │   │ 0 │   │
├───╴   ╶───┤   │   ╷   ╶───┘   ╵   │   │
│     1c    │   │ 7 │ 4   3   2   1 │   │
├───┐   ┌───┤   ╵   └───┐   ┌───────┘   │
│   │ 1b│   │     8   9 │   │           │
│   │   ╵   ├───┬───╴   └───┤   ┌───╴   │
│   │ 1a    │   │     a   b │   │       │
│   │   ╶───┘   └───┬───┐   └───┤   ╶───┤
│   │ 19            │   │ c   d │       │
│   ╵   ┌───┬───────┤   └───┐   ╵   ╷   │
│     18│   │       │       │ e     │   │
├───╴   ╵   │   ╷   ╵   ╶───┘   ╷   └───┤
│     17    │   │ 12  11  10  f │       │
├───┐   ╶───┴───┘   ╶───┐   ╶───┤   ╶───┤
│   │ 16  15  14  13    │       │       │
│   ╵   ┌───╴   ┌───────┴───┐   └───────┤
│       │       │           │           │
├───╴   ├───╴   └───────┐   ╵   ┌───╴   │
│       │               │       │       │
└───────┴───────────────┴───────┴───────┘

]]></output>
              </test-case>
              <test-case id="1-1378" name="IsFillComplete_FullHeight" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.IsFillComplete_FullHeight" methodname="IsFillComplete_FullHeight" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="566598235" result="Passed" start-time="2024-02-22T15:42:24.3622020Z" end-time="2024-02-22T15:42:24.3644760Z" duration="0.002274" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullHeight, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
┌───────────────────────────┬───┐        
│     7   8   9             │   │        
├───╴   ╶───┐   ╶───┬───╴   ╵   ├───┐    
│ 5   6     │ a     │           │   │    
│   ╶───────┤   ┌───┴───────────┘   │    
│ 4         │ b │ e   f             │    
│   ╶───┬───┘   ╵   ╷   ╶───┐   ╷   │    
│ 3   2 │     c   d │ 10  11│   │   │    
│   ╷   ├───────┬───┼───╴   ├───┤   │    
│   │ 1 │       │   │ 13  12│   │   │    
└───┤   │   ╶───┘   ╵   ╶───┤   └───┘    
    │ 0 │ 17  16  15  14    │            
    ├───┘   ┌───────────╴   │            
    │ 19  18│               │            
┌───┘   ╶───┼───┐   ┌───────┘            
│ 1b  1a    │   │   │                    
│   ┌───────┘   └───┘                    
│ 1c│                                    
│   │                                    
│ 1d│                                    
└───┘                                    

]]></output>
              </test-case>
              <test-case id="1-1377" name="IsFillComplete_FullWidth" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.IsFillComplete_FullWidth" methodname="IsFillComplete_FullWidth" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="599462388" result="Passed" start-time="2024-02-22T15:42:24.3644860Z" end-time="2024-02-22T15:42:24.3667140Z" duration="0.002229" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(FullWidth, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
        ┌───────────────────────────────┐
        │     b   a                     │
        │   ╷   ╷   ╶───────────┐   ┌───┤
        │   │ c │ 9   8   7   6 │   │   │
        │   │   │   ╶───┬───┐   ├───┤   │
        │   │ d │       │   │ 5 │   │   │
┌───────┤   │   └───┬───┘   │   ╵   ╵   │
│       │   │ e   f │       │ 4         │
└───┐   └───┘   ╷   ├───╴   │   ╶───┐   │
    │           │ 10│       │ 3   2 │   │
    └───┐   ╶───┤   ╵   ╶───┼───┐   └───┤
        │       │ 11  12    │ 20│ 1   0 │
        │   ┌───┤   ╷   ╶───┤   ├───────┤
        │   │   │   │ 13  14│ 1f│       │
        │   │   └───┼───┐   │   └───┐   │
        │   │       │   │ 15│ 1e  1d│   │
        └───┘       │   ╵   └───┐   ╵   │
                    │     16  17│ 1c  1b│
                ┌───┘   ╷   ╷   └───╴   │
                │       │   │ 18  19  1a│
                └───────┴───┴───────────┘

]]></output>
              </test-case>
              <test-case id="1-1372" name="IsFillComplete_Half" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.IsFillComplete_Half" methodname="IsFillComplete_Half" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="1113021129" result="Passed" start-time="2024-02-22T15:42:24.3667250Z" end-time="2024-02-22T15:42:24.3682080Z" duration="0.001484" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
                                         
                                         
                        ┌───┐            
                        │ 13│            
        ┌───────────┐   │   └───────────┐
        │ 0   1   2 │   │ 12  11        │
    ┌───┼───────╴   │   └───┐   ┌───────┘
    │   │ 5   4   3 │       │ 10│        
    │   ╵   ╶───┬───┼───────┤   │        
    │     6   7 │   │ b   c │ f │        
┌───┴───────╴   ╵   ╵   ╷   ╵   │        
│             8   9   a │ d   e │        
│   ╶───┬───╴   ╶───┐   │   ┌───┘        
│       │           │   │   │            
└───────┼───┬───┬───┘   ├───┤            
        │   │   │       │   │            
        │   ╵   ╵   ╷   ╵   │            
        │           │       │            
        ├───────────┘   ╷   │            
        │               │   │            
        └───────────────┴───┘            

]]></output>
              </test-case>
              <test-case id="1-1376" name="IsFillComplete_NinetyPercent" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.IsFillComplete_NinetyPercent" methodname="IsFillComplete_NinetyPercent" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="1901333605" result="Passed" start-time="2024-02-22T15:42:24.3682180Z" end-time="2024-02-22T15:42:24.3698280Z" duration="0.001610" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(NinetyPercent, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
┌───────────────┬───┬───────────┐        
│               │   │ 17  16  15│        
├───╴   ┌───┐   ╵   │   ╷   ╷   │        
│       │   │       │ 18│   │ 14│        
│   ╷   │   ╵   ╶───┘   │   │   │        
│   │   │ 1c  1b  1a  19│   │ 13│        
│   ├───┘   ╶───┐   ┌───┴───┘   ├───┐    
│   │     1d    │   │     11  12│   │    
└───┼───╴   ┌───┼───┴───╴   ┌───┘   ├───┐
    │ 1f  1e│   │ e   f   10│       │   │
┌───┘   ╶───┤   │   ╶───────┴───┐   ╵   │
│ 21  20    │   │ d   c   b   a │       │
│   ╶───────┘   │   ┌───┬───╴   └───╴   │
│ 22  23        │   │   │     9         │
├───┐   ┌───┬───┼───┤   └───╴   ┌───────┤
│   │ 24│   │   │   │         8 │ 5   4 │
│   ╵   ╵   ╵   └───┤   ╶───┐   ╵   ╷   │
│     25  26        │       │ 7   6 │ 3 │
├───────╴   ╷   ┌───┴───╴   ├───────┘   │
│ 29  28  27│   │           │ 0   1   2 │
└───────────┴───┴───────────┴───────────┘

]]></output>
              </test-case>
              <test-case id="1-1374" name="IsFillComplete_Quarter" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.IsFillComplete_Quarter" methodname="IsFillComplete_Quarter" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="221026712" result="Passed" start-time="2024-02-22T15:42:24.3698380Z" end-time="2024-02-22T15:42:24.3707100Z" duration="0.000872" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Quarter, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
                    ┌───────────┐        
                    │ 2   1   0 │        
                    │   ╷   ┌───┘        
                    │ 3 │   │            
                ┌───┘   └───┤            
                │     4     │            
                └───┐   ╶───┴───┐        
                    │ 5   6   7 │        
                    └───────┐   │        
                            │ 8 │        
                        ┌───┘   └───────┐
                        │     9   a   b │
                        └───────────┐   │
                                    │ c │
                                    │   │
                                    │ d │
                            ┌───────┤   │
                            │ 12  11│ e │
                        ┌───┘   ╷   ╵   │
                        │ 14  13│ 10  f │
                        └───────┴───────┘

]]></output>
              </test-case>
              <test-case id="1-1375" name="IsFillComplete_ThreeQuarters" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.IsFillComplete_ThreeQuarters" methodname="IsFillComplete_ThreeQuarters" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="182989044" result="Passed" start-time="2024-02-22T15:42:24.3707200Z" end-time="2024-02-22T15:42:24.3726100Z" duration="0.001890" asserts="1">
                <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(ThreeQuarters, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
┌───────────────────┬───┬───────┬───────┐
│             9   a │   │       │       │
├───┐   ╷   ╷   ╷   ╵   ╵   ╶───┘   ╶───┤
│   │   │   │ 8 │ b   c   d   e         │
│   └───┴───┤   └───┬───┬───┐   ╷   ╷   │
│ 2   1   0 │ 7     │   │   │ f │   │   │
│   ╶───────┘   ┌───┘   ╵   ╵   └───┼───┘
│ 3   4   5   6 │     12  11  10    │    
├───────────┐   │   ╷   ╷   ╶───────┤    
│ 1a  19    │   │   │ 13│           │    
│   ╷   ╶───┴───┴───┘   │   ┌───╴   │    
│ 1b│ 18  17  16  15  14│   │       │    
│   └───────┐   ╷   ╶───┴───┼───┐   └───┐
│ 1c  1d  1e│   │           │   │       │
│   ┌───╴   ├───┤   ┌───────┘   │   ╶───┤
│   │ 20  1f│   │   │           │       │
└───┴───────┤   ╵   │           └───────┘
            │       │                    
            └───────┘                    
                                         
                                         

]]></output>
              </test-case>
              <test-case id="1-1371" name="OnlyFullGenerators" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.OnlyFullGenerators" methodname="OnlyFullGenerators" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="1708539483" result="Passed" start-time="2024-02-22T15:42:24.3726200Z" end-time="2024-02-22T15:42:24.3732450Z" duration="0.000626" asserts="2">
                <output><![CDATA[BinaryTreeMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.BinaryTreeMazeGenerator)
SidewinderMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Half, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
              </test-case>
              <test-case id="1-1884" name="WrongGeneratorOptions" fullname="PlayersWorlds.Maps.Maze.MazeGeneratorTest.WrongGeneratorOptions" methodname="WrongGeneratorOptions" classname="PlayersWorlds.Maps.Maze.MazeGeneratorTest" runstate="Runnable" seed="802282058" result="Passed" start-time="2024-02-22T15:42:24.3732530Z" end-time="2024-02-22T15:42:24.3741520Z" duration="0.000899" asserts="4">
                <output><![CDATA[TestGeneratorB: Generating maze 3x4 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.MazeGeneratorTest+TestGeneratorB)
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestSuite" id="1-2047" name="PostProcessing" fullname="PlayersWorlds.Maps.Maze.PostProcessing" runstate="Runnable" testcasecount="5" result="Passed" start-time="2024-02-22T15:42:09.2516210Z" end-time="2024-02-22T15:42:24.3782750Z" duration="15.126654" total="5" passed="5" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="18">
              <test-suite type="TestFixture" id="1-1904" name="DeadEndTest" fullname="PlayersWorlds.Maps.Maze.PostProcessing.DeadEndTest" classname="PlayersWorlds.Maps.Maze.PostProcessing.DeadEndTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2024-02-22T15:42:24.3741820Z" end-time="2024-02-22T15:42:24.3746820Z" duration="0.000500" total="1" passed="1" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="7">
                <test-case id="1-1905" name="DeadEnd_CanFindDeadEnds" fullname="PlayersWorlds.Maps.Maze.PostProcessing.DeadEndTest.DeadEnd_CanFindDeadEnds" methodname="DeadEnd_CanFindDeadEnds" classname="PlayersWorlds.Maps.Maze.PostProcessing.DeadEndTest" runstate="Runnable" seed="467536766" result="Passed" start-time="2024-02-22T15:42:24.3742270Z" end-time="2024-02-22T15:42:24.3746710Z" duration="0.000444" asserts="7" />
              </test-suite>
              <test-suite type="TestFixture" id="1-1906" name="DijkstraDistanceTest" fullname="PlayersWorlds.Maps.Maze.PostProcessing.DijkstraDistanceTest" classname="PlayersWorlds.Maps.Maze.PostProcessing.DijkstraDistanceTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2024-02-22T15:42:24.3746930Z" end-time="2024-02-22T15:42:24.3782690Z" duration="0.003576" total="4" passed="4" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="11">
                <test-case id="1-1910" name="DijkstraDistance_CanFindLongestTrail" fullname="PlayersWorlds.Maps.Maze.PostProcessing.DijkstraDistanceTest.DijkstraDistance_CanFindLongestTrail" methodname="DijkstraDistance_CanFindLongestTrail" classname="PlayersWorlds.Maps.Maze.PostProcessing.DijkstraDistanceTest" runstate="Runnable" seed="1533038992" result="Passed" start-time="2024-02-22T15:42:24.3747330Z" end-time="2024-02-22T15:42:24.3750960Z" duration="0.000363" asserts="4" />
                <test-case id="1-1908" name="DijkstraDistance_CanSolveAMaze" fullname="PlayersWorlds.Maps.Maze.PostProcessing.DijkstraDistanceTest.DijkstraDistance_CanSolveAMaze" methodname="DijkstraDistance_CanSolveAMaze" classname="PlayersWorlds.Maps.Maze.PostProcessing.DijkstraDistanceTest" runstate="Runnable" seed="347258202" result="Passed" start-time="2024-02-22T15:42:24.3751040Z" end-time="2024-02-22T15:42:24.3753720Z" duration="0.000268" asserts="4" />
                <test-case id="1-1907" name="DijkstraDistance_FindsAllDistances" fullname="PlayersWorlds.Maps.Maze.PostProcessing.DijkstraDistanceTest.DijkstraDistance_FindsAllDistances" methodname="DijkstraDistance_FindsAllDistances" classname="PlayersWorlds.Maps.Maze.PostProcessing.DijkstraDistanceTest" runstate="Runnable" seed="359119214" result="Passed" start-time="2024-02-22T15:42:24.3753790Z" end-time="2024-02-22T15:42:24.3781070Z" duration="0.002729" asserts="2">
                  <output><![CDATA[AldousBroderMazeGenerator: Generating maze 10x10 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, None, <null>, PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.AldousBroderMazeGenerator)
]]></output>
                </test-case>
                <test-case id="1-1909" name="DijkstraDistance_ReturnsEmptyIfNoSolutionFound" fullname="PlayersWorlds.Maps.Maze.PostProcessing.DijkstraDistanceTest.DijkstraDistance_ReturnsEmptyIfNoSolutionFound" methodname="DijkstraDistance_ReturnsEmptyIfNoSolutionFound" classname="PlayersWorlds.Maps.Maze.PostProcessing.DijkstraDistanceTest" runstate="Runnable" seed="1830579194" result="Passed" start-time="2024-02-22T15:42:24.3781180Z" end-time="2024-02-22T15:42:24.3782580Z" duration="0.000140" asserts="1" />
              </test-suite>
            </test-suite>
            <test-suite type="TestFixture" id="1-1899" name="SidewinderMazeGeneratorTest" fullname="PlayersWorlds.Maps.Maze.SidewinderMazeGeneratorTest" classname="PlayersWorlds.Maps.Maze.SidewinderMazeGeneratorTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2024-02-22T15:42:24.3782840Z" end-time="2024-02-22T15:42:24.4133210Z" duration="0.035037" total="2" passed="2" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="22">
              <test-case id="1-1900" name="ArchShapedAreas" fullname="PlayersWorlds.Maps.Maze.SidewinderMazeGeneratorTest.ArchShapedAreas" methodname="ArchShapedAreas" classname="PlayersWorlds.Maps.Maze.SidewinderMazeGeneratorTest" runstate="Runnable" seed="130542189" result="Passed" start-time="2024-02-22T15:42:24.3783250Z" end-time="2024-02-22T15:42:24.3815910Z" duration="0.003266" asserts="2">
                <output><![CDATA[SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S3x13;Hall;, P10x2;S3x13;Hall;, P4x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
              </test-case>
              <test-case id="1-1901" name="ArchShapedAreasLeftExit" fullname="PlayersWorlds.Maps.Maze.SidewinderMazeGeneratorTest.ArchShapedAreasLeftExit" methodname="ArchShapedAreasLeftExit" classname="PlayersWorlds.Maps.Maze.SidewinderMazeGeneratorTest" runstate="Runnable" seed="137457137" result="Passed" start-time="2024-02-22T15:42:24.3816000Z" end-time="2024-02-22T15:42:24.4133060Z" duration="0.031707" asserts="20">
                <properties>
                  <property name="Repeat" value="10" />
                </properties>
                <output><![CDATA[SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S3x13;Hall;, P10x2;S3x13;Hall;, P6x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S3x13;Hall;, P10x2;S3x13;Hall;, P6x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S3x13;Hall;, P10x2;S3x13;Hall;, P6x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S3x13;Hall;, P10x2;S3x13;Hall;, P6x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S3x13;Hall;, P10x2;S3x13;Hall;, P6x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S3x13;Hall;, P10x2;S3x13;Hall;, P6x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S3x13;Hall;, P10x2;S3x13;Hall;, P6x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S3x13;Hall;, P10x2;S3x13;Hall;, P6x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S3x13;Hall;, P10x2;S3x13;Hall;, P6x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
SidewinderMazeGenerator: Generating maze 15x15 with PlayersWorlds.Maps.Maze.GeneratorOptions(Full, Manual, List`1<MapArea>(P2x2;S3x13;Hall;, P10x2;S3x13;Hall;, P6x8;S7x3;Hall;), PlayersWorlds.Maps.Areas.RandomAreaGenerator, PlayersWorlds.Maps.Maze.SidewinderMazeGenerator)
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1-1902" name="WilsonsMazeGeneratorTest" fullname="PlayersWorlds.Maps.Maze.WilsonsMazeGeneratorTest" classname="PlayersWorlds.Maps.Maze.WilsonsMazeGeneratorTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2024-02-22T15:42:24.4133320Z" end-time="2024-02-22T15:42:24.4269120Z" duration="0.013580" total="1" passed="1" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="1">
              <test-case id="1-1903" name="DuplicateRandom" fullname="PlayersWorlds.Maps.Maze.WilsonsMazeGeneratorTest.DuplicateRandom" methodname="DuplicateRandom" classname="PlayersWorlds.Maps.Maze.WilsonsMazeGeneratorTest" runstate="Runnable" seed="1338056999" result="Passed" start-time="2024-02-22T15:42:24.4133770Z" end-time="2024-02-22T15:42:24.4268990Z" duration="0.013522" asserts="1" />
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="1-1056" name="Maze2DRendererTest" fullname="PlayersWorlds.Maps.Maze2DRendererTest" classname="PlayersWorlds.Maps.Maze2DRendererTest" runstate="Runnable" testcasecount="8" result="Passed" start-time="2024-02-22T15:42:24.4269310Z" end-time="2024-02-22T15:42:24.4389310Z" duration="0.012000" total="8" passed="8" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="57">
            <test-case id="1-1059" name="CanRenderAMapWithFilledAreas" fullname="PlayersWorlds.Maps.Maze2DRendererTest.CanRenderAMapWithFilledAreas" methodname="CanRenderAMapWithFilledAreas" classname="PlayersWorlds.Maps.Maze2DRendererTest" runstate="Runnable" seed="1156636052" result="Passed" start-time="2024-02-22T15:42:24.4269730Z" end-time="2024-02-22T15:42:24.4289720Z" duration="0.001999" asserts="1">
              <output><![CDATA[0▓▓▓▓▓▓▓▓▓▓▓▓▓▓00000
0▓░░░░░░░░░░░░▓00000
0▓░░▒▓▓▓▓▓▒░░░▓▓0000
0▓░░▓▓000▓▓░░░▒▓▓▓▓0
0▓░░▓00000▓░░░░░░░▓0
0▓░░▓00000▓▓▓▓▓▓▓▓▓0
0▓░░▓0000000000▓░░▓0
0▓░░▓0000000000▓░░▓0
0▓░░▓▓00000000▓▓░░▓0
0▓░░▒▓▓▓▓▓▓▓▓▓▓▒░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓0

0▓▓▓▓▓▓▓▓▓▓▓▓▓▓00000
0▓░░░░░░░░░░░░▓00000
0▓░░▒▓▓▓▓▓▒░░░▓▓0000
0▓░░▓▓000▓▓░░░▒▓▓▓▓0
0▓░░▓00000▓░░░░░░░▓0
0▓░░▓00000▓▓▓▓▓▓▓▓▓0
0▓░░▓0000000000▓░░▓0
0▓░░▓0000000000▓░░▓0
0▓░░▓▓00000000▓▓░░▓0
0▓░░▒▓▓▓▓▓▓▓▓▓▓▒░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓0

]]></output>
            </test-case>
            <test-case id="1-1060" name="CanRenderAMapWithHallAreas" fullname="PlayersWorlds.Maps.Maze2DRendererTest.CanRenderAMapWithHallAreas" methodname="CanRenderAMapWithHallAreas" classname="PlayersWorlds.Maps.Maze2DRendererTest" runstate="Runnable" seed="586659550" result="Passed" start-time="2024-02-22T15:42:24.4289810Z" end-time="2024-02-22T15:42:24.4303280Z" duration="0.001347" asserts="1">
              <output><![CDATA[0▓▓▓▓▓▓▓▓▓▓▓▓▓▓00000
0▓░░░░░░░░░░░░▓00000
0▓░░▒▓▓▓▓▓▒░░░▓▓0000
0▓░░▓▓▓▓▓▓▓░░░▒▓▓▓▓0
0▓░░▓▓▓▓▓▓▓░░░░░░░▓0
0▓░░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓0

0▓▓▓▓▓▓▓▓▓▓▓▓▓▓00000
0▓░░░░░░░░░░░░▓00000
0▓░░▒▓▓▓▓▓▒░░░▓▓0000
0▓░░▓▓▓▓▓▓▓░░░▒▓▓▓▓0
0▓░░▓▓▓▓▓▓▓░░░░░░░▓0
0▓░░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓0

]]></output>
            </test-case>
            <test-case id="1-1057" name="CanRenderAMapWithSmoothCorners" fullname="PlayersWorlds.Maps.Maze2DRendererTest.CanRenderAMapWithSmoothCorners" methodname="CanRenderAMapWithSmoothCorners" classname="PlayersWorlds.Maps.Maze2DRendererTest" runstate="Runnable" seed="1882245618" result="Passed" start-time="2024-02-22T15:42:24.4303380Z" end-time="2024-02-22T15:42:24.4314940Z" duration="0.001156" asserts="1">
              <output><![CDATA[0000000000000
▓▓▓▓▓▓▓▓▓0000
▓░░░░░░░▓▓000
▓░▒▓▓▓▒░▒▓▓▓▓
▓░▓▓▓▓▓░░░░░▓
▓░▓▓▓▓▓░░░░░▓
▓░▓▓▓▓▓▓▓▓▓▓▓
▓░▒▓▓▓▓▓▓▓▓▓▓
▓░░░░░▓▓▓▓░░▓
▓░░░░░▒▓▓▒░░▓
▓░░░░░░░░░░░▓
▓░░░░░░░░░░░▓
▓▓▓▓▓▓▓▓▓▓▓▓▓
0000000000000

0000000000000
▓▓▓▓▓▓▓▓▓0000
▓░░░░░░░▓▓000
▓░▒▓▓▓▒░▒▓▓▓▓
▓░▓▓▓▓▓░░░░░▓
▓░▓▓▓▓▓░░░░░▓
▓░▓▓▓▓▓▓▓▓▓▓▓
▓░▒▓▓▓▓▓▓▓▓▓▓
▓░░░░░▓▓▓▓░░▓
▓░░░░░▒▓▓▒░░▓
▓░░░░░░░░░░░▓
▓░░░░░░░░░░░▓
▓▓▓▓▓▓▓▓▓▓▓▓▓
0000000000000

]]></output>
            </test-case>
            <test-case id="1-1058" name="CanRenderAMapWithVoids" fullname="PlayersWorlds.Maps.Maze2DRendererTest.CanRenderAMapWithVoids" methodname="CanRenderAMapWithVoids" classname="PlayersWorlds.Maps.Maze2DRendererTest" runstate="Runnable" seed="1914413727" result="Passed" start-time="2024-02-22T15:42:24.4315050Z" end-time="2024-02-22T15:42:24.4331830Z" duration="0.001678" asserts="1">
              <output><![CDATA[0▓▓▓▓▓▓▓▓▓▓▓▓▓▓00000
0▓░░░░░░░░░░░░▓00000
0▓░░▒▓▓▓▓▓▒░░░▓▓0000
0▓░░▓▓▓▓▓▓▓░░░▒▓▓▓▓0
0▓░░▓▓▓▓▓▓▓░░░░░░░▓0
0▓░░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓0
0▓░░░░░░░▓00000▓░░▓0
0▓░░░░░░░▓00000▓░░▓0
0▓░░░░░░░▓▓000▓▓░░▓0
0▓░░░░░░░▒▓▓▓▓▓▒░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓0

0▓▓▓▓▓▓▓▓▓▓▓▓▓▓00000
0▓░░░░░░░░░░░░▓00000
0▓░░▒▓▓▓▓▓▒░░░▓▓0000
0▓░░▓▓▓▓▓▓▓░░░▒▓▓▓▓0
0▓░░▓▓▓▓▓▓▓░░░░░░░▓0
0▓░░▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓0
0▓░░░░░░░▓00000▓░░▓0
0▓░░░░░░░▓00000▓░░▓0
0▓░░░░░░░▓▓000▓▓░░▓0
0▓░░░░░░░▒▓▓▓▓▓▒░░▓0
0▓░░░░░░░░░░░░░░░░▓0
0▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓0

]]></output>
            </test-case>
            <test-case id="1-1064" name="CellsMapping_ValidMapping" fullname="PlayersWorlds.Maps.Maze2DRendererTest.CellsMapping_ValidMapping" methodname="CellsMapping_ValidMapping" classname="PlayersWorlds.Maps.Maze2DRendererTest" runstate="Runnable" seed="1150132274" result="Passed" start-time="2024-02-22T15:42:24.4331930Z" end-time="2024-02-22T15:42:24.4378460Z" duration="0.004654" asserts="45" />
            <test-case id="1-1061" name="Maze2DStringBoxRenderer_CanConvertToAscii" fullname="PlayersWorlds.Maps.Maze2DRendererTest.Maze2DStringBoxRenderer_CanConvertToAscii" methodname="Maze2DStringBoxRenderer_CanConvertToAscii" classname="PlayersWorlds.Maps.Maze2DRendererTest" runstate="Runnable" seed="771887149" result="Passed" start-time="2024-02-22T15:42:24.4378580Z" end-time="2024-02-22T15:42:24.4380830Z" duration="0.000225" asserts="1">
              <output><![CDATA[┌───────────┐    
│           │    
│   ┌───┐   └───┐
│   │   │       │
│   └───┼───┬───┤
│       │   │   │
│   ┼   └───┘   │
│               │
└───────────────┘

]]></output>
            </test-case>
            <test-case id="1-1062" name="Maze2DStringBoxRenderer_CanConvertToAsciiWithData" fullname="PlayersWorlds.Maps.Maze2DRendererTest.Maze2DStringBoxRenderer_CanConvertToAsciiWithData" methodname="Maze2DStringBoxRenderer_CanConvertToAsciiWithData" classname="PlayersWorlds.Maps.Maze2DRendererTest" runstate="Runnable" seed="1179653042" result="Passed" start-time="2024-02-22T15:42:24.4380900Z" end-time="2024-02-22T15:42:24.4383990Z" duration="0.000310" asserts="1">
              <output><![CDATA[┌───────────┐    
│ 4   3   2 │    
│   ┌───┐   └───┐
│ 5 │   │ 1   0 │
│   └───┼───┬───┤
│ 6     │   │ b │
│   ┼   └───┘   │
│ 7   8   9   a │
└───────────────┘

]]></output>
            </test-case>
            <test-case id="1-1063" name="Maze2DToMap2DConverter_ThrowsIfInvalidOptions" fullname="PlayersWorlds.Maps.Maze2DRendererTest.Maze2DToMap2DConverter_ThrowsIfInvalidOptions" methodname="Maze2DToMap2DConverter_ThrowsIfInvalidOptions" classname="PlayersWorlds.Maps.Maze2DRendererTest" runstate="Runnable" seed="1010558602" result="Passed" start-time="2024-02-22T15:42:24.4384070Z" end-time="2024-02-22T15:42:24.4389200Z" duration="0.000513" asserts="6" />
          </test-suite>
          <test-suite type="TestFixture" id="1-1023" name="NArrayTest" fullname="PlayersWorlds.Maps.NArrayTest" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" testcasecount="24" result="Passed" start-time="2024-02-22T15:42:24.4389420Z" end-time="2024-02-22T15:42:24.4526670Z" duration="0.013725" total="24" passed="24" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="83">
            <test-case id="1-1043" name="CellsAt_AnyCellAt2x2" fullname="PlayersWorlds.Maps.NArrayTest.CellsAt_AnyCellAt2x2" methodname="CellsAt_AnyCellAt2x2" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="83094406" result="Passed" start-time="2024-02-22T15:42:24.4389890Z" end-time="2024-02-22T15:42:24.4400820Z" duration="0.001092" asserts="5" />
            <test-case id="1-1046" name="CellsAt_AnyCellAtCloseEdge2x2" fullname="PlayersWorlds.Maps.NArrayTest.CellsAt_AnyCellAtCloseEdge2x2" methodname="CellsAt_AnyCellAtCloseEdge2x2" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1761707569" result="Passed" start-time="2024-02-22T15:42:24.4400900Z" end-time="2024-02-22T15:42:24.4404330Z" duration="0.000344" asserts="5" />
            <test-case id="1-1047" name="CellsAt_AnyCellAtZeroSize" fullname="PlayersWorlds.Maps.NArrayTest.CellsAt_AnyCellAtZeroSize" methodname="CellsAt_AnyCellAtZeroSize" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1155104221" result="Passed" start-time="2024-02-22T15:42:24.4404410Z" end-time="2024-02-22T15:42:24.4410970Z" duration="0.000657" asserts="1" />
            <test-case id="1-1024" name="NArray_Constructor_CreatesCorrectSize" fullname="PlayersWorlds.Maps.NArrayTest.NArray_Constructor_CreatesCorrectSize" methodname="NArray_Constructor_CreatesCorrectSize" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1461777419" result="Passed" start-time="2024-02-22T15:42:24.4411050Z" end-time="2024-02-22T15:42:24.4414560Z" duration="0.000351" asserts="2" />
            <test-case id="1-1025" name="NArray_Constructor_SetsInitialValues" fullname="PlayersWorlds.Maps.NArrayTest.NArray_Constructor_SetsInitialValues" methodname="NArray_Constructor_SetsInitialValues" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1311062598" result="Passed" start-time="2024-02-22T15:42:24.4414630Z" end-time="2024-02-22T15:42:24.4422770Z" duration="0.000814" asserts="4" />
            <test-case id="1-1026" name="NArray_Constructor_ThrowsOnInvalidSize" fullname="PlayersWorlds.Maps.NArrayTest.NArray_Constructor_ThrowsOnInvalidSize" methodname="NArray_Constructor_ThrowsOnInvalidSize" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1250411540" result="Passed" start-time="2024-02-22T15:42:24.4422850Z" end-time="2024-02-22T15:42:24.4424870Z" duration="0.000203" asserts="1" />
            <test-case id="1-1027" name="NArray_Indexing_GetValuesCorrectly" fullname="PlayersWorlds.Maps.NArrayTest.NArray_Indexing_GetValuesCorrectly" methodname="NArray_Indexing_GetValuesCorrectly" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="746100293" result="Passed" start-time="2024-02-22T15:42:24.4424940Z" end-time="2024-02-22T15:42:24.4427270Z" duration="0.000233" asserts="1" />
            <test-case id="1-1029" name="NArray_Indexing_SetsValuesCorrectly" fullname="PlayersWorlds.Maps.NArrayTest.NArray_Indexing_SetsValuesCorrectly" methodname="NArray_Indexing_SetsValuesCorrectly" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="96399927" result="Passed" start-time="2024-02-22T15:42:24.4427350Z" end-time="2024-02-22T15:42:24.4428760Z" duration="0.000141" asserts="1" />
            <test-case id="1-1028" name="NArray_Indexing_ThrowsOnOutOfBounds" fullname="PlayersWorlds.Maps.NArrayTest.NArray_Indexing_ThrowsOnOutOfBounds" methodname="NArray_Indexing_ThrowsOnOutOfBounds" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1020117139" result="Passed" start-time="2024-02-22T15:42:24.4428820Z" end-time="2024-02-22T15:42:24.4435800Z" duration="0.000698" asserts="4" />
            <test-case id="1-1040" name="NArray_Iterate_FourCellsFar" fullname="PlayersWorlds.Maps.NArrayTest.NArray_Iterate_FourCellsFar" methodname="NArray_Iterate_FourCellsFar" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1997479589" result="Passed" start-time="2024-02-22T15:42:24.4435880Z" end-time="2024-02-22T15:42:24.4448510Z" duration="0.001264" asserts="5" />
            <test-case id="1-1037" name="NArray_Iterate_OneCell" fullname="PlayersWorlds.Maps.NArrayTest.NArray_Iterate_OneCell" methodname="NArray_Iterate_OneCell" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="813449691" result="Passed" start-time="2024-02-22T15:42:24.4448610Z" end-time="2024-02-22T15:42:24.4451500Z" duration="0.000289" asserts="2" />
            <test-case id="1-1041" name="NArray_Iterate_OutOfBounds" fullname="PlayersWorlds.Maps.NArrayTest.NArray_Iterate_OutOfBounds" methodname="NArray_Iterate_OutOfBounds" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="170398828" result="Passed" start-time="2024-02-22T15:42:24.4451580Z" end-time="2024-02-22T15:42:24.4455690Z" duration="0.000411" asserts="4" />
            <test-case id="1-1030" name="NArray_Iterate_TraversesAllCells" fullname="PlayersWorlds.Maps.NArrayTest.NArray_Iterate_TraversesAllCells" methodname="NArray_Iterate_TraversesAllCells" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="50831646" result="Passed" start-time="2024-02-22T15:42:24.4455760Z" end-time="2024-02-22T15:42:24.4460370Z" duration="0.000460" asserts="13" />
            <test-case id="1-1039" name="NArray_Iterate_TreeByTwo" fullname="PlayersWorlds.Maps.NArrayTest.NArray_Iterate_TreeByTwo" methodname="NArray_Iterate_TreeByTwo" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="304987405" result="Passed" start-time="2024-02-22T15:42:24.4460450Z" end-time="2024-02-22T15:42:24.4465120Z" duration="0.000468" asserts="7" />
            <test-case id="1-1038" name="NArray_Iterate_TwoCells" fullname="PlayersWorlds.Maps.NArrayTest.NArray_Iterate_TwoCells" methodname="NArray_Iterate_TwoCells" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1422184365" result="Passed" start-time="2024-02-22T15:42:24.4465190Z" end-time="2024-02-22T15:42:24.4470530Z" duration="0.000533" asserts="3" />
            <test-case id="1-1035" name="NArray_IterateAdjacentCells_ReturnsCorrectNeighbors" fullname="PlayersWorlds.Maps.NArrayTest.NArray_IterateAdjacentCells_ReturnsCorrectNeighbors" methodname="NArray_IterateAdjacentCells_ReturnsCorrectNeighbors" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1701913944" result="Passed" start-time="2024-02-22T15:42:24.4470600Z" end-time="2024-02-22T15:42:24.4487290Z" duration="0.001669" asserts="6" />
            <test-case id="1-1036" name="NArray_IterateAdjacentCells_ReturnsCorrectNeighborsIn4DSpace" fullname="PlayersWorlds.Maps.NArrayTest.NArray_IterateAdjacentCells_ReturnsCorrectNeighborsIn4DSpace" methodname="NArray_IterateAdjacentCells_ReturnsCorrectNeighborsIn4DSpace" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="2099420299" result="Passed" start-time="2024-02-22T15:42:24.4487400Z" end-time="2024-02-22T15:42:24.4492550Z" duration="0.000515" asserts="6" />
            <test-case id="1-1044" name="NArray_IterateIntersection_AnyCellAtEdge1x1" fullname="PlayersWorlds.Maps.NArrayTest.NArray_IterateIntersection_AnyCellAtEdge1x1" methodname="NArray_IterateIntersection_AnyCellAtEdge1x1" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="587911432" result="Passed" start-time="2024-02-22T15:42:24.4492650Z" end-time="2024-02-22T15:42:24.4494840Z" duration="0.000219" asserts="2" />
            <test-case id="1-1045" name="NArray_IterateIntersection_AnyCellAtFarEdge2x2" fullname="PlayersWorlds.Maps.NArrayTest.NArray_IterateIntersection_AnyCellAtFarEdge2x2" methodname="NArray_IterateIntersection_AnyCellAtFarEdge2x2" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1575187212" result="Passed" start-time="2024-02-22T15:42:24.4494910Z" end-time="2024-02-22T15:42:24.4496950Z" duration="0.000204" asserts="2" />
            <test-case id="1-1042" name="NArray_IterateIntersection_AnyCellAtP1x1" fullname="PlayersWorlds.Maps.NArrayTest.NArray_IterateIntersection_AnyCellAtP1x1" methodname="NArray_IterateIntersection_AnyCellAtP1x1" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1300842787" result="Passed" start-time="2024-02-22T15:42:24.4497020Z" end-time="2024-02-22T15:42:24.4499310Z" duration="0.000229" asserts="2" />
            <test-case id="1-1034" name="NArray_IterateIntersection_HandlesOverlap" fullname="PlayersWorlds.Maps.NArrayTest.NArray_IterateIntersection_HandlesOverlap" methodname="NArray_IterateIntersection_HandlesOverlap" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1779634475" result="Passed" start-time="2024-02-22T15:42:24.4499390Z" end-time="2024-02-22T15:42:24.4510810Z" duration="0.001142" asserts="1" />
            <test-case id="1-1033" name="NArray_IterateRegion_HandlesDimensionsMismatch" fullname="PlayersWorlds.Maps.NArrayTest.NArray_IterateRegion_HandlesDimensionsMismatch" methodname="NArray_IterateRegion_HandlesDimensionsMismatch" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="298729438" result="Passed" start-time="2024-02-22T15:42:24.4510880Z" end-time="2024-02-22T15:42:24.4520000Z" duration="0.000912" asserts="3" />
            <test-case id="1-1032" name="NArray_IterateRegion_HandlesOutOfBounds" fullname="PlayersWorlds.Maps.NArrayTest.NArray_IterateRegion_HandlesOutOfBounds" methodname="NArray_IterateRegion_HandlesOutOfBounds" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1795569209" result="Passed" start-time="2024-02-22T15:42:24.4520080Z" end-time="2024-02-22T15:42:24.4524250Z" duration="0.000417" asserts="2" />
            <test-case id="1-1031" name="NArray_IterateRegion_ReturnsCorrectCells" fullname="PlayersWorlds.Maps.NArrayTest.NArray_IterateRegion_ReturnsCorrectCells" methodname="NArray_IterateRegion_ReturnsCorrectCells" classname="PlayersWorlds.Maps.NArrayTest" runstate="Runnable" seed="1748089950" result="Passed" start-time="2024-02-22T15:42:24.4524320Z" end-time="2024-02-22T15:42:24.4526560Z" duration="0.000224" asserts="1" />
          </test-suite>
          <test-suite type="TestFixture" id="1-1048" name="OptionalTest" fullname="PlayersWorlds.Maps.OptionalTest" classname="PlayersWorlds.Maps.OptionalTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2024-02-22T15:42:24.4526790Z" end-time="2024-02-22T15:42:24.4542260Z" duration="0.001547" total="7" passed="7" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="25">
            <test-case id="1-1054" name="Optional_CanBeCastToT" fullname="PlayersWorlds.Maps.OptionalTest.Optional_CanBeCastToT" methodname="Optional_CanBeCastToT" classname="PlayersWorlds.Maps.OptionalTest" runstate="Runnable" seed="24308741" result="Passed" start-time="2024-02-22T15:42:24.4527180Z" end-time="2024-02-22T15:42:24.4528400Z" duration="0.000123" asserts="1" />
            <test-case id="1-1049" name="Optional_Equality" fullname="PlayersWorlds.Maps.OptionalTest.Optional_Equality" methodname="Optional_Equality" classname="PlayersWorlds.Maps.OptionalTest" runstate="Runnable" seed="247125991" result="Passed" start-time="2024-02-22T15:42:24.4528470Z" end-time="2024-02-22T15:42:24.4530350Z" duration="0.000188" asserts="3" />
            <test-case id="1-1051" name="Optional_Equals" fullname="PlayersWorlds.Maps.OptionalTest.Optional_Equals" methodname="Optional_Equals" classname="PlayersWorlds.Maps.OptionalTest" runstate="Runnable" seed="207169968" result="Passed" start-time="2024-02-22T15:42:24.4530420Z" end-time="2024-02-22T15:42:24.4533370Z" duration="0.000295" asserts="5" />
            <test-case id="1-1053" name="Optional_GetHashCode" fullname="PlayersWorlds.Maps.OptionalTest.Optional_GetHashCode" methodname="Optional_GetHashCode" classname="PlayersWorlds.Maps.OptionalTest" runstate="Runnable" seed="1518413847" result="Passed" start-time="2024-02-22T15:42:24.4533450Z" end-time="2024-02-22T15:42:24.4535450Z" duration="0.000201" asserts="3" />
            <test-case id="1-1052" name="Optional_Null" fullname="PlayersWorlds.Maps.OptionalTest.Optional_Null" methodname="Optional_Null" classname="PlayersWorlds.Maps.OptionalTest" runstate="Runnable" seed="1995222697" result="Passed" start-time="2024-02-22T15:42:24.4535530Z" end-time="2024-02-22T15:42:24.4539210Z" duration="0.000368" asserts="9" />
            <test-case id="1-1050" name="Optional_ThrowsIfNoValue" fullname="PlayersWorlds.Maps.OptionalTest.Optional_ThrowsIfNoValue" methodname="Optional_ThrowsIfNoValue" classname="PlayersWorlds.Maps.OptionalTest" runstate="Runnable" seed="120177340" result="Passed" start-time="2024-02-22T15:42:24.4539280Z" end-time="2024-02-22T15:42:24.4540660Z" duration="0.000138" asserts="2" />
            <test-case id="1-1055" name="Optional_ToStringShowsValue" fullname="PlayersWorlds.Maps.OptionalTest.Optional_ToStringShowsValue" methodname="Optional_ToStringShowsValue" classname="PlayersWorlds.Maps.OptionalTest" runstate="Runnable" seed="413185785" result="Passed" start-time="2024-02-22T15:42:24.4540720Z" end-time="2024-02-22T15:42:24.4542170Z" duration="0.000145" asserts="2" />
          </test-suite>
          <test-suite type="TestSuite" id="1-2045" name="Renderers" fullname="PlayersWorlds.Maps.Renderers" runstate="Runnable" testcasecount="1" result="Passed" start-time="2024-02-22T15:42:09.2516290Z" end-time="2024-02-22T15:42:24.4549580Z" duration="15.203329" total="1" passed="1" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="1">
            <test-suite type="TestFixture" id="1-1107" name="Map2DStringRendererTest" fullname="PlayersWorlds.Maps.Renderers.Map2DStringRendererTest" classname="PlayersWorlds.Maps.Renderers.Map2DStringRendererTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2024-02-22T15:42:24.4542370Z" end-time="2024-02-22T15:42:24.4549520Z" duration="0.000715" total="1" passed="1" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="1">
              <test-case id="1-1108" name="TestRender" fullname="PlayersWorlds.Maps.Renderers.Map2DStringRendererTest.TestRender" methodname="TestRender" classname="PlayersWorlds.Maps.Renderers.Map2DStringRendererTest" runstate="Runnable" seed="1141780623" result="Passed" start-time="2024-02-22T15:42:24.4542760Z" end-time="2024-02-22T15:42:24.4549410Z" duration="0.000666" asserts="1">
                <output><![CDATA[▓▓▓▓▓
▓░░░▓
▓░▒░▓
▓░░░▓
▓▓▓▓▓

]]></output>
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="1-1065" name="VectorDTest" fullname="PlayersWorlds.Maps.VectorDTest" classname="PlayersWorlds.Maps.VectorDTest" runstate="Runnable" testcasecount="11" result="Passed" start-time="2024-02-22T15:42:24.4549670Z" end-time="2024-02-22T15:42:24.4585700Z" duration="0.003603" total="11" passed="11" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="33">
            <test-case id="1-1073" name="CanAddAndSubtract" fullname="PlayersWorlds.Maps.VectorDTest.CanAddAndSubtract" methodname="CanAddAndSubtract" classname="PlayersWorlds.Maps.VectorDTest" runstate="Runnable" seed="1734321193" result="Passed" start-time="2024-02-22T15:42:24.4550070Z" end-time="2024-02-22T15:42:24.4552900Z" duration="0.000283" asserts="5" />
            <test-case id="1-1074" name="ConstructorChecksArguments" fullname="PlayersWorlds.Maps.VectorDTest.ConstructorChecksArguments" methodname="ConstructorChecksArguments" classname="PlayersWorlds.Maps.VectorDTest" runstate="Runnable" seed="118563811" result="Passed" start-time="2024-02-22T15:42:24.4552970Z" end-time="2024-02-22T15:42:24.4553950Z" duration="0.000098" asserts="1" />
            <test-case id="1-1067" name="EqualityIsCheckedByValue" fullname="PlayersWorlds.Maps.VectorDTest.EqualityIsCheckedByValue" methodname="EqualityIsCheckedByValue" classname="PlayersWorlds.Maps.VectorDTest" runstate="Runnable" seed="587170273" result="Passed" start-time="2024-02-22T15:42:24.4554010Z" end-time="2024-02-22T15:42:24.4555950Z" duration="0.000193" asserts="4" />
            <test-case id="1-1068" name="GetHashCodeIsDerivedFromValue" fullname="PlayersWorlds.Maps.VectorDTest.GetHashCodeIsDerivedFromValue" methodname="GetHashCodeIsDerivedFromValue" classname="PlayersWorlds.Maps.VectorDTest" runstate="Runnable" seed="1744405611" result="Passed" start-time="2024-02-22T15:42:24.4556010Z" end-time="2024-02-22T15:42:24.4558260Z" duration="0.000225" asserts="1" />
            <test-case id="1-1071" name="InitializedAsNull" fullname="PlayersWorlds.Maps.VectorDTest.InitializedAsNull" methodname="InitializedAsNull" classname="PlayersWorlds.Maps.VectorDTest" runstate="Runnable" seed="1342024486" result="Passed" start-time="2024-02-22T15:42:24.4558340Z" end-time="2024-02-22T15:42:24.4559370Z" duration="0.000104" asserts="1" />
            <test-case id="1-1070" name="InitializedEmpty" fullname="PlayersWorlds.Maps.VectorDTest.InitializedEmpty" methodname="InitializedEmpty" classname="PlayersWorlds.Maps.VectorDTest" runstate="Runnable" seed="1882255324" result="Passed" start-time="2024-02-22T15:42:24.4559430Z" end-time="2024-02-22T15:42:24.4561810Z" duration="0.000238" asserts="4" />
            <test-case id="1-1066" name="IsInitialized" fullname="PlayersWorlds.Maps.VectorDTest.IsInitialized" methodname="IsInitialized" classname="PlayersWorlds.Maps.VectorDTest" runstate="Runnable" seed="707905543" result="Passed" start-time="2024-02-22T15:42:24.4561880Z" end-time="2024-02-22T15:42:24.4563270Z" duration="0.000139" asserts="2" />
            <test-case id="1-1072" name="IsZero" fullname="PlayersWorlds.Maps.VectorDTest.IsZero" methodname="IsZero" classname="PlayersWorlds.Maps.VectorDTest" runstate="Runnable" seed="1618381211" result="Passed" start-time="2024-02-22T15:42:24.4563330Z" end-time="2024-02-22T15:42:24.4565750Z" duration="0.000242" asserts="3" />
            <test-case id="1-1075" name="SnappedForce" fullname="PlayersWorlds.Maps.VectorDTest.SnappedForce" methodname="SnappedForce" classname="PlayersWorlds.Maps.VectorDTest" runstate="Runnable" seed="2030644185" result="Passed" start-time="2024-02-22T15:42:24.4565830Z" end-time="2024-02-22T15:42:24.4570830Z" duration="0.000500" asserts="9" />
            <test-case id="1-1069" name="ToStringFormat" fullname="PlayersWorlds.Maps.VectorDTest.ToStringFormat" methodname="ToStringFormat" classname="PlayersWorlds.Maps.VectorDTest" runstate="Runnable" seed="1202421520" result="Passed" start-time="2024-02-22T15:42:24.4570900Z" end-time="2024-02-22T15:42:24.4581520Z" duration="0.001062" asserts="1" />
            <test-case id="1-1076" name="VectorD_Parse" fullname="PlayersWorlds.Maps.VectorDTest.VectorD_Parse" methodname="VectorD_Parse" classname="PlayersWorlds.Maps.VectorDTest" runstate="Runnable" seed="1993160676" result="Passed" start-time="2024-02-22T15:42:24.4581600Z" end-time="2024-02-22T15:42:24.4585600Z" duration="0.000400" asserts="2" />
          </test-suite>
          <test-suite type="TestFixture" id="1-1077" name="VectorTest" fullname="PlayersWorlds.Maps.VectorTest" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" testcasecount="29" result="Passed" start-time="2024-02-22T15:42:24.4585810Z" end-time="2024-02-22T15:42:24.4652310Z" duration="0.006649" total="29" passed="29" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="229">
            <test-case id="1-1094" name="FitsInto" fullname="PlayersWorlds.Maps.VectorTest.FitsInto" methodname="FitsInto" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="199401901" result="Passed" start-time="2024-02-22T15:42:24.4586220Z" end-time="2024-02-22T15:42:24.4587520Z" duration="0.000130" asserts="3" />
            <test-case id="1-1097" name="FromIndex_Matches_FromIndex" fullname="PlayersWorlds.Maps.VectorTest.FromIndex_Matches_FromIndex" methodname="FromIndex_Matches_FromIndex" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="27420947" result="Passed" start-time="2024-02-22T15:42:24.4587590Z" end-time="2024-02-22T15:42:24.4588530Z" duration="0.000094" asserts="1" />
            <test-case id="1-1105" name="FromIndex_ShouldThrowException_DimensionMismatch" fullname="PlayersWorlds.Maps.VectorTest.FromIndex_ShouldThrowException_DimensionMismatch" methodname="FromIndex_ShouldThrowException_DimensionMismatch" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="780140057" result="Passed" start-time="2024-02-22T15:42:24.4588590Z" end-time="2024-02-22T15:42:24.4592160Z" duration="0.000357" asserts="1" />
            <test-case id="1-1095" name="IsIn" fullname="PlayersWorlds.Maps.VectorTest.IsIn" methodname="IsIn" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="926703832" result="Passed" start-time="2024-02-22T15:42:24.4592230Z" end-time="2024-02-22T15:42:24.4594690Z" duration="0.000246" asserts="7" />
            <test-case id="1-1106" name="NorthEastComparer_ComparesCorrectly" fullname="PlayersWorlds.Maps.VectorTest.NorthEastComparer_ComparesCorrectly" methodname="NorthEastComparer_ComparesCorrectly" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1227584627" result="Passed" start-time="2024-02-22T15:42:24.4594750Z" end-time="2024-02-22T15:42:24.4603150Z" duration="0.000840" asserts="1" />
            <test-case id="1-1079" name="Size_NotInitialized" fullname="PlayersWorlds.Maps.VectorTest.Size_NotInitialized" methodname="Size_NotInitialized" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="907885737" result="Passed" start-time="2024-02-22T15:42:24.4603230Z" end-time="2024-02-22T15:42:24.4604970Z" duration="0.000174" asserts="2" />
            <test-case id="1-1101" name="ToIndex_FromIndex_RoundTripConversion" fullname="PlayersWorlds.Maps.VectorTest.ToIndex_FromIndex_RoundTripConversion" methodname="ToIndex_FromIndex_RoundTripConversion" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1672488566" result="Passed" start-time="2024-02-22T15:42:24.4605040Z" end-time="2024-02-22T15:42:24.4609820Z" duration="0.000479" asserts="150" />
            <test-case id="1-1102" name="ToIndex_FromIndex_Valid5D" fullname="PlayersWorlds.Maps.VectorTest.ToIndex_FromIndex_Valid5D" methodname="ToIndex_FromIndex_Valid5D" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1967090128" result="Passed" start-time="2024-02-22T15:42:24.4609890Z" end-time="2024-02-22T15:42:24.4621170Z" duration="0.001129" asserts="13" />
            <test-case id="1-1096" name="ToIndex_Matches_ToIndex" fullname="PlayersWorlds.Maps.VectorTest.ToIndex_Matches_ToIndex" methodname="ToIndex_Matches_ToIndex" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="248631773" result="Passed" start-time="2024-02-22T15:42:24.4621260Z" end-time="2024-02-22T15:42:24.4622140Z" duration="0.000088" asserts="1" />
            <test-case id="1-1098" name="ToIndex_ShouldCalculateCorrectIndex_1D" fullname="PlayersWorlds.Maps.VectorTest.ToIndex_ShouldCalculateCorrectIndex_1D" methodname="ToIndex_ShouldCalculateCorrectIndex_1D" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="897591229" result="Passed" start-time="2024-02-22T15:42:24.4622200Z" end-time="2024-02-22T15:42:24.4623080Z" duration="0.000088" asserts="2" />
            <test-case id="1-1099" name="ToIndex_ShouldCalculateCorrectIndex_2D" fullname="PlayersWorlds.Maps.VectorTest.ToIndex_ShouldCalculateCorrectIndex_2D" methodname="ToIndex_ShouldCalculateCorrectIndex_2D" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="973742913" result="Passed" start-time="2024-02-22T15:42:24.4623140Z" end-time="2024-02-22T15:42:24.4623960Z" duration="0.000082" asserts="2" />
            <test-case id="1-1100" name="ToIndex_ShouldCalculateCorrectIndex_3D" fullname="PlayersWorlds.Maps.VectorTest.ToIndex_ShouldCalculateCorrectIndex_3D" methodname="ToIndex_ShouldCalculateCorrectIndex_3D" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="489294846" result="Passed" start-time="2024-02-22T15:42:24.4624010Z" end-time="2024-02-22T15:42:24.4624870Z" duration="0.000085" asserts="2" />
            <test-case id="1-1104" name="ToIndex_ShouldThrowException_DimensionMismatch" fullname="PlayersWorlds.Maps.VectorTest.ToIndex_ShouldThrowException_DimensionMismatch" methodname="ToIndex_ShouldThrowException_DimensionMismatch" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="347244975" result="Passed" start-time="2024-02-22T15:42:24.4624930Z" end-time="2024-02-22T15:42:24.4626570Z" duration="0.000165" asserts="1" />
            <test-case id="1-1103" name="ToIndex_ShouldThrowException_DimensionOverflow" fullname="PlayersWorlds.Maps.VectorTest.ToIndex_ShouldThrowException_DimensionOverflow" methodname="ToIndex_ShouldThrowException_DimensionOverflow" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1390178430" result="Passed" start-time="2024-02-22T15:42:24.4626640Z" end-time="2024-02-22T15:42:24.4628290Z" duration="0.000165" asserts="1" />
            <test-case id="1-1087" name="Vector_CanAddAndSubtract" fullname="PlayersWorlds.Maps.VectorTest.Vector_CanAddAndSubtract" methodname="Vector_CanAddAndSubtract" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1058027600" result="Passed" start-time="2024-02-22T15:42:24.4628360Z" end-time="2024-02-22T15:42:24.4632090Z" duration="0.000373" asserts="6" />
            <test-case id="1-1088" name="Vector_ConstructorChecksArguments" fullname="PlayersWorlds.Maps.VectorTest.Vector_ConstructorChecksArguments" methodname="Vector_ConstructorChecksArguments" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1027070245" result="Passed" start-time="2024-02-22T15:42:24.4632160Z" end-time="2024-02-22T15:42:24.4633060Z" duration="0.000090" asserts="1" />
            <test-case id="1-1085" name="Vector_EmptyIsEmpty" fullname="PlayersWorlds.Maps.VectorTest.Vector_EmptyIsEmpty" methodname="Vector_EmptyIsEmpty" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1858552876" result="Passed" start-time="2024-02-22T15:42:24.4633130Z" end-time="2024-02-22T15:42:24.4633740Z" duration="0.000061" asserts="1" />
            <test-case id="1-1084" name="Vector_EmptyVectorIsEmpty" fullname="PlayersWorlds.Maps.VectorTest.Vector_EmptyVectorIsEmpty" methodname="Vector_EmptyVectorIsEmpty" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1621428173" result="Passed" start-time="2024-02-22T15:42:24.4633800Z" end-time="2024-02-22T15:42:24.4634360Z" duration="0.000056" asserts="1" />
            <test-case id="1-1080" name="Vector_EqualityIsCheckedByValue" fullname="PlayersWorlds.Maps.VectorTest.Vector_EqualityIsCheckedByValue" methodname="Vector_EqualityIsCheckedByValue" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="587112472" result="Passed" start-time="2024-02-22T15:42:24.4634410Z" end-time="2024-02-22T15:42:24.4636960Z" duration="0.000255" asserts="5" />
            <test-case id="1-1092" name="Vector_FromIndex" fullname="PlayersWorlds.Maps.VectorTest.Vector_FromIndex" methodname="Vector_FromIndex" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1481167706" result="Passed" start-time="2024-02-22T15:42:24.4637030Z" end-time="2024-02-22T15:42:24.4638050Z" duration="0.000102" asserts="2" />
            <test-case id="1-1081" name="Vector_GetHashCodeIsDerivedFromValue" fullname="PlayersWorlds.Maps.VectorTest.Vector_GetHashCodeIsDerivedFromValue" methodname="Vector_GetHashCodeIsDerivedFromValue" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="396775994" result="Passed" start-time="2024-02-22T15:42:24.4638110Z" end-time="2024-02-22T15:42:24.4640270Z" duration="0.000216" asserts="2" />
            <test-case id="1-1078" name="Vector_IsInitialized" fullname="PlayersWorlds.Maps.VectorTest.Vector_IsInitialized" methodname="Vector_IsInitialized" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1220061987" result="Passed" start-time="2024-02-22T15:42:24.4640340Z" end-time="2024-02-22T15:42:24.4641020Z" duration="0.000068" asserts="2" />
            <test-case id="1-1086" name="Vector_NotEqualToNull" fullname="PlayersWorlds.Maps.VectorTest.Vector_NotEqualToNull" methodname="Vector_NotEqualToNull" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="52577654" result="Passed" start-time="2024-02-22T15:42:24.4641080Z" end-time="2024-02-22T15:42:24.4642270Z" duration="0.000119" asserts="3" />
            <test-case id="1-1090" name="Vector_SnappedForce" fullname="PlayersWorlds.Maps.VectorTest.Vector_SnappedForce" methodname="Vector_SnappedForce" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="899418801" result="Passed" start-time="2024-02-22T15:42:24.4642330Z" end-time="2024-02-22T15:42:24.4645850Z" duration="0.000352" asserts="9" />
            <test-case id="1-1089" name="Vector_ThrowsIfNotAValidSize" fullname="PlayersWorlds.Maps.VectorTest.Vector_ThrowsIfNotAValidSize" methodname="Vector_ThrowsIfNotAValidSize" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="2132534737" result="Passed" start-time="2024-02-22T15:42:24.4645920Z" end-time="2024-02-22T15:42:24.4648110Z" duration="0.000219" asserts="3" />
            <test-case id="1-1091" name="Vector_ToIndex" fullname="PlayersWorlds.Maps.VectorTest.Vector_ToIndex" methodname="Vector_ToIndex" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1064830007" result="Passed" start-time="2024-02-22T15:42:24.4648170Z" end-time="2024-02-22T15:42:24.4649800Z" duration="0.000163" asserts="3" />
            <test-case id="1-1082" name="Vector_ToStringFormat" fullname="PlayersWorlds.Maps.VectorTest.Vector_ToStringFormat" methodname="Vector_ToStringFormat" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1927877119" result="Passed" start-time="2024-02-22T15:42:24.4649860Z" end-time="2024-02-22T15:42:24.4650650Z" duration="0.000079" asserts="2" />
            <test-case id="1-1083" name="Vector_ZeroVectorIsNotEmpty" fullname="PlayersWorlds.Maps.VectorTest.Vector_ZeroVectorIsNotEmpty" methodname="Vector_ZeroVectorIsNotEmpty" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="541198264" result="Passed" start-time="2024-02-22T15:42:24.4650710Z" end-time="2024-02-22T15:42:24.4651460Z" duration="0.000076" asserts="1" />
            <test-case id="1-1093" name="VectorD_Parse" fullname="PlayersWorlds.Maps.VectorTest.VectorD_Parse" methodname="VectorD_Parse" classname="PlayersWorlds.Maps.VectorTest" runstate="Runnable" seed="1876425585" result="Passed" start-time="2024-02-22T15:42:24.4651520Z" end-time="2024-02-22T15:42:24.4652210Z" duration="0.000069" asserts="1" />
          </test-suite>
        </test-suite>
      </test-suite>
      <test-suite type="TestFixture" id="1-1000" name="RandomAreaGeneratorTest" fullname="RandomAreaGeneratorTest" classname="RandomAreaGeneratorTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2024-02-22T15:42:24.4652510Z" end-time="2024-02-22T15:42:24.4736000Z" duration="0.008348" total="2" passed="2" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="3042">
        <test-case id="1-1001" name="ZoneGenerator_CanGenerateZones" fullname="RandomAreaGeneratorTest.ZoneGenerator_CanGenerateZones" methodname="ZoneGenerator_CanGenerateZones" classname="RandomAreaGeneratorTest" runstate="Runnable" seed="1804668157" result="Passed" start-time="2024-02-22T15:42:24.4652890Z" end-time="2024-02-22T15:42:24.4726730Z" duration="0.007384" asserts="3006" />
        <test-case id="1-1002" name="ZoneGenerator_CustomSettings" fullname="RandomAreaGeneratorTest.ZoneGenerator_CustomSettings" methodname="ZoneGenerator_CustomSettings" classname="RandomAreaGeneratorTest" runstate="Runnable" seed="570273208" result="Passed" start-time="2024-02-22T15:42:24.4726810Z" end-time="2024-02-22T15:42:24.4735890Z" duration="0.000908" asserts="36" />
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>