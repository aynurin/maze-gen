<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-run id="2" testcasecount="63" result="Passed" total="63" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0" engine-version="3.4.1.0" clr-version="4.0.30319.42000" start-time="2023-10-29 14:26:57Z" end-time="2023-10-29 14:26:57Z" duration="0.233446">
  <command-line><![CDATA[/usr/lib/nunit3/nunit3-console.exe --debug build/Debug/tests/tests.dll]]></command-line>
  <test-suite type="Assembly" id="1-1075" name="/home/data/repos/github.com/aynurin/maze-gen/build/Debug/tests/tests.dll" fullname="/home/data/repos/github.com/aynurin/maze-gen/build/Debug/tests/tests.dll" runstate="Runnable" testcasecount="63" result="Passed" duration="0.158741" total="63" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
    <properties>
      <property name="_PID" value="235056" />
      <property name="_APPDOMAIN" value="test-domain-" />
    </properties>
    <test-suite type="Namespace" id="1-1076" name="Nour" fullname="Nour" runstate="Runnable" testcasecount="61" result="Passed" duration="0.129776" total="61" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
      <test-suite type="Namespace" id="1-1077" name="Play" fullname="Nour.Play" runstate="Runnable" testcasecount="61" result="Passed" duration="0.129463" total="61" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
        <test-suite type="TestFixture" id="1-1021" name="CellTest" fullname="Nour.Play.CellTest" runstate="Runnable" testcasecount="3" result="Passed" duration="0.027966" total="3" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
          <test-case id="1-1024" name="Map2D_DoubleLinkingThrowsError" fullname="Nour.Play.CellTest.Map2D_DoubleLinkingThrowsError" runstate="Runnable" result="Passed" duration="0.012955" asserts="1" />
          <test-case id="1-1022" name="Map2D_LinksAreMutual" fullname="Nour.Play.CellTest.Map2D_LinksAreMutual" runstate="Runnable" result="Passed" duration="0.004222" asserts="3" />
          <test-case id="1-1023" name="Map2D_ToString" fullname="Nour.Play.CellTest.Map2D_ToString" runstate="Runnable" result="Passed" duration="0.000770" asserts="7" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1003" name="DeadEndTest" fullname="Nour.Play.DeadEndTest" runstate="Runnable" testcasecount="1" result="Passed" duration="0.005031" total="1" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
          <test-case id="1-1004" name="DeadEnd_CanFindDeadEnds" fullname="Nour.Play.DeadEndTest.DeadEnd_CanFindDeadEnds" runstate="Runnable" result="Passed" duration="0.004746" asserts="7" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1005" name="DijkstraDistanceTest" fullname="Nour.Play.DijkstraDistanceTest" runstate="Runnable" testcasecount="4" result="Passed" duration="0.011593" total="4" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
          <test-case id="1-1009" name="DijkstraDistance_CanFindLongestTrail" fullname="Nour.Play.DijkstraDistanceTest.DijkstraDistance_CanFindLongestTrail" runstate="Runnable" result="Passed" duration="0.004494" asserts="4" />
          <test-case id="1-1007" name="DijkstraDistance_CanSolveAMaze" fullname="Nour.Play.DijkstraDistanceTest.DijkstraDistance_CanSolveAMaze" runstate="Runnable" result="Passed" duration="0.000795" asserts="4" />
          <test-case id="1-1006" name="DijkstraDistance_FindsAllDistances" fullname="Nour.Play.DijkstraDistanceTest.DijkstraDistance_FindsAllDistances" runstate="Runnable" result="Passed" duration="0.003181" asserts="2" />
          <test-case id="1-1008" name="DijkstraDistance_ReturnsEmptyIfNoSolutionFound" fullname="Nour.Play.DijkstraDistanceTest.DijkstraDistance_ReturnsEmptyIfNoSolutionFound" runstate="Runnable" result="Passed" duration="0.000185" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1010" name="Maze2DTest" fullname="Nour.Play.Maze2DTest" runstate="Runnable" testcasecount="7" result="Passed" duration="0.014710" total="7" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
          <test-case id="1-1017" name="Maze2D_CanParse" fullname="Nour.Play.Maze2DTest.Maze2D_CanParse" runstate="Runnable" result="Passed" duration="0.000579" asserts="16" />
          <test-case id="1-1015" name="Maze2D_CanScaleMap" fullname="Nour.Play.Maze2DTest.Maze2D_CanScaleMap" runstate="Runnable" result="Passed" duration="0.005002" asserts="1" />
          <test-case id="1-1014" name="Maze2D_CellsNeighborsAreValid" fullname="Nour.Play.Maze2DTest.Maze2D_CellsNeighborsAreValid" runstate="Runnable" result="Passed" duration="0.000889" asserts="136" />
          <test-case id="1-1016" name="Maze2D_HasAttributesSet" fullname="Nour.Play.Maze2DTest.Maze2D_HasAttributesSet" runstate="Runnable" result="Passed" duration="0.001290" asserts="2" />
          <test-case id="1-1011" name="Maze2D_IsInitialized" fullname="Nour.Play.Maze2DTest.Maze2D_IsInitialized" runstate="Runnable" result="Passed" duration="0.000155" asserts="4" />
          <test-case id="1-1013" name="Maze2D_ToMapWrongOptions" fullname="Nour.Play.Maze2DTest.Maze2D_ToMapWrongOptions" runstate="Runnable" result="Passed" duration="0.001275" asserts="7" />
          <test-case id="1-1012" name="Maze2D_WrongSize" fullname="Nour.Play.Maze2DTest.Maze2D_WrongSize" runstate="Runnable" result="Passed" duration="0.000294" asserts="5" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1018" name="Maze2DToMap2DConverterTest" fullname="Nour.Play.Maze2DToMap2DConverterTest" runstate="Runnable" testcasecount="2" result="Passed" duration="0.002633" total="2" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
          <test-case id="1-1019" name="Maze2DToMap2DConverter_CanGenerateMap" fullname="Nour.Play.Maze2DToMap2DConverterTest.Maze2DToMap2DConverter_CanGenerateMap" runstate="Runnable" result="Passed" duration="0.000982" asserts="1" />
          <test-case id="1-1020" name="Maze2DToMap2DConverter_ThrowsIfInvalidOptions" fullname="Nour.Play.Maze2DToMap2DConverterTest.Maze2DToMap2DConverter_ThrowsIfInvalidOptions" runstate="Runnable" result="Passed" duration="0.000432" asserts="6" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1025" name="MazeGeneratorTest" fullname="Nour.Play.MazeGeneratorTest" runstate="Runnable" testcasecount="20" result="Passed" duration="0.034564" total="20" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
          <test-suite type="ParameterizedTest" id="1-1041" name="DijkstraDistance_CanFindPaths" fullname="Nour.Play.MazeGeneratorTest.DijkstraDistance_CanFindPaths" runstate="Runnable" testcasecount="6" result="Passed" duration="0.012064" total="6" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
            <test-case id="1-1042" name="DijkstraDistance_CanFindPaths(Nour.Play.Maze.AldousBroderMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.DijkstraDistance_CanFindPaths(Nour.Play.Maze.AldousBroderMazeGenerator)" runstate="Runnable" result="Passed" duration="0.000332" asserts="2" />
            <test-case id="1-1043" name="DijkstraDistance_CanFindPaths(Nour.Play.Maze.BinaryTreeMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.DijkstraDistance_CanFindPaths(Nour.Play.Maze.BinaryTreeMazeGenerator)" runstate="Runnable" result="Passed" duration="0.005954" asserts="2" />
            <test-case id="1-1044" name="DijkstraDistance_CanFindPaths(Nour.Play.Maze.HuntAndKillMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.DijkstraDistance_CanFindPaths(Nour.Play.Maze.HuntAndKillMazeGenerator)" runstate="Runnable" result="Passed" duration="0.000485" asserts="2" />
            <test-case id="1-1045" name="DijkstraDistance_CanFindPaths(Nour.Play.Maze.RecursiveBacktrackerMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.DijkstraDistance_CanFindPaths(Nour.Play.Maze.RecursiveBacktrackerMazeGenerator)" runstate="Runnable" result="Passed" duration="0.000606" asserts="2" />
            <test-case id="1-1046" name="DijkstraDistance_CanFindPaths(Nour.Play.Maze.SidewinderMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.DijkstraDistance_CanFindPaths(Nour.Play.Maze.SidewinderMazeGenerator)" runstate="Runnable" result="Passed" duration="0.000363" asserts="2" />
            <test-case id="1-1047" name="DijkstraDistance_CanFindPaths(Nour.Play.Maze.WilsonsMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.DijkstraDistance_CanFindPaths(Nour.Play.Maze.WilsonsMazeGenerator)" runstate="Runnable" result="Passed" duration="0.000492" asserts="2" />
          </test-suite>
          <test-suite type="ParameterizedTest" id="1-1026" name="MazeGenerator_CanGenerateMazes" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_CanGenerateMazes" runstate="Runnable" testcasecount="6" result="Passed" duration="0.005037" total="6" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
            <test-case id="1-1027" name="MazeGenerator_CanGenerateMazes(Nour.Play.Maze.AldousBroderMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_CanGenerateMazes(Nour.Play.Maze.AldousBroderMazeGenerator)" runstate="Runnable" result="Passed" duration="0.000441" asserts="2" />
            <test-case id="1-1028" name="MazeGenerator_CanGenerateMazes(Nour.Play.Maze.BinaryTreeMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_CanGenerateMazes(Nour.Play.Maze.BinaryTreeMazeGenerator)" runstate="Runnable" result="Passed" duration="0.000472" asserts="2" />
            <test-case id="1-1029" name="MazeGenerator_CanGenerateMazes(Nour.Play.Maze.HuntAndKillMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_CanGenerateMazes(Nour.Play.Maze.HuntAndKillMazeGenerator)" runstate="Runnable" result="Passed" duration="0.000298" asserts="2" />
            <test-case id="1-1030" name="MazeGenerator_CanGenerateMazes(Nour.Play.Maze.RecursiveBacktrackerMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_CanGenerateMazes(Nour.Play.Maze.RecursiveBacktrackerMazeGenerator)" runstate="Runnable" result="Passed" duration="0.000108" asserts="2" />
            <test-case id="1-1031" name="MazeGenerator_CanGenerateMazes(Nour.Play.Maze.SidewinderMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_CanGenerateMazes(Nour.Play.Maze.SidewinderMazeGenerator)" runstate="Runnable" result="Passed" duration="0.000108" asserts="2" />
            <test-case id="1-1032" name="MazeGenerator_CanGenerateMazes(Nour.Play.Maze.WilsonsMazeGenerator)" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_CanGenerateMazes(Nour.Play.Maze.WilsonsMazeGenerator)" runstate="Runnable" result="Passed" duration="0.000135" asserts="2" />
          </test-suite>
          <test-case id="1-1035" name="MazeGenerator_IsFillComplete_Full" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_IsFillComplete_Full" runstate="Runnable" result="Passed" duration="0.005271" asserts="1" />
          <test-case id="1-1040" name="MazeGenerator_IsFillComplete_FullHeight" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_IsFillComplete_FullHeight" runstate="Runnable" result="Passed" duration="0.001467" asserts="1" />
          <test-case id="1-1039" name="MazeGenerator_IsFillComplete_FullWidth" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_IsFillComplete_FullWidth" runstate="Runnable" result="Passed" duration="0.000560" asserts="1" />
          <test-case id="1-1034" name="MazeGenerator_IsFillComplete_Half" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_IsFillComplete_Half" runstate="Runnable" result="Passed" duration="0.000591" asserts="1" />
          <test-case id="1-1038" name="MazeGenerator_IsFillComplete_NinetyPercent" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_IsFillComplete_NinetyPercent" runstate="Runnable" result="Passed" duration="0.000655" asserts="1" />
          <test-case id="1-1036" name="MazeGenerator_IsFillComplete_Quarter" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_IsFillComplete_Quarter" runstate="Runnable" result="Passed" duration="0.000380" asserts="1" />
          <test-case id="1-1037" name="MazeGenerator_IsFillComplete_ThreeQuarters" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_IsFillComplete_ThreeQuarters" runstate="Runnable" result="Passed" duration="0.000571" asserts="1" />
          <test-case id="1-1033" name="MazeGenerator_OnlyFullGenerators" fullname="Nour.Play.MazeGeneratorTest.MazeGenerator_OnlyFullGenerators" runstate="Runnable" result="Passed" duration="0.000243" asserts="2" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1048" name="OptionalTest" fullname="Nour.Play.OptionalTest" runstate="Runnable" testcasecount="6" result="Passed" duration="0.004267" total="6" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
          <test-case id="1-1053" name="Optional_CanBeCastToT" fullname="Nour.Play.OptionalTest.Optional_CanBeCastToT" runstate="Runnable" result="Passed" duration="0.000185" asserts="1" />
          <test-case id="1-1049" name="Optional_Equality" fullname="Nour.Play.OptionalTest.Optional_Equality" runstate="Runnable" result="Passed" duration="0.000161" asserts="2" />
          <test-case id="1-1051" name="Optional_Equals" fullname="Nour.Play.OptionalTest.Optional_Equals" runstate="Runnable" result="Passed" duration="0.000182" asserts="5" />
          <test-case id="1-1052" name="Optional_GetHashCode" fullname="Nour.Play.OptionalTest.Optional_GetHashCode" runstate="Runnable" result="Passed" duration="0.000230" asserts="3" />
          <test-case id="1-1050" name="Optional_ThrowsIfNoValue" fullname="Nour.Play.OptionalTest.Optional_ThrowsIfNoValue" runstate="Runnable" result="Passed" duration="0.000127" asserts="2" />
          <test-case id="1-1054" name="Optional_ToStringShowsValue" fullname="Nour.Play.OptionalTest.Optional_ToStringShowsValue" runstate="Runnable" result="Passed" duration="0.000149" asserts="2" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1055" name="QueueExtensionsTest" fullname="Nour.Play.QueueExtensionsTest" runstate="Runnable" testcasecount="2" result="Passed" duration="0.001393" total="2" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
          <test-case id="1-1057" name="TryDequeue_Dequeues" fullname="Nour.Play.QueueExtensionsTest.TryDequeue_Dequeues" runstate="Runnable" result="Passed" duration="0.000403" asserts="2" />
          <test-case id="1-1056" name="TryDequeue_DoesNotThrow" fullname="Nour.Play.QueueExtensionsTest.TryDequeue_DoesNotThrow" runstate="Runnable" result="Passed" duration="0.000098" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1058" name="VectorTest" fullname="Nour.Play.VectorTest" runstate="Runnable" testcasecount="16" result="Passed" duration="0.015484" total="16" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
          <test-case id="1-1060" name="Size_NotInitialized" fullname="Nour.Play.VectorTest.Size_NotInitialized" runstate="Runnable" result="Passed" duration="0.000264" asserts="2" />
          <test-case id="1-1072" name="Vector_CanAddAndSubtract" fullname="Nour.Play.VectorTest.Vector_CanAddAndSubtract" runstate="Runnable" result="Passed" duration="0.001089" asserts="10" />
          <test-case id="1-1073" name="Vector_CanDivideAndMultiply" fullname="Nour.Play.VectorTest.Vector_CanDivideAndMultiply" runstate="Runnable" result="Passed" duration="0.000832" asserts="7" />
          <test-case id="1-1074" name="Vector_ConstructorChecksArguments" fullname="Nour.Play.VectorTest.Vector_ConstructorChecksArguments" runstate="Runnable" result="Passed" duration="0.000103" asserts="1" />
          <test-case id="1-1066" name="Vector_EmptyIsEmpty" fullname="Nour.Play.VectorTest.Vector_EmptyIsEmpty" runstate="Runnable" result="Passed" duration="0.000073" asserts="1" />
          <test-case id="1-1065" name="Vector_EmptyVectorIsEmpty" fullname="Nour.Play.VectorTest.Vector_EmptyVectorIsEmpty" runstate="Runnable" result="Passed" duration="0.000070" asserts="1" />
          <test-case id="1-1061" name="Vector_EqualityIsCheckedByValue" fullname="Nour.Play.VectorTest.Vector_EqualityIsCheckedByValue" runstate="Runnable" result="Passed" duration="0.000113" asserts="3" />
          <test-case id="1-1062" name="Vector_GetHashCodeIsDerivedFromValue" fullname="Nour.Play.VectorTest.Vector_GetHashCodeIsDerivedFromValue" runstate="Runnable" result="Passed" duration="0.000382" asserts="2" />
          <test-case id="1-1068" name="Vector_GreaterThanChecksAllComponents" fullname="Nour.Play.VectorTest.Vector_GreaterThanChecksAllComponents" runstate="Runnable" result="Passed" duration="0.000854" asserts="5" />
          <test-case id="1-1070" name="Vector_GreaterThanOrEqualsChecksAllComponents" fullname="Nour.Play.VectorTest.Vector_GreaterThanOrEqualsChecksAllComponents" runstate="Runnable" result="Passed" duration="0.000338" asserts="5" />
          <test-case id="1-1059" name="Vector_IsInitialized" fullname="Nour.Play.VectorTest.Vector_IsInitialized" runstate="Runnable" result="Passed" duration="0.000060" asserts="2" />
          <test-case id="1-1067" name="Vector_LessThanChecksAllComponents" fullname="Nour.Play.VectorTest.Vector_LessThanChecksAllComponents" runstate="Runnable" result="Passed" duration="0.000342" asserts="5" />
          <test-case id="1-1069" name="Vector_LessThanOrEqualsChecksAllComponents" fullname="Nour.Play.VectorTest.Vector_LessThanOrEqualsChecksAllComponents" runstate="Runnable" result="Passed" duration="0.000323" asserts="5" />
          <test-case id="1-1071" name="Vector_NotEqualToNull" fullname="Nour.Play.VectorTest.Vector_NotEqualToNull" runstate="Runnable" result="Passed" duration="0.000210" asserts="3" />
          <test-case id="1-1063" name="Vector_ToStringFormat" fullname="Nour.Play.VectorTest.Vector_ToStringFormat" runstate="Runnable" result="Passed" duration="0.000103" asserts="2" />
          <test-case id="1-1064" name="Vector_ZeroVectorIsNotEmpty" fullname="Nour.Play.VectorTest.Vector_ZeroVectorIsNotEmpty" runstate="Runnable" result="Passed" duration="0.000097" asserts="1" />
        </test-suite>
      </test-suite>
    </test-suite>
    <test-suite type="TestFixture" id="1-1000" name="RandomAreaGeneratorTest" fullname="RandomAreaGeneratorTest" runstate="Runnable" testcasecount="2" result="Passed" duration="0.015339" total="2" passed="0" failed="0" inconclusive="0" skipped="0" asserts="0">
      <test-case id="1-1001" name="ZoneGenerator_CanGenerateZones" fullname="RandomAreaGeneratorTest.ZoneGenerator_CanGenerateZones" runstate="Runnable" result="Passed" duration="0.013874" asserts="3006" />
      <test-case id="1-1002" name="ZoneGenerator_CustomSettings" fullname="RandomAreaGeneratorTest.ZoneGenerator_CustomSettings" runstate="Runnable" result="Passed" duration="0.000454" asserts="36" />
    </test-suite>
  </test-suite>
</test-run>